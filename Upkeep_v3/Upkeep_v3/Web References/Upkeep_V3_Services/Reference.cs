//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Upkeep_v3.Upkeep_V3_Services {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Upkeep_V3_ServicesSoap", Namespace="http://tempuri.org/")]
    public partial class Upkeep_V3_Services : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UPDATE_ASSET_REQUEST_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyAsset_ServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CRUD_ASSET_SERVICE_REQUEST_DATAOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Transaction_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Inv_TransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Stock_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Inv_StockOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Inv_ItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Stock_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Inv_Items_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Inv_Item_Stock_DdlOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Inv_Crud_Item_StockOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Inv_Item_Stock_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Inv_Item_Purchase_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Inv_PurchaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Crud_Inv_PurchaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Inv_Crud_ItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Tran_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Tran_Item_DetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Crud_Inv_TransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Crud_Inv_Category_MstOperationCompleted;
        
        private System.Threading.SendOrPostCallback Crud_Inv_SubCategory_MstOperationCompleted;
        
        private System.Threading.SendOrPostCallback Crud_Inv_Item_MstOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_My_Profile_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_My_Profile_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Change_PasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retailer_Escalation_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback My_Profile_Email_VerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_User_ProfilePicOperationCompleted;
        
        private System.Threading.SendOrPostCallback Import_User_MasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Import_Checklist_MasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Schedule_Checklist_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyChecklist_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback CRU_System_SettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Custom_FieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Asset_Custom_FieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchUserEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgetPasswordSendOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SiteMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_statesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_CityOperationCompleted;
        
        private System.Threading.SendOrPostCallback INSERT_Electricity_CategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_WhatSappLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback Close_Ticket_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Store_AttendanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Location_PopulateRootLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback Location_PopulateSubLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback Add_Update_Location_NodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchMenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback RoleMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Assigned_RoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Role_MenuOperationCompleted;
        
        private System.Threading.SendOrPostCallback FETCH_Saved_Role_MENU_RightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_RoleMenuRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Assigned_RoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_RoleListingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_GatePassConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_GatePassConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_GatePassConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GatePassHeader_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GatePassType_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GatePassTerm_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_GatePassConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_GatePassRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_GatePassRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyRequestGatePassOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyActionableGatePassOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_GatePassRequest_Approval_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAction_GatePassRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_GatePass_MISOperationCompleted;
        
        private System.Threading.SendOrPostCallback GatePassConfiguration_Document_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_WorkPermitConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_AnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_WorkPermitConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_WorkPermitConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_WorkPermitRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_WorkPermitRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_WorkPermitRequestSavedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_WorkPermitRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyRequestWorkPermitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyActionableWorkPermitOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_DashboardCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_GatePassConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_WorkPermitConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_WorkPermitSavedConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_WorkPermit_MISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_WPConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Chk_AnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_ChecklistConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_ChecklistConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_ChecklistConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyChecklistOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_CHKConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyChecklistReportListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_My_Department_ChecklistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyChecklistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Checklist_ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Checklist_Consolidated_ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_Checklist_ScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_Checklist_Schedule_NEWOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Update_VMSConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_VMSConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_VMSConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_VMSRequestListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_VMSRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_VMSRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_VMSFormURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_VMSConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Update_CSMConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_CSMConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_CSMConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_CSMConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_CSMRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_CSMRequestListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_CSMRequestDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_AnswerForAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_User_UserGroupListGPWPOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_CompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Error_LogOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Asset_DropDownOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Asset_Vendor_DropDownOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASSET_Insert_AssetTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASSET_Insert_AssetCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ASSET_INSERT_GRNL_MASTEROperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MyAssetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_ASSET_REQUEST_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback INSERT_ASSET_REQUEST_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Dashboard_AdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Feedback_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Dashboard_EmployeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Dashboard_RetailerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_License_Module_listOperationCompleted;
        
        private System.Threading.SendOrPostCallback SUPPORT_Fetch_CommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SUPPORT_Save_Comment_ClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback SUPPORT_View_Request_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SUPPORT_Save_RequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SUPPORT_Fetch_RequestsOperationCompleted;
        
        private System.Threading.SendOrPostCallback INV_ItemStock_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback INV_Fetch_Items_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMS_Vendor_CostOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMS_Fetch_Department_TransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMS_Category_MstOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMS_SubCategory_MstOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMS_Fetch_Vendor_TransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LMS_ItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LMS_ItemDetails_Dept_TransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMS_Save_Department_TransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LMS_Save_Vendor_TransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LMS_Dept_Transaction_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LMS_ItemDetails_Vendor_TransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LMS_Vendor_ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LMS_Vendor_Transaction_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_InvoicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback MenuMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomReports_RUOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserTypeMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DepartmentMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_ZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Sub_LocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_DepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_User_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Email_Verification_MailOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback PriorityMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FrequencyMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ZoneMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LocationMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback INV_ItemMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubLocationMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGroupMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchUserGrpOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_CategorySubCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkflowMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_User_UserGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CategoryMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetailerPunch_CROperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_CRUD_Vendor_MstOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubCategoryMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback BindLocationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_LocationTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Ticket_WorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Ticket_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Ticket_MyActionableOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_Ticket_MyActionable_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accept_TicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_CTT_ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Bind_Ticket_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ChartDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Employee_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback fetchStoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback Retailer_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Event_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback EventDetails_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback bindEventDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_FeedbackFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CustomerDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_EventQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Event_QuestionIUOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MIS_ReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback Event_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Fetch_MIS_Report_ExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportRetailerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddChecklistMaster_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecklistPoint_CRUDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChecklistRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_ChecklistPointsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Upkeep_V3_Services() {
            this.Url = global::Upkeep_v3.Properties.Settings.Default.Upkeep_v3_Upkeep_V3_Services_Upkeep_V3_Services;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UPDATE_ASSET_REQUEST_DetailsCompletedEventHandler UPDATE_ASSET_REQUEST_DetailsCompleted;
        
        /// <remarks/>
        public event INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompletedEventHandler INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompleted;
        
        /// <remarks/>
        public event Fetch_MyAsset_ServiceCompletedEventHandler Fetch_MyAsset_ServiceCompleted;
        
        /// <remarks/>
        public event CRUD_ASSET_SERVICE_REQUEST_DATACompletedEventHandler CRUD_ASSET_SERVICE_REQUEST_DATACompleted;
        
        /// <remarks/>
        public event Fetch_Transaction_ListCompletedEventHandler Fetch_Transaction_ListCompleted;
        
        /// <remarks/>
        public event Delete_Inv_TransactionCompletedEventHandler Delete_Inv_TransactionCompleted;
        
        /// <remarks/>
        public event Fetch_Stock_ListCompletedEventHandler Fetch_Stock_ListCompleted;
        
        /// <remarks/>
        public event Delete_Inv_StockCompletedEventHandler Delete_Inv_StockCompleted;
        
        /// <remarks/>
        public event Delete_Inv_ItemCompletedEventHandler Delete_Inv_ItemCompleted;
        
        /// <remarks/>
        public event Fetch_Stock_DetailCompletedEventHandler Fetch_Stock_DetailCompleted;
        
        /// <remarks/>
        public event Fetch_Inv_Items_ListCompletedEventHandler Fetch_Inv_Items_ListCompleted;
        
        /// <remarks/>
        public event Fetch_Inv_Item_Stock_DdlCompletedEventHandler Fetch_Inv_Item_Stock_DdlCompleted;
        
        /// <remarks/>
        public event Fetch_Inv_Crud_Item_StockCompletedEventHandler Fetch_Inv_Crud_Item_StockCompleted;
        
        /// <remarks/>
        public event Fetch_Inv_Item_Stock_DataCompletedEventHandler Fetch_Inv_Item_Stock_DataCompleted;
        
        /// <remarks/>
        public event Fetch_Inv_Item_Purchase_ListCompletedEventHandler Fetch_Inv_Item_Purchase_ListCompleted;
        
        /// <remarks/>
        public event Delete_Inv_PurchaseCompletedEventHandler Delete_Inv_PurchaseCompleted;
        
        /// <remarks/>
        public event Crud_Inv_PurchaseCompletedEventHandler Crud_Inv_PurchaseCompleted;
        
        /// <remarks/>
        public event Fetch_Inv_Crud_ItemCompletedEventHandler Fetch_Inv_Crud_ItemCompleted;
        
        /// <remarks/>
        public event Fetch_Tran_DetailCompletedEventHandler Fetch_Tran_DetailCompleted;
        
        /// <remarks/>
        public event Fetch_Tran_Item_DetailCompletedEventHandler Fetch_Tran_Item_DetailCompleted;
        
        /// <remarks/>
        public event Crud_Inv_TransactionCompletedEventHandler Crud_Inv_TransactionCompleted;
        
        /// <remarks/>
        public event Crud_Inv_Category_MstCompletedEventHandler Crud_Inv_Category_MstCompleted;
        
        /// <remarks/>
        public event Crud_Inv_SubCategory_MstCompletedEventHandler Crud_Inv_SubCategory_MstCompleted;
        
        /// <remarks/>
        public event Crud_Inv_Item_MstCompletedEventHandler Crud_Inv_Item_MstCompleted;
        
        /// <remarks/>
        public event Fetch_My_Profile_DetailsCompletedEventHandler Fetch_My_Profile_DetailsCompleted;
        
        /// <remarks/>
        public event Update_My_Profile_DetailsCompletedEventHandler Update_My_Profile_DetailsCompleted;
        
        /// <remarks/>
        public event Update_Change_PasswordCompletedEventHandler Update_Change_PasswordCompleted;
        
        /// <remarks/>
        public event Retailer_Escalation_CRUDCompletedEventHandler Retailer_Escalation_CRUDCompleted;
        
        /// <remarks/>
        public event My_Profile_Email_VerificationCompletedEventHandler My_Profile_Email_VerificationCompleted;
        
        /// <remarks/>
        public event Update_User_ProfilePicCompletedEventHandler Update_User_ProfilePicCompleted;
        
        /// <remarks/>
        public event Import_User_MasterCompletedEventHandler Import_User_MasterCompleted;
        
        /// <remarks/>
        public event Import_Checklist_MasterCompletedEventHandler Import_Checklist_MasterCompleted;
        
        /// <remarks/>
        public event Schedule_Checklist_CRUDCompletedEventHandler Schedule_Checklist_CRUDCompleted;
        
        /// <remarks/>
        public event Fetch_MyChecklist_NEWCompletedEventHandler Fetch_MyChecklist_NEWCompleted;
        
        /// <remarks/>
        public event CRU_System_SettingCompletedEventHandler CRU_System_SettingCompleted;
        
        /// <remarks/>
        public event Fetch_Custom_FieldsCompletedEventHandler Fetch_Custom_FieldsCompleted;
        
        /// <remarks/>
        public event Fetch_Asset_Custom_FieldsCompletedEventHandler Fetch_Asset_Custom_FieldsCompleted;
        
        /// <remarks/>
        public event FetchUserEmailCompletedEventHandler FetchUserEmailCompleted;
        
        /// <remarks/>
        public event ForgetPasswordSendOTPCompletedEventHandler ForgetPasswordSendOTPCompleted;
        
        /// <remarks/>
        public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;
        
        /// <remarks/>
        public event SiteMaster_CRUDCompletedEventHandler SiteMaster_CRUDCompleted;
        
        /// <remarks/>
        public event Fetch_statesCompletedEventHandler Fetch_statesCompleted;
        
        /// <remarks/>
        public event Fetch_CityCompletedEventHandler Fetch_CityCompleted;
        
        /// <remarks/>
        public event INSERT_Electricity_CategoryCompletedEventHandler INSERT_Electricity_CategoryCompleted;
        
        /// <remarks/>
        public event Insert_WhatSappLogCompletedEventHandler Insert_WhatSappLogCompleted;
        
        /// <remarks/>
        public event Close_Ticket_DetailsCompletedEventHandler Close_Ticket_DetailsCompleted;
        
        /// <remarks/>
        public event Fetch_Store_AttendanceCompletedEventHandler Fetch_Store_AttendanceCompleted;
        
        /// <remarks/>
        public event Location_PopulateRootLevelCompletedEventHandler Location_PopulateRootLevelCompleted;
        
        /// <remarks/>
        public event Location_PopulateSubLevelCompletedEventHandler Location_PopulateSubLevelCompleted;
        
        /// <remarks/>
        public event Add_Update_Location_NodeCompletedEventHandler Add_Update_Location_NodeCompleted;
        
        /// <remarks/>
        public event FetchMenuCompletedEventHandler FetchMenuCompleted;
        
        /// <remarks/>
        public event RoleMaster_CRUDCompletedEventHandler RoleMaster_CRUDCompleted;
        
        /// <remarks/>
        public event Fetch_Assigned_RoleCompletedEventHandler Fetch_Assigned_RoleCompleted;
        
        /// <remarks/>
        public event Fetch_Role_MenuCompletedEventHandler Fetch_Role_MenuCompleted;
        
        /// <remarks/>
        public event FETCH_Saved_Role_MENU_RightsCompletedEventHandler FETCH_Saved_Role_MENU_RightsCompleted;
        
        /// <remarks/>
        public event Insert_RoleMenuRightsCompletedEventHandler Insert_RoleMenuRightsCompleted;
        
        /// <remarks/>
        public event Insert_Assigned_RoleCompletedEventHandler Insert_Assigned_RoleCompleted;
        
        /// <remarks/>
        public event Fetch_RoleListingCompletedEventHandler Fetch_RoleListingCompleted;
        
        /// <remarks/>
        public event Insert_GatePassConfigurationCompletedEventHandler Insert_GatePassConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_GatePassConfigurationCompletedEventHandler Fetch_GatePassConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_GatePassConfigurationCompletedEventHandler Bind_GatePassConfigurationCompleted;
        
        /// <remarks/>
        public event GatePassHeader_CRUDCompletedEventHandler GatePassHeader_CRUDCompleted;
        
        /// <remarks/>
        public event GatePassType_CRUDCompletedEventHandler GatePassType_CRUDCompleted;
        
        /// <remarks/>
        public event GatePassTerm_CRUDCompletedEventHandler GatePassTerm_CRUDCompleted;
        
        /// <remarks/>
        public event Update_GatePassConfigurationCompletedEventHandler Update_GatePassConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_GatePassRequestDetailsCompletedEventHandler Bind_GatePassRequestDetailsCompleted;
        
        /// <remarks/>
        public event Insert_GatePassRequestCompletedEventHandler Insert_GatePassRequestCompleted;
        
        /// <remarks/>
        public event Fetch_MyRequestGatePassCompletedEventHandler Fetch_MyRequestGatePassCompleted;
        
        /// <remarks/>
        public event Fetch_MyActionableGatePassCompletedEventHandler Fetch_MyActionableGatePassCompleted;
        
        /// <remarks/>
        public event Fetch_GatePassRequest_Approval_DetailsCompletedEventHandler Fetch_GatePassRequest_Approval_DetailsCompleted;
        
        /// <remarks/>
        public event UpdateAction_GatePassRequestCompletedEventHandler UpdateAction_GatePassRequestCompleted;
        
        /// <remarks/>
        public event Fetch_GatePass_MISCompletedEventHandler Fetch_GatePass_MISCompleted;
        
        /// <remarks/>
        public event GatePassConfiguration_Document_CRUDCompletedEventHandler GatePassConfiguration_Document_CRUDCompleted;
        
        /// <remarks/>
        public event Insert_WorkPermitConfigurationCompletedEventHandler Insert_WorkPermitConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_AnswerCompletedEventHandler Fetch_AnswerCompleted;
        
        /// <remarks/>
        public event Fetch_WorkPermitConfigurationCompletedEventHandler Fetch_WorkPermitConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_WorkPermitConfigurationCompletedEventHandler Bind_WorkPermitConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_WorkPermitRequestDetailsCompletedEventHandler Bind_WorkPermitRequestDetailsCompleted;
        
        /// <remarks/>
        public event Insert_WorkPermitRequestCompletedEventHandler Insert_WorkPermitRequestCompleted;
        
        /// <remarks/>
        public event Fetch_WorkPermitRequestSavedDataCompletedEventHandler Fetch_WorkPermitRequestSavedDataCompleted;
        
        /// <remarks/>
        public event Update_WorkPermitRequestCompletedEventHandler Update_WorkPermitRequestCompleted;
        
        /// <remarks/>
        public event Fetch_MyRequestWorkPermitCompletedEventHandler Fetch_MyRequestWorkPermitCompleted;
        
        /// <remarks/>
        public event Fetch_MyActionableWorkPermitCompletedEventHandler Fetch_MyActionableWorkPermitCompleted;
        
        /// <remarks/>
        public event Fetch_DashboardCountCompletedEventHandler Fetch_DashboardCountCompleted;
        
        /// <remarks/>
        public event Delete_GatePassConfigurationCompletedEventHandler Delete_GatePassConfigurationCompleted;
        
        /// <remarks/>
        public event Update_WorkPermitConfigurationCompletedEventHandler Update_WorkPermitConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_WorkPermitSavedConfigurationCompletedEventHandler Bind_WorkPermitSavedConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_WorkPermit_MISCompletedEventHandler Fetch_WorkPermit_MISCompleted;
        
        /// <remarks/>
        public event Delete_WPConfigurationCompletedEventHandler Delete_WPConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_Chk_AnswerCompletedEventHandler Fetch_Chk_AnswerCompleted;
        
        /// <remarks/>
        public event Update_ChecklistConfigurationCompletedEventHandler Update_ChecklistConfigurationCompleted;
        
        /// <remarks/>
        public event Insert_ChecklistConfigurationCompletedEventHandler Insert_ChecklistConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_ChecklistConfigurationCompletedEventHandler Bind_ChecklistConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_MyChecklistCompletedEventHandler Fetch_MyChecklistCompleted;
        
        /// <remarks/>
        public event Delete_CHKConfigurationCompletedEventHandler Delete_CHKConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_MyChecklistReportListCompletedEventHandler Fetch_MyChecklistReportListCompleted;
        
        /// <remarks/>
        public event Fetch_My_Department_ChecklistsCompletedEventHandler Fetch_My_Department_ChecklistsCompleted;
        
        /// <remarks/>
        public event Fetch_MyChecklistsCompletedEventHandler Fetch_MyChecklistsCompleted;
        
        /// <remarks/>
        public event Fetch_Checklist_ReportCompletedEventHandler Fetch_Checklist_ReportCompleted;
        
        /// <remarks/>
        public event Fetch_Checklist_Consolidated_ReportCompletedEventHandler Fetch_Checklist_Consolidated_ReportCompleted;
        
        /// <remarks/>
        public event Save_Checklist_ScheduleCompletedEventHandler Save_Checklist_ScheduleCompleted;
        
        /// <remarks/>
        public event Save_Checklist_Schedule_NEWCompletedEventHandler Save_Checklist_Schedule_NEWCompleted;
        
        /// <remarks/>
        public event Insert_Update_VMSConfigurationCompletedEventHandler Insert_Update_VMSConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_VMSConfigurationCompletedEventHandler Fetch_VMSConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_VMSConfigurationCompletedEventHandler Bind_VMSConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_VMSRequestListCompletedEventHandler Fetch_VMSRequestListCompleted;
        
        /// <remarks/>
        public event Bind_VMSRequestDetailsCompletedEventHandler Bind_VMSRequestDetailsCompleted;
        
        /// <remarks/>
        public event Insert_VMSRequestCompletedEventHandler Insert_VMSRequestCompleted;
        
        /// <remarks/>
        public event Fetch_VMSFormURLCompletedEventHandler Fetch_VMSFormURLCompleted;
        
        /// <remarks/>
        public event Delete_VMSConfigurationCompletedEventHandler Delete_VMSConfigurationCompleted;
        
        /// <remarks/>
        public event Insert_Update_CSMConfigurationCompletedEventHandler Insert_Update_CSMConfigurationCompleted;
        
        /// <remarks/>
        public event Fetch_CSMConfigurationCompletedEventHandler Fetch_CSMConfigurationCompleted;
        
        /// <remarks/>
        public event Bind_CSMConfigurationCompletedEventHandler Bind_CSMConfigurationCompleted;
        
        /// <remarks/>
        public event Delete_CSMConfigurationCompletedEventHandler Delete_CSMConfigurationCompleted;
        
        /// <remarks/>
        public event Insert_CSMRequestCompletedEventHandler Insert_CSMRequestCompleted;
        
        /// <remarks/>
        public event Fetch_CSMRequestListCompletedEventHandler Fetch_CSMRequestListCompleted;
        
        /// <remarks/>
        public event Bind_CSMRequestDetailsCompletedEventHandler Bind_CSMRequestDetailsCompleted;
        
        /// <remarks/>
        public event Fetch_AnswerForAllCompletedEventHandler Fetch_AnswerForAllCompleted;
        
        /// <remarks/>
        public event Fetch_User_UserGroupListGPWPCompletedEventHandler Fetch_User_UserGroupListGPWPCompleted;
        
        /// <remarks/>
        public event Fetch_CompanyCompletedEventHandler Fetch_CompanyCompleted;
        
        /// <remarks/>
        public event Error_LogCompletedEventHandler Error_LogCompleted;
        
        /// <remarks/>
        public event Fetch_Asset_DropDownCompletedEventHandler Fetch_Asset_DropDownCompleted;
        
        /// <remarks/>
        public event Fetch_Asset_Vendor_DropDownCompletedEventHandler Fetch_Asset_Vendor_DropDownCompleted;
        
        /// <remarks/>
        public event ASSET_Insert_AssetTypeCompletedEventHandler ASSET_Insert_AssetTypeCompleted;
        
        /// <remarks/>
        public event ASSET_Insert_AssetCategoryCompletedEventHandler ASSET_Insert_AssetCategoryCompleted;
        
        /// <remarks/>
        public event ASSET_INSERT_GRNL_MASTERCompletedEventHandler ASSET_INSERT_GRNL_MASTERCompleted;
        
        /// <remarks/>
        public event Fetch_MyAssetCompletedEventHandler Fetch_MyAssetCompleted;
        
        /// <remarks/>
        public event Fetch_ASSET_REQUEST_DetailsCompletedEventHandler Fetch_ASSET_REQUEST_DetailsCompleted;
        
        /// <remarks/>
        public event INSERT_ASSET_REQUEST_DetailsCompletedEventHandler INSERT_ASSET_REQUEST_DetailsCompleted;
        
        /// <remarks/>
        public event INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompletedEventHandler INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event Fetch_Dashboard_AdminCompletedEventHandler Fetch_Dashboard_AdminCompleted;
        
        /// <remarks/>
        public event Fetch_Feedback_DetailsCompletedEventHandler Fetch_Feedback_DetailsCompleted;
        
        /// <remarks/>
        public event Fetch_Dashboard_EmployeeCompletedEventHandler Fetch_Dashboard_EmployeeCompleted;
        
        /// <remarks/>
        public event Fetch_Dashboard_RetailerCompletedEventHandler Fetch_Dashboard_RetailerCompleted;
        
        /// <remarks/>
        public event Fetch_License_Module_listCompletedEventHandler Fetch_License_Module_listCompleted;
        
        /// <remarks/>
        public event SUPPORT_Fetch_CommentsCompletedEventHandler SUPPORT_Fetch_CommentsCompleted;
        
        /// <remarks/>
        public event SUPPORT_Save_Comment_ClientCompletedEventHandler SUPPORT_Save_Comment_ClientCompleted;
        
        /// <remarks/>
        public event SUPPORT_View_Request_DetailsCompletedEventHandler SUPPORT_View_Request_DetailsCompleted;
        
        /// <remarks/>
        public event SUPPORT_Save_RequestCompletedEventHandler SUPPORT_Save_RequestCompleted;
        
        /// <remarks/>
        public event SUPPORT_Fetch_RequestsCompletedEventHandler SUPPORT_Fetch_RequestsCompleted;
        
        /// <remarks/>
        public event INV_ItemStock_CRUDCompletedEventHandler INV_ItemStock_CRUDCompleted;
        
        /// <remarks/>
        public event INV_Fetch_Items_ListCompletedEventHandler INV_Fetch_Items_ListCompleted;
        
        /// <remarks/>
        public event LMS_Vendor_CostCompletedEventHandler LMS_Vendor_CostCompleted;
        
        /// <remarks/>
        public event LMS_Fetch_Department_TransactionsCompletedEventHandler LMS_Fetch_Department_TransactionsCompleted;
        
        /// <remarks/>
        public event LMS_Category_MstCompletedEventHandler LMS_Category_MstCompleted;
        
        /// <remarks/>
        public event LMS_SubCategory_MstCompletedEventHandler LMS_SubCategory_MstCompleted;
        
        /// <remarks/>
        public event LMS_Fetch_Vendor_TransactionsCompletedEventHandler LMS_Fetch_Vendor_TransactionsCompleted;
        
        /// <remarks/>
        public event Fetch_LMS_ItemListCompletedEventHandler Fetch_LMS_ItemListCompleted;
        
        /// <remarks/>
        public event Fetch_LMS_ItemDetails_Dept_TransactionCompletedEventHandler Fetch_LMS_ItemDetails_Dept_TransactionCompleted;
        
        /// <remarks/>
        public event LMS_Save_Department_TransactionCompletedEventHandler LMS_Save_Department_TransactionCompleted;
        
        /// <remarks/>
        public event LMS_Save_Vendor_TransactionCompletedEventHandler LMS_Save_Vendor_TransactionCompleted;
        
        /// <remarks/>
        public event Fetch_LMS_Dept_Transaction_DetailsCompletedEventHandler Fetch_LMS_Dept_Transaction_DetailsCompleted;
        
        /// <remarks/>
        public event Fetch_LMS_ItemDetails_Vendor_TransactionCompletedEventHandler Fetch_LMS_ItemDetails_Vendor_TransactionCompleted;
        
        /// <remarks/>
        public event Fetch_LMS_Vendor_ListCompletedEventHandler Fetch_LMS_Vendor_ListCompleted;
        
        /// <remarks/>
        public event Fetch_LMS_Vendor_Transaction_DetailsCompletedEventHandler Fetch_LMS_Vendor_Transaction_DetailsCompleted;
        
        /// <remarks/>
        public event Fetch_InvoicesCompletedEventHandler Fetch_InvoicesCompleted;
        
        /// <remarks/>
        public event MenuMaster_CRUDCompletedEventHandler MenuMaster_CRUDCompleted;
        
        /// <remarks/>
        public event CustomReports_RUCompletedEventHandler CustomReports_RUCompleted;
        
        /// <remarks/>
        public event UserTypeMaster_CRUDCompletedEventHandler UserTypeMaster_CRUDCompleted;
        
        /// <remarks/>
        public event DepartmentMaster_CRUDCompletedEventHandler DepartmentMaster_CRUDCompleted;
        
        /// <remarks/>
        public event Fetch_ZoneCompletedEventHandler Fetch_ZoneCompleted;
        
        /// <remarks/>
        public event Fetch_LocationCompletedEventHandler Fetch_LocationCompleted;
        
        /// <remarks/>
        public event Fetch_Sub_LocationCompletedEventHandler Fetch_Sub_LocationCompleted;
        
        /// <remarks/>
        public event Fetch_DepartmentCompletedEventHandler Fetch_DepartmentCompleted;
        
        /// <remarks/>
        public event Fetch_User_TypeCompletedEventHandler Fetch_User_TypeCompleted;
        
        /// <remarks/>
        public event UserMaster_CRUDCompletedEventHandler UserMaster_CRUDCompleted;
        
        /// <remarks/>
        public event Email_Verification_MailCompletedEventHandler Email_Verification_MailCompleted;
        
        /// <remarks/>
        public event LoginUserCompletedEventHandler LoginUserCompleted;
        
        /// <remarks/>
        public event PriorityMaster_CRUDCompletedEventHandler PriorityMaster_CRUDCompleted;
        
        /// <remarks/>
        public event FrequencyMaster_CRUDCompletedEventHandler FrequencyMaster_CRUDCompleted;
        
        /// <remarks/>
        public event ZoneMaster_CRUDCompletedEventHandler ZoneMaster_CRUDCompleted;
        
        /// <remarks/>
        public event LocationMaster_CRUDCompletedEventHandler LocationMaster_CRUDCompleted;
        
        /// <remarks/>
        public event INV_ItemMaster_CRUDCompletedEventHandler INV_ItemMaster_CRUDCompleted;
        
        /// <remarks/>
        public event SubLocationMaster_CRUDCompletedEventHandler SubLocationMaster_CRUDCompleted;
        
        /// <remarks/>
        public event UserGroupMaster_CRUDCompletedEventHandler UserGroupMaster_CRUDCompleted;
        
        /// <remarks/>
        public event FetchUserGrpCompletedEventHandler FetchUserGrpCompleted;
        
        /// <remarks/>
        public event Fetch_CategorySubCategoryCompletedEventHandler Fetch_CategorySubCategoryCompleted;
        
        /// <remarks/>
        public event WorkflowMaster_CRUDCompletedEventHandler WorkflowMaster_CRUDCompleted;
        
        /// <remarks/>
        public event Fetch_User_UserGroupListCompletedEventHandler Fetch_User_UserGroupListCompleted;
        
        /// <remarks/>
        public event CategoryMaster_CRUDCompletedEventHandler CategoryMaster_CRUDCompleted;
        
        /// <remarks/>
        public event RetailerPunch_CRCompletedEventHandler RetailerPunch_CRCompleted;
        
        /// <remarks/>
        public event Fetch_CRUD_Vendor_MstCompletedEventHandler Fetch_CRUD_Vendor_MstCompleted;
        
        /// <remarks/>
        public event SubCategoryMaster_CRUDCompletedEventHandler SubCategoryMaster_CRUDCompleted;
        
        /// <remarks/>
        public event BindLocationDetailsCompletedEventHandler BindLocationDetailsCompleted;
        
        /// <remarks/>
        public event Fetch_LocationTreeCompletedEventHandler Fetch_LocationTreeCompleted;
        
        /// <remarks/>
        public event Fetch_Ticket_WorkflowCompletedEventHandler Fetch_Ticket_WorkflowCompleted;
        
        /// <remarks/>
        public event Insert_Ticket_DetailsCompletedEventHandler Insert_Ticket_DetailsCompleted;
        
        /// <remarks/>
        public event Fetch_Ticket_MyActionableCompletedEventHandler Fetch_Ticket_MyActionableCompleted;
        
        /// <remarks/>
        public event Fetch_Ticket_MyActionable_DetailsCompletedEventHandler Fetch_Ticket_MyActionable_DetailsCompleted;
        
        /// <remarks/>
        public event Accept_TicketCompletedEventHandler Accept_TicketCompleted;
        
        /// <remarks/>
        public event Fetch_CTT_ReportCompletedEventHandler Fetch_CTT_ReportCompleted;
        
        /// <remarks/>
        public event Bind_Ticket_DetailsCompletedEventHandler Bind_Ticket_DetailsCompleted;
        
        /// <remarks/>
        public event Get_ChartDataCompletedEventHandler Get_ChartDataCompleted;
        
        /// <remarks/>
        public event Employee_CRUDCompletedEventHandler Employee_CRUDCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event fetchStoreCompletedEventHandler fetchStoreCompleted;
        
        /// <remarks/>
        public event Retailer_CRUDCompletedEventHandler Retailer_CRUDCompleted;
        
        /// <remarks/>
        public event Event_InsertCompletedEventHandler Event_InsertCompleted;
        
        /// <remarks/>
        public event EventDetails_CRUDCompletedEventHandler EventDetails_CRUDCompleted;
        
        /// <remarks/>
        public event bindEventDetailsCompletedEventHandler bindEventDetailsCompleted;
        
        /// <remarks/>
        public event Insert_FeedbackFormCompletedEventHandler Insert_FeedbackFormCompleted;
        
        /// <remarks/>
        public event Get_CustomerDetailsCompletedEventHandler Get_CustomerDetailsCompleted;
        
        /// <remarks/>
        public event Get_EventQuestionsCompletedEventHandler Get_EventQuestionsCompleted;
        
        /// <remarks/>
        public event Event_QuestionIUCompletedEventHandler Event_QuestionIUCompleted;
        
        /// <remarks/>
        public event Fetch_MIS_ReportCompletedEventHandler Fetch_MIS_ReportCompleted;
        
        /// <remarks/>
        public event Event_UpdateCompletedEventHandler Event_UpdateCompleted;
        
        /// <remarks/>
        public event GetEventListCompletedEventHandler GetEventListCompleted;
        
        /// <remarks/>
        public event Fetch_MIS_Report_ExcelCompletedEventHandler Fetch_MIS_Report_ExcelCompleted;
        
        /// <remarks/>
        public event ImportRetailerCompletedEventHandler ImportRetailerCompleted;
        
        /// <remarks/>
        public event AddChecklistMaster_CRUDCompletedEventHandler AddChecklistMaster_CRUDCompleted;
        
        /// <remarks/>
        public event ChecklistPoint_CRUDCompletedEventHandler ChecklistPoint_CRUDCompleted;
        
        /// <remarks/>
        public event ChecklistRequestCompletedEventHandler ChecklistRequestCompleted;
        
        /// <remarks/>
        public event Update_ChecklistPointsCompletedEventHandler Update_ChecklistPointsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UPDATE_ASSET_REQUEST_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UPDATE_ASSET_REQUEST_Details(string LoggedInUserID, string TransactionID, string AssetXml, string AssetAmcXml, string AssetServiceXml) {
            object[] results = this.Invoke("UPDATE_ASSET_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        TransactionID,
                        AssetXml,
                        AssetAmcXml,
                        AssetServiceXml});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UPDATE_ASSET_REQUEST_DetailsAsync(string LoggedInUserID, string TransactionID, string AssetXml, string AssetAmcXml, string AssetServiceXml) {
            this.UPDATE_ASSET_REQUEST_DetailsAsync(LoggedInUserID, TransactionID, AssetXml, AssetAmcXml, AssetServiceXml, null);
        }
        
        /// <remarks/>
        public void UPDATE_ASSET_REQUEST_DetailsAsync(string LoggedInUserID, string TransactionID, string AssetXml, string AssetAmcXml, string AssetServiceXml, object userState) {
            if ((this.UPDATE_ASSET_REQUEST_DetailsOperationCompleted == null)) {
                this.UPDATE_ASSET_REQUEST_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUPDATE_ASSET_REQUEST_DetailsOperationCompleted);
            }
            this.InvokeAsync("UPDATE_ASSET_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        TransactionID,
                        AssetXml,
                        AssetAmcXml,
                        AssetServiceXml}, this.UPDATE_ASSET_REQUEST_DetailsOperationCompleted, userState);
        }
        
        private void OnUPDATE_ASSET_REQUEST_DetailsOperationCompleted(object arg) {
            if ((this.UPDATE_ASSET_REQUEST_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UPDATE_ASSET_REQUEST_DetailsCompleted(this, new UPDATE_ASSET_REQUEST_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INSERT_UPDATE_ASSET_AMC_REQUEST_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet INSERT_UPDATE_ASSET_AMC_REQUEST_Details(string LoggedInUserID, string TransactionID, string AssetAmcXml, string Flag) {
            object[] results = this.Invoke("INSERT_UPDATE_ASSET_AMC_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        TransactionID,
                        AssetAmcXml,
                        Flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsAsync(string LoggedInUserID, string TransactionID, string AssetAmcXml, string Flag) {
            this.INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsAsync(LoggedInUserID, TransactionID, AssetAmcXml, Flag, null);
        }
        
        /// <remarks/>
        public void INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsAsync(string LoggedInUserID, string TransactionID, string AssetAmcXml, string Flag, object userState) {
            if ((this.INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsOperationCompleted == null)) {
                this.INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINSERT_UPDATE_ASSET_AMC_REQUEST_DetailsOperationCompleted);
            }
            this.InvokeAsync("INSERT_UPDATE_ASSET_AMC_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        TransactionID,
                        AssetAmcXml,
                        Flag}, this.INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsOperationCompleted, userState);
        }
        
        private void OnINSERT_UPDATE_ASSET_AMC_REQUEST_DetailsOperationCompleted(object arg) {
            if ((this.INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompleted(this, new INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyAsset_Service", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyAsset_Service(string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyAsset_Service", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyAsset_ServiceAsync(string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_MyAsset_ServiceAsync(LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyAsset_ServiceAsync(string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyAsset_ServiceOperationCompleted == null)) {
                this.Fetch_MyAsset_ServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyAsset_ServiceOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyAsset_Service", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_MyAsset_ServiceOperationCompleted, userState);
        }
        
        private void OnFetch_MyAsset_ServiceOperationCompleted(object arg) {
            if ((this.Fetch_MyAsset_ServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyAsset_ServiceCompleted(this, new Fetch_MyAsset_ServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CRUD_ASSET_SERVICE_REQUEST_DATA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CRUD_ASSET_SERVICE_REQUEST_DATA(string LoggedInUserID, string AssetID, string ServiceScheduleID, string AssetServiceXml, string Flag) {
            object[] results = this.Invoke("CRUD_ASSET_SERVICE_REQUEST_DATA", new object[] {
                        LoggedInUserID,
                        AssetID,
                        ServiceScheduleID,
                        AssetServiceXml,
                        Flag});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CRUD_ASSET_SERVICE_REQUEST_DATAAsync(string LoggedInUserID, string AssetID, string ServiceScheduleID, string AssetServiceXml, string Flag) {
            this.CRUD_ASSET_SERVICE_REQUEST_DATAAsync(LoggedInUserID, AssetID, ServiceScheduleID, AssetServiceXml, Flag, null);
        }
        
        /// <remarks/>
        public void CRUD_ASSET_SERVICE_REQUEST_DATAAsync(string LoggedInUserID, string AssetID, string ServiceScheduleID, string AssetServiceXml, string Flag, object userState) {
            if ((this.CRUD_ASSET_SERVICE_REQUEST_DATAOperationCompleted == null)) {
                this.CRUD_ASSET_SERVICE_REQUEST_DATAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCRUD_ASSET_SERVICE_REQUEST_DATAOperationCompleted);
            }
            this.InvokeAsync("CRUD_ASSET_SERVICE_REQUEST_DATA", new object[] {
                        LoggedInUserID,
                        AssetID,
                        ServiceScheduleID,
                        AssetServiceXml,
                        Flag}, this.CRUD_ASSET_SERVICE_REQUEST_DATAOperationCompleted, userState);
        }
        
        private void OnCRUD_ASSET_SERVICE_REQUEST_DATAOperationCompleted(object arg) {
            if ((this.CRUD_ASSET_SERVICE_REQUEST_DATACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CRUD_ASSET_SERVICE_REQUEST_DATACompleted(this, new CRUD_ASSET_SERVICE_REQUEST_DATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Transaction_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Transaction_List(string LoggedInUserID, string CompanyID) {
            object[] results = this.Invoke("Fetch_Transaction_List", new object[] {
                        LoggedInUserID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Transaction_ListAsync(string LoggedInUserID, string CompanyID) {
            this.Fetch_Transaction_ListAsync(LoggedInUserID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_Transaction_ListAsync(string LoggedInUserID, string CompanyID, object userState) {
            if ((this.Fetch_Transaction_ListOperationCompleted == null)) {
                this.Fetch_Transaction_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Transaction_ListOperationCompleted);
            }
            this.InvokeAsync("Fetch_Transaction_List", new object[] {
                        LoggedInUserID,
                        CompanyID}, this.Fetch_Transaction_ListOperationCompleted, userState);
        }
        
        private void OnFetch_Transaction_ListOperationCompleted(object arg) {
            if ((this.Fetch_Transaction_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Transaction_ListCompleted(this, new Fetch_Transaction_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Inv_Transaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_Inv_Transaction(int TransactionID, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_Inv_Transaction", new object[] {
                        TransactionID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_Inv_TransactionAsync(int TransactionID, string LoggedInUserID) {
            this.Delete_Inv_TransactionAsync(TransactionID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_Inv_TransactionAsync(int TransactionID, string LoggedInUserID, object userState) {
            if ((this.Delete_Inv_TransactionOperationCompleted == null)) {
                this.Delete_Inv_TransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Inv_TransactionOperationCompleted);
            }
            this.InvokeAsync("Delete_Inv_Transaction", new object[] {
                        TransactionID,
                        LoggedInUserID}, this.Delete_Inv_TransactionOperationCompleted, userState);
        }
        
        private void OnDelete_Inv_TransactionOperationCompleted(object arg) {
            if ((this.Delete_Inv_TransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Inv_TransactionCompleted(this, new Delete_Inv_TransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Stock_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Stock_List(string LoggedInUserID, string CompanyID) {
            object[] results = this.Invoke("Fetch_Stock_List", new object[] {
                        LoggedInUserID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Stock_ListAsync(string LoggedInUserID, string CompanyID) {
            this.Fetch_Stock_ListAsync(LoggedInUserID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_Stock_ListAsync(string LoggedInUserID, string CompanyID, object userState) {
            if ((this.Fetch_Stock_ListOperationCompleted == null)) {
                this.Fetch_Stock_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Stock_ListOperationCompleted);
            }
            this.InvokeAsync("Fetch_Stock_List", new object[] {
                        LoggedInUserID,
                        CompanyID}, this.Fetch_Stock_ListOperationCompleted, userState);
        }
        
        private void OnFetch_Stock_ListOperationCompleted(object arg) {
            if ((this.Fetch_Stock_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Stock_ListCompleted(this, new Fetch_Stock_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Inv_Stock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_Inv_Stock(int ItemId, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_Inv_Stock", new object[] {
                        ItemId,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_Inv_StockAsync(int ItemId, string LoggedInUserID) {
            this.Delete_Inv_StockAsync(ItemId, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_Inv_StockAsync(int ItemId, string LoggedInUserID, object userState) {
            if ((this.Delete_Inv_StockOperationCompleted == null)) {
                this.Delete_Inv_StockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Inv_StockOperationCompleted);
            }
            this.InvokeAsync("Delete_Inv_Stock", new object[] {
                        ItemId,
                        LoggedInUserID}, this.Delete_Inv_StockOperationCompleted, userState);
        }
        
        private void OnDelete_Inv_StockOperationCompleted(object arg) {
            if ((this.Delete_Inv_StockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Inv_StockCompleted(this, new Delete_Inv_StockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Inv_Item", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_Inv_Item(int ItemId, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_Inv_Item", new object[] {
                        ItemId,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_Inv_ItemAsync(int ItemId, string LoggedInUserID) {
            this.Delete_Inv_ItemAsync(ItemId, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_Inv_ItemAsync(int ItemId, string LoggedInUserID, object userState) {
            if ((this.Delete_Inv_ItemOperationCompleted == null)) {
                this.Delete_Inv_ItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Inv_ItemOperationCompleted);
            }
            this.InvokeAsync("Delete_Inv_Item", new object[] {
                        ItemId,
                        LoggedInUserID}, this.Delete_Inv_ItemOperationCompleted, userState);
        }
        
        private void OnDelete_Inv_ItemOperationCompleted(object arg) {
            if ((this.Delete_Inv_ItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Inv_ItemCompleted(this, new Delete_Inv_ItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Stock_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Stock_Detail(string LoggedInUserID, string CompanyID, int StockId) {
            object[] results = this.Invoke("Fetch_Stock_Detail", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Stock_DetailAsync(string LoggedInUserID, string CompanyID, int StockId) {
            this.Fetch_Stock_DetailAsync(LoggedInUserID, CompanyID, StockId, null);
        }
        
        /// <remarks/>
        public void Fetch_Stock_DetailAsync(string LoggedInUserID, string CompanyID, int StockId, object userState) {
            if ((this.Fetch_Stock_DetailOperationCompleted == null)) {
                this.Fetch_Stock_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Stock_DetailOperationCompleted);
            }
            this.InvokeAsync("Fetch_Stock_Detail", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockId}, this.Fetch_Stock_DetailOperationCompleted, userState);
        }
        
        private void OnFetch_Stock_DetailOperationCompleted(object arg) {
            if ((this.Fetch_Stock_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Stock_DetailCompleted(this, new Fetch_Stock_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Inv_Items_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Inv_Items_List(string LoggedInUserID, string CompanyID, string XmlItem) {
            object[] results = this.Invoke("Fetch_Inv_Items_List", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        XmlItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Inv_Items_ListAsync(string LoggedInUserID, string CompanyID, string XmlItem) {
            this.Fetch_Inv_Items_ListAsync(LoggedInUserID, CompanyID, XmlItem, null);
        }
        
        /// <remarks/>
        public void Fetch_Inv_Items_ListAsync(string LoggedInUserID, string CompanyID, string XmlItem, object userState) {
            if ((this.Fetch_Inv_Items_ListOperationCompleted == null)) {
                this.Fetch_Inv_Items_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Inv_Items_ListOperationCompleted);
            }
            this.InvokeAsync("Fetch_Inv_Items_List", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        XmlItem}, this.Fetch_Inv_Items_ListOperationCompleted, userState);
        }
        
        private void OnFetch_Inv_Items_ListOperationCompleted(object arg) {
            if ((this.Fetch_Inv_Items_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Inv_Items_ListCompleted(this, new Fetch_Inv_Items_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Inv_Item_Stock_Ddl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Inv_Item_Stock_Ddl(string LoggedInUserID, string CompanyID, string StockID) {
            object[] results = this.Invoke("Fetch_Inv_Item_Stock_Ddl", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Inv_Item_Stock_DdlAsync(string LoggedInUserID, string CompanyID, string StockID) {
            this.Fetch_Inv_Item_Stock_DdlAsync(LoggedInUserID, CompanyID, StockID, null);
        }
        
        /// <remarks/>
        public void Fetch_Inv_Item_Stock_DdlAsync(string LoggedInUserID, string CompanyID, string StockID, object userState) {
            if ((this.Fetch_Inv_Item_Stock_DdlOperationCompleted == null)) {
                this.Fetch_Inv_Item_Stock_DdlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Inv_Item_Stock_DdlOperationCompleted);
            }
            this.InvokeAsync("Fetch_Inv_Item_Stock_Ddl", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID}, this.Fetch_Inv_Item_Stock_DdlOperationCompleted, userState);
        }
        
        private void OnFetch_Inv_Item_Stock_DdlOperationCompleted(object arg) {
            if ((this.Fetch_Inv_Item_Stock_DdlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Inv_Item_Stock_DdlCompleted(this, new Fetch_Inv_Item_Stock_DdlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Inv_Crud_Item_Stock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Inv_Crud_Item_Stock(string LoggedInUserID, string CompanyID, string StockID, string XmlItem) {
            object[] results = this.Invoke("Fetch_Inv_Crud_Item_Stock", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID,
                        XmlItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Inv_Crud_Item_StockAsync(string LoggedInUserID, string CompanyID, string StockID, string XmlItem) {
            this.Fetch_Inv_Crud_Item_StockAsync(LoggedInUserID, CompanyID, StockID, XmlItem, null);
        }
        
        /// <remarks/>
        public void Fetch_Inv_Crud_Item_StockAsync(string LoggedInUserID, string CompanyID, string StockID, string XmlItem, object userState) {
            if ((this.Fetch_Inv_Crud_Item_StockOperationCompleted == null)) {
                this.Fetch_Inv_Crud_Item_StockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Inv_Crud_Item_StockOperationCompleted);
            }
            this.InvokeAsync("Fetch_Inv_Crud_Item_Stock", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID,
                        XmlItem}, this.Fetch_Inv_Crud_Item_StockOperationCompleted, userState);
        }
        
        private void OnFetch_Inv_Crud_Item_StockOperationCompleted(object arg) {
            if ((this.Fetch_Inv_Crud_Item_StockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Inv_Crud_Item_StockCompleted(this, new Fetch_Inv_Crud_Item_StockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Inv_Item_Stock_Data", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Inv_Item_Stock_Data(string LoggedInUserID, string CompanyID, string StockID) {
            object[] results = this.Invoke("Fetch_Inv_Item_Stock_Data", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Inv_Item_Stock_DataAsync(string LoggedInUserID, string CompanyID, string StockID) {
            this.Fetch_Inv_Item_Stock_DataAsync(LoggedInUserID, CompanyID, StockID, null);
        }
        
        /// <remarks/>
        public void Fetch_Inv_Item_Stock_DataAsync(string LoggedInUserID, string CompanyID, string StockID, object userState) {
            if ((this.Fetch_Inv_Item_Stock_DataOperationCompleted == null)) {
                this.Fetch_Inv_Item_Stock_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Inv_Item_Stock_DataOperationCompleted);
            }
            this.InvokeAsync("Fetch_Inv_Item_Stock_Data", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID}, this.Fetch_Inv_Item_Stock_DataOperationCompleted, userState);
        }
        
        private void OnFetch_Inv_Item_Stock_DataOperationCompleted(object arg) {
            if ((this.Fetch_Inv_Item_Stock_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Inv_Item_Stock_DataCompleted(this, new Fetch_Inv_Item_Stock_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Inv_Item_Purchase_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Inv_Item_Purchase_List(string LoggedInUserID, string CompanyID) {
            object[] results = this.Invoke("Fetch_Inv_Item_Purchase_List", new object[] {
                        LoggedInUserID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Inv_Item_Purchase_ListAsync(string LoggedInUserID, string CompanyID) {
            this.Fetch_Inv_Item_Purchase_ListAsync(LoggedInUserID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_Inv_Item_Purchase_ListAsync(string LoggedInUserID, string CompanyID, object userState) {
            if ((this.Fetch_Inv_Item_Purchase_ListOperationCompleted == null)) {
                this.Fetch_Inv_Item_Purchase_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Inv_Item_Purchase_ListOperationCompleted);
            }
            this.InvokeAsync("Fetch_Inv_Item_Purchase_List", new object[] {
                        LoggedInUserID,
                        CompanyID}, this.Fetch_Inv_Item_Purchase_ListOperationCompleted, userState);
        }
        
        private void OnFetch_Inv_Item_Purchase_ListOperationCompleted(object arg) {
            if ((this.Fetch_Inv_Item_Purchase_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Inv_Item_Purchase_ListCompleted(this, new Fetch_Inv_Item_Purchase_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_Inv_Purchase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_Inv_Purchase(int ItemId, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_Inv_Purchase", new object[] {
                        ItemId,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_Inv_PurchaseAsync(int ItemId, string LoggedInUserID) {
            this.Delete_Inv_PurchaseAsync(ItemId, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_Inv_PurchaseAsync(int ItemId, string LoggedInUserID, object userState) {
            if ((this.Delete_Inv_PurchaseOperationCompleted == null)) {
                this.Delete_Inv_PurchaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Inv_PurchaseOperationCompleted);
            }
            this.InvokeAsync("Delete_Inv_Purchase", new object[] {
                        ItemId,
                        LoggedInUserID}, this.Delete_Inv_PurchaseOperationCompleted, userState);
        }
        
        private void OnDelete_Inv_PurchaseOperationCompleted(object arg) {
            if ((this.Delete_Inv_PurchaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Inv_PurchaseCompleted(this, new Delete_Inv_PurchaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Crud_Inv_Purchase", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Crud_Inv_Purchase(string LoggedInUserID, string CompanyID, string PurchaseID, string XmlItem) {
            object[] results = this.Invoke("Crud_Inv_Purchase", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        PurchaseID,
                        XmlItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Crud_Inv_PurchaseAsync(string LoggedInUserID, string CompanyID, string PurchaseID, string XmlItem) {
            this.Crud_Inv_PurchaseAsync(LoggedInUserID, CompanyID, PurchaseID, XmlItem, null);
        }
        
        /// <remarks/>
        public void Crud_Inv_PurchaseAsync(string LoggedInUserID, string CompanyID, string PurchaseID, string XmlItem, object userState) {
            if ((this.Crud_Inv_PurchaseOperationCompleted == null)) {
                this.Crud_Inv_PurchaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrud_Inv_PurchaseOperationCompleted);
            }
            this.InvokeAsync("Crud_Inv_Purchase", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        PurchaseID,
                        XmlItem}, this.Crud_Inv_PurchaseOperationCompleted, userState);
        }
        
        private void OnCrud_Inv_PurchaseOperationCompleted(object arg) {
            if ((this.Crud_Inv_PurchaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Crud_Inv_PurchaseCompleted(this, new Crud_Inv_PurchaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Inv_Crud_Item", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Inv_Crud_Item(string LoggedInUserID, string CompanyID, string StockID, string XmlItem) {
            object[] results = this.Invoke("Fetch_Inv_Crud_Item", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID,
                        XmlItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Inv_Crud_ItemAsync(string LoggedInUserID, string CompanyID, string StockID, string XmlItem) {
            this.Fetch_Inv_Crud_ItemAsync(LoggedInUserID, CompanyID, StockID, XmlItem, null);
        }
        
        /// <remarks/>
        public void Fetch_Inv_Crud_ItemAsync(string LoggedInUserID, string CompanyID, string StockID, string XmlItem, object userState) {
            if ((this.Fetch_Inv_Crud_ItemOperationCompleted == null)) {
                this.Fetch_Inv_Crud_ItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Inv_Crud_ItemOperationCompleted);
            }
            this.InvokeAsync("Fetch_Inv_Crud_Item", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        StockID,
                        XmlItem}, this.Fetch_Inv_Crud_ItemOperationCompleted, userState);
        }
        
        private void OnFetch_Inv_Crud_ItemOperationCompleted(object arg) {
            if ((this.Fetch_Inv_Crud_ItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Inv_Crud_ItemCompleted(this, new Fetch_Inv_Crud_ItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Tran_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Tran_Detail(string LoggedInUserID, string CompanyID, int TransID) {
            object[] results = this.Invoke("Fetch_Tran_Detail", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        TransID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Tran_DetailAsync(string LoggedInUserID, string CompanyID, int TransID) {
            this.Fetch_Tran_DetailAsync(LoggedInUserID, CompanyID, TransID, null);
        }
        
        /// <remarks/>
        public void Fetch_Tran_DetailAsync(string LoggedInUserID, string CompanyID, int TransID, object userState) {
            if ((this.Fetch_Tran_DetailOperationCompleted == null)) {
                this.Fetch_Tran_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Tran_DetailOperationCompleted);
            }
            this.InvokeAsync("Fetch_Tran_Detail", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        TransID}, this.Fetch_Tran_DetailOperationCompleted, userState);
        }
        
        private void OnFetch_Tran_DetailOperationCompleted(object arg) {
            if ((this.Fetch_Tran_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Tran_DetailCompleted(this, new Fetch_Tran_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Tran_Item_Detail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Tran_Item_Detail(string LoggedInUserID, string CompanyID, int TransID, string XmlItem) {
            object[] results = this.Invoke("Fetch_Tran_Item_Detail", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        TransID,
                        XmlItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Tran_Item_DetailAsync(string LoggedInUserID, string CompanyID, int TransID, string XmlItem) {
            this.Fetch_Tran_Item_DetailAsync(LoggedInUserID, CompanyID, TransID, XmlItem, null);
        }
        
        /// <remarks/>
        public void Fetch_Tran_Item_DetailAsync(string LoggedInUserID, string CompanyID, int TransID, string XmlItem, object userState) {
            if ((this.Fetch_Tran_Item_DetailOperationCompleted == null)) {
                this.Fetch_Tran_Item_DetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Tran_Item_DetailOperationCompleted);
            }
            this.InvokeAsync("Fetch_Tran_Item_Detail", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        TransID,
                        XmlItem}, this.Fetch_Tran_Item_DetailOperationCompleted, userState);
        }
        
        private void OnFetch_Tran_Item_DetailOperationCompleted(object arg) {
            if ((this.Fetch_Tran_Item_DetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Tran_Item_DetailCompleted(this, new Fetch_Tran_Item_DetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Crud_Inv_Transaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Crud_Inv_Transaction(string LoggedInUserID, string CompanyID, string DeptID, string TranID, string XmlItem) {
            object[] results = this.Invoke("Crud_Inv_Transaction", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        DeptID,
                        TranID,
                        XmlItem});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Crud_Inv_TransactionAsync(string LoggedInUserID, string CompanyID, string DeptID, string TranID, string XmlItem) {
            this.Crud_Inv_TransactionAsync(LoggedInUserID, CompanyID, DeptID, TranID, XmlItem, null);
        }
        
        /// <remarks/>
        public void Crud_Inv_TransactionAsync(string LoggedInUserID, string CompanyID, string DeptID, string TranID, string XmlItem, object userState) {
            if ((this.Crud_Inv_TransactionOperationCompleted == null)) {
                this.Crud_Inv_TransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrud_Inv_TransactionOperationCompleted);
            }
            this.InvokeAsync("Crud_Inv_Transaction", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        DeptID,
                        TranID,
                        XmlItem}, this.Crud_Inv_TransactionOperationCompleted, userState);
        }
        
        private void OnCrud_Inv_TransactionOperationCompleted(object arg) {
            if ((this.Crud_Inv_TransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Crud_Inv_TransactionCompleted(this, new Crud_Inv_TransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Crud_Inv_Category_Mst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Crud_Inv_Category_Mst(string LoggedInUserID, string CompanyID, int CategoryID, string CategoryDesc, string Action) {
            object[] results = this.Invoke("Crud_Inv_Category_Mst", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        CategoryID,
                        CategoryDesc,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Crud_Inv_Category_MstAsync(string LoggedInUserID, string CompanyID, int CategoryID, string CategoryDesc, string Action) {
            this.Crud_Inv_Category_MstAsync(LoggedInUserID, CompanyID, CategoryID, CategoryDesc, Action, null);
        }
        
        /// <remarks/>
        public void Crud_Inv_Category_MstAsync(string LoggedInUserID, string CompanyID, int CategoryID, string CategoryDesc, string Action, object userState) {
            if ((this.Crud_Inv_Category_MstOperationCompleted == null)) {
                this.Crud_Inv_Category_MstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrud_Inv_Category_MstOperationCompleted);
            }
            this.InvokeAsync("Crud_Inv_Category_Mst", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        CategoryID,
                        CategoryDesc,
                        Action}, this.Crud_Inv_Category_MstOperationCompleted, userState);
        }
        
        private void OnCrud_Inv_Category_MstOperationCompleted(object arg) {
            if ((this.Crud_Inv_Category_MstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Crud_Inv_Category_MstCompleted(this, new Crud_Inv_Category_MstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Crud_Inv_SubCategory_Mst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Crud_Inv_SubCategory_Mst(string LoggedInUserID, string CompanyID, string CategoryID, int SubCategoryID, string SubCategoryDesc, string Action) {
            object[] results = this.Invoke("Crud_Inv_SubCategory_Mst", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        CategoryID,
                        SubCategoryID,
                        SubCategoryDesc,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Crud_Inv_SubCategory_MstAsync(string LoggedInUserID, string CompanyID, string CategoryID, int SubCategoryID, string SubCategoryDesc, string Action) {
            this.Crud_Inv_SubCategory_MstAsync(LoggedInUserID, CompanyID, CategoryID, SubCategoryID, SubCategoryDesc, Action, null);
        }
        
        /// <remarks/>
        public void Crud_Inv_SubCategory_MstAsync(string LoggedInUserID, string CompanyID, string CategoryID, int SubCategoryID, string SubCategoryDesc, string Action, object userState) {
            if ((this.Crud_Inv_SubCategory_MstOperationCompleted == null)) {
                this.Crud_Inv_SubCategory_MstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrud_Inv_SubCategory_MstOperationCompleted);
            }
            this.InvokeAsync("Crud_Inv_SubCategory_Mst", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        CategoryID,
                        SubCategoryID,
                        SubCategoryDesc,
                        Action}, this.Crud_Inv_SubCategory_MstOperationCompleted, userState);
        }
        
        private void OnCrud_Inv_SubCategory_MstOperationCompleted(object arg) {
            if ((this.Crud_Inv_SubCategory_MstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Crud_Inv_SubCategory_MstCompleted(this, new Crud_Inv_SubCategory_MstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Crud_Inv_Item_Mst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Crud_Inv_Item_Mst(string LoggedInUserID, string CompanyID, string CategoryID, string SubCategoryID, int ItemID, string ItemDesc, int DeptID, int Opening, int Optimum, int Reorder, int Base, int CostRate, string Action) {
            object[] results = this.Invoke("Crud_Inv_Item_Mst", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        CategoryID,
                        SubCategoryID,
                        ItemID,
                        ItemDesc,
                        DeptID,
                        Opening,
                        Optimum,
                        Reorder,
                        Base,
                        CostRate,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Crud_Inv_Item_MstAsync(string LoggedInUserID, string CompanyID, string CategoryID, string SubCategoryID, int ItemID, string ItemDesc, int DeptID, int Opening, int Optimum, int Reorder, int Base, int CostRate, string Action) {
            this.Crud_Inv_Item_MstAsync(LoggedInUserID, CompanyID, CategoryID, SubCategoryID, ItemID, ItemDesc, DeptID, Opening, Optimum, Reorder, Base, CostRate, Action, null);
        }
        
        /// <remarks/>
        public void Crud_Inv_Item_MstAsync(string LoggedInUserID, string CompanyID, string CategoryID, string SubCategoryID, int ItemID, string ItemDesc, int DeptID, int Opening, int Optimum, int Reorder, int Base, int CostRate, string Action, object userState) {
            if ((this.Crud_Inv_Item_MstOperationCompleted == null)) {
                this.Crud_Inv_Item_MstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrud_Inv_Item_MstOperationCompleted);
            }
            this.InvokeAsync("Crud_Inv_Item_Mst", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        CategoryID,
                        SubCategoryID,
                        ItemID,
                        ItemDesc,
                        DeptID,
                        Opening,
                        Optimum,
                        Reorder,
                        Base,
                        CostRate,
                        Action}, this.Crud_Inv_Item_MstOperationCompleted, userState);
        }
        
        private void OnCrud_Inv_Item_MstOperationCompleted(object arg) {
            if ((this.Crud_Inv_Item_MstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Crud_Inv_Item_MstCompleted(this, new Crud_Inv_Item_MstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_My_Profile_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_My_Profile_Details(string LoggedInUserID, string UserType, int CompanyID) {
            object[] results = this.Invoke("Fetch_My_Profile_Details", new object[] {
                        LoggedInUserID,
                        UserType,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_My_Profile_DetailsAsync(string LoggedInUserID, string UserType, int CompanyID) {
            this.Fetch_My_Profile_DetailsAsync(LoggedInUserID, UserType, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_My_Profile_DetailsAsync(string LoggedInUserID, string UserType, int CompanyID, object userState) {
            if ((this.Fetch_My_Profile_DetailsOperationCompleted == null)) {
                this.Fetch_My_Profile_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_My_Profile_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_My_Profile_Details", new object[] {
                        LoggedInUserID,
                        UserType,
                        CompanyID}, this.Fetch_My_Profile_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_My_Profile_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_My_Profile_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_My_Profile_DetailsCompleted(this, new Fetch_My_Profile_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_My_Profile_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_My_Profile_Details(string PhoneNo, string AltPhoneNo, string EmailID, string Address, string City, string State, string Postcode, string LoggedInUserID, string UserType, int CompanyID) {
            object[] results = this.Invoke("Update_My_Profile_Details", new object[] {
                        PhoneNo,
                        AltPhoneNo,
                        EmailID,
                        Address,
                        City,
                        State,
                        Postcode,
                        LoggedInUserID,
                        UserType,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_My_Profile_DetailsAsync(string PhoneNo, string AltPhoneNo, string EmailID, string Address, string City, string State, string Postcode, string LoggedInUserID, string UserType, int CompanyID) {
            this.Update_My_Profile_DetailsAsync(PhoneNo, AltPhoneNo, EmailID, Address, City, State, Postcode, LoggedInUserID, UserType, CompanyID, null);
        }
        
        /// <remarks/>
        public void Update_My_Profile_DetailsAsync(string PhoneNo, string AltPhoneNo, string EmailID, string Address, string City, string State, string Postcode, string LoggedInUserID, string UserType, int CompanyID, object userState) {
            if ((this.Update_My_Profile_DetailsOperationCompleted == null)) {
                this.Update_My_Profile_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_My_Profile_DetailsOperationCompleted);
            }
            this.InvokeAsync("Update_My_Profile_Details", new object[] {
                        PhoneNo,
                        AltPhoneNo,
                        EmailID,
                        Address,
                        City,
                        State,
                        Postcode,
                        LoggedInUserID,
                        UserType,
                        CompanyID}, this.Update_My_Profile_DetailsOperationCompleted, userState);
        }
        
        private void OnUpdate_My_Profile_DetailsOperationCompleted(object arg) {
            if ((this.Update_My_Profile_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_My_Profile_DetailsCompleted(this, new Update_My_Profile_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Change_Password", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_Change_Password(string Username, string CurrentPassword, string NewPassword, int CompanyID, string UserType) {
            object[] results = this.Invoke("Update_Change_Password", new object[] {
                        Username,
                        CurrentPassword,
                        NewPassword,
                        CompanyID,
                        UserType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_Change_PasswordAsync(string Username, string CurrentPassword, string NewPassword, int CompanyID, string UserType) {
            this.Update_Change_PasswordAsync(Username, CurrentPassword, NewPassword, CompanyID, UserType, null);
        }
        
        /// <remarks/>
        public void Update_Change_PasswordAsync(string Username, string CurrentPassword, string NewPassword, int CompanyID, string UserType, object userState) {
            if ((this.Update_Change_PasswordOperationCompleted == null)) {
                this.Update_Change_PasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Change_PasswordOperationCompleted);
            }
            this.InvokeAsync("Update_Change_Password", new object[] {
                        Username,
                        CurrentPassword,
                        NewPassword,
                        CompanyID,
                        UserType}, this.Update_Change_PasswordOperationCompleted, userState);
        }
        
        private void OnUpdate_Change_PasswordOperationCompleted(object arg) {
            if ((this.Update_Change_PasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Change_PasswordCompleted(this, new Update_Change_PasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Retailer_Escalation_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Retailer_Escalation_CRUD(int EscalationID, string Name, string Designation, string Department, string ContactNo, string EmailID, string LoggedInUserID, int CompanyID, string strAction) {
            object[] results = this.Invoke("Retailer_Escalation_CRUD", new object[] {
                        EscalationID,
                        Name,
                        Designation,
                        Department,
                        ContactNo,
                        EmailID,
                        LoggedInUserID,
                        CompanyID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Retailer_Escalation_CRUDAsync(int EscalationID, string Name, string Designation, string Department, string ContactNo, string EmailID, string LoggedInUserID, int CompanyID, string strAction) {
            this.Retailer_Escalation_CRUDAsync(EscalationID, Name, Designation, Department, ContactNo, EmailID, LoggedInUserID, CompanyID, strAction, null);
        }
        
        /// <remarks/>
        public void Retailer_Escalation_CRUDAsync(int EscalationID, string Name, string Designation, string Department, string ContactNo, string EmailID, string LoggedInUserID, int CompanyID, string strAction, object userState) {
            if ((this.Retailer_Escalation_CRUDOperationCompleted == null)) {
                this.Retailer_Escalation_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetailer_Escalation_CRUDOperationCompleted);
            }
            this.InvokeAsync("Retailer_Escalation_CRUD", new object[] {
                        EscalationID,
                        Name,
                        Designation,
                        Department,
                        ContactNo,
                        EmailID,
                        LoggedInUserID,
                        CompanyID,
                        strAction}, this.Retailer_Escalation_CRUDOperationCompleted, userState);
        }
        
        private void OnRetailer_Escalation_CRUDOperationCompleted(object arg) {
            if ((this.Retailer_Escalation_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retailer_Escalation_CRUDCompleted(this, new Retailer_Escalation_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/My_Profile_Email_Verification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet My_Profile_Email_Verification(int Is_Email_Verified, string LoggedInUserID, int CompanyID) {
            object[] results = this.Invoke("My_Profile_Email_Verification", new object[] {
                        Is_Email_Verified,
                        LoggedInUserID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void My_Profile_Email_VerificationAsync(int Is_Email_Verified, string LoggedInUserID, int CompanyID) {
            this.My_Profile_Email_VerificationAsync(Is_Email_Verified, LoggedInUserID, CompanyID, null);
        }
        
        /// <remarks/>
        public void My_Profile_Email_VerificationAsync(int Is_Email_Verified, string LoggedInUserID, int CompanyID, object userState) {
            if ((this.My_Profile_Email_VerificationOperationCompleted == null)) {
                this.My_Profile_Email_VerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMy_Profile_Email_VerificationOperationCompleted);
            }
            this.InvokeAsync("My_Profile_Email_Verification", new object[] {
                        Is_Email_Verified,
                        LoggedInUserID,
                        CompanyID}, this.My_Profile_Email_VerificationOperationCompleted, userState);
        }
        
        private void OnMy_Profile_Email_VerificationOperationCompleted(object arg) {
            if ((this.My_Profile_Email_VerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.My_Profile_Email_VerificationCompleted(this, new My_Profile_Email_VerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_User_ProfilePic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_User_ProfilePic(string LoggedInUserID, string UserType, string ProfilePhoto_FilePath, int CompanyID) {
            object[] results = this.Invoke("Update_User_ProfilePic", new object[] {
                        LoggedInUserID,
                        UserType,
                        ProfilePhoto_FilePath,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_User_ProfilePicAsync(string LoggedInUserID, string UserType, string ProfilePhoto_FilePath, int CompanyID) {
            this.Update_User_ProfilePicAsync(LoggedInUserID, UserType, ProfilePhoto_FilePath, CompanyID, null);
        }
        
        /// <remarks/>
        public void Update_User_ProfilePicAsync(string LoggedInUserID, string UserType, string ProfilePhoto_FilePath, int CompanyID, object userState) {
            if ((this.Update_User_ProfilePicOperationCompleted == null)) {
                this.Update_User_ProfilePicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_User_ProfilePicOperationCompleted);
            }
            this.InvokeAsync("Update_User_ProfilePic", new object[] {
                        LoggedInUserID,
                        UserType,
                        ProfilePhoto_FilePath,
                        CompanyID}, this.Update_User_ProfilePicOperationCompleted, userState);
        }
        
        private void OnUpdate_User_ProfilePicOperationCompleted(object arg) {
            if ((this.Update_User_ProfilePicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_User_ProfilePicCompleted(this, new Update_User_ProfilePicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Import_User_Master", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Import_User_Master(int CompanyID, string LoggedInUserID) {
            object[] results = this.Invoke("Import_User_Master", new object[] {
                        CompanyID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Import_User_MasterAsync(int CompanyID, string LoggedInUserID) {
            this.Import_User_MasterAsync(CompanyID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Import_User_MasterAsync(int CompanyID, string LoggedInUserID, object userState) {
            if ((this.Import_User_MasterOperationCompleted == null)) {
                this.Import_User_MasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImport_User_MasterOperationCompleted);
            }
            this.InvokeAsync("Import_User_Master", new object[] {
                        CompanyID,
                        LoggedInUserID}, this.Import_User_MasterOperationCompleted, userState);
        }
        
        private void OnImport_User_MasterOperationCompleted(object arg) {
            if ((this.Import_User_MasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Import_User_MasterCompleted(this, new Import_User_MasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Import_Checklist_Master", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Import_Checklist_Master(int CompanyID, string LoggedInUserID) {
            object[] results = this.Invoke("Import_Checklist_Master", new object[] {
                        CompanyID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Import_Checklist_MasterAsync(int CompanyID, string LoggedInUserID) {
            this.Import_Checklist_MasterAsync(CompanyID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Import_Checklist_MasterAsync(int CompanyID, string LoggedInUserID, object userState) {
            if ((this.Import_Checklist_MasterOperationCompleted == null)) {
                this.Import_Checklist_MasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImport_Checklist_MasterOperationCompleted);
            }
            this.InvokeAsync("Import_Checklist_Master", new object[] {
                        CompanyID,
                        LoggedInUserID}, this.Import_Checklist_MasterOperationCompleted, userState);
        }
        
        private void OnImport_Checklist_MasterOperationCompleted(object arg) {
            if ((this.Import_Checklist_MasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Import_Checklist_MasterCompleted(this, new Import_Checklist_MasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Schedule_Checklist_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Schedule_Checklist_CRUD(int CompanyID) {
            object[] results = this.Invoke("Schedule_Checklist_CRUD", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Schedule_Checklist_CRUDAsync(int CompanyID) {
            this.Schedule_Checklist_CRUDAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Schedule_Checklist_CRUDAsync(int CompanyID, object userState) {
            if ((this.Schedule_Checklist_CRUDOperationCompleted == null)) {
                this.Schedule_Checklist_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSchedule_Checklist_CRUDOperationCompleted);
            }
            this.InvokeAsync("Schedule_Checklist_CRUD", new object[] {
                        CompanyID}, this.Schedule_Checklist_CRUDOperationCompleted, userState);
        }
        
        private void OnSchedule_Checklist_CRUDOperationCompleted(object arg) {
            if ((this.Schedule_Checklist_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Schedule_Checklist_CRUDCompleted(this, new Schedule_Checklist_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyChecklist_NEW", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyChecklist_NEW(int Chk_Config_ID, string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyChecklist_NEW", new object[] {
                        Chk_Config_ID,
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyChecklist_NEWAsync(int Chk_Config_ID, string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            this.Fetch_MyChecklist_NEWAsync(Chk_Config_ID, LoggedInUserID, CompanyID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyChecklist_NEWAsync(int Chk_Config_ID, string LoggedInUserID, string CompanyID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyChecklist_NEWOperationCompleted == null)) {
                this.Fetch_MyChecklist_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyChecklist_NEWOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyChecklist_NEW", new object[] {
                        Chk_Config_ID,
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date}, this.Fetch_MyChecklist_NEWOperationCompleted, userState);
        }
        
        private void OnFetch_MyChecklist_NEWOperationCompleted(object arg) {
            if ((this.Fetch_MyChecklist_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyChecklist_NEWCompleted(this, new Fetch_MyChecklist_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CRU_System_Setting", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CRU_System_Setting(int Setting_ID, int Tkt_Is_Img_Open, int Tkt_Is_Img_Close, int Tkt_Is_Remark_Open, int Tkt_Is_Remark_Close, int Tkt_Is_Expiry, int Chk_Is_QR_Compulsory, int CompanyID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("CRU_System_Setting", new object[] {
                        Setting_ID,
                        Tkt_Is_Img_Open,
                        Tkt_Is_Img_Close,
                        Tkt_Is_Remark_Open,
                        Tkt_Is_Remark_Close,
                        Tkt_Is_Expiry,
                        Chk_Is_QR_Compulsory,
                        CompanyID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CRU_System_SettingAsync(int Setting_ID, int Tkt_Is_Img_Open, int Tkt_Is_Img_Close, int Tkt_Is_Remark_Open, int Tkt_Is_Remark_Close, int Tkt_Is_Expiry, int Chk_Is_QR_Compulsory, int CompanyID, string LoggedInUserID, string Action) {
            this.CRU_System_SettingAsync(Setting_ID, Tkt_Is_Img_Open, Tkt_Is_Img_Close, Tkt_Is_Remark_Open, Tkt_Is_Remark_Close, Tkt_Is_Expiry, Chk_Is_QR_Compulsory, CompanyID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void CRU_System_SettingAsync(int Setting_ID, int Tkt_Is_Img_Open, int Tkt_Is_Img_Close, int Tkt_Is_Remark_Open, int Tkt_Is_Remark_Close, int Tkt_Is_Expiry, int Chk_Is_QR_Compulsory, int CompanyID, string LoggedInUserID, string Action, object userState) {
            if ((this.CRU_System_SettingOperationCompleted == null)) {
                this.CRU_System_SettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCRU_System_SettingOperationCompleted);
            }
            this.InvokeAsync("CRU_System_Setting", new object[] {
                        Setting_ID,
                        Tkt_Is_Img_Open,
                        Tkt_Is_Img_Close,
                        Tkt_Is_Remark_Open,
                        Tkt_Is_Remark_Close,
                        Tkt_Is_Expiry,
                        Chk_Is_QR_Compulsory,
                        CompanyID,
                        LoggedInUserID,
                        Action}, this.CRU_System_SettingOperationCompleted, userState);
        }
        
        private void OnCRU_System_SettingOperationCompleted(object arg) {
            if ((this.CRU_System_SettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CRU_System_SettingCompleted(this, new CRU_System_SettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Custom_Fields", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Custom_Fields(int CompanyID) {
            object[] results = this.Invoke("Fetch_Custom_Fields", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Custom_FieldsAsync(int CompanyID) {
            this.Fetch_Custom_FieldsAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_Custom_FieldsAsync(int CompanyID, object userState) {
            if ((this.Fetch_Custom_FieldsOperationCompleted == null)) {
                this.Fetch_Custom_FieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Custom_FieldsOperationCompleted);
            }
            this.InvokeAsync("Fetch_Custom_Fields", new object[] {
                        CompanyID}, this.Fetch_Custom_FieldsOperationCompleted, userState);
        }
        
        private void OnFetch_Custom_FieldsOperationCompleted(object arg) {
            if ((this.Fetch_Custom_FieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Custom_FieldsCompleted(this, new Fetch_Custom_FieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Asset_Custom_Fields", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Asset_Custom_Fields(int CompanyID) {
            object[] results = this.Invoke("Fetch_Asset_Custom_Fields", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Asset_Custom_FieldsAsync(int CompanyID) {
            this.Fetch_Asset_Custom_FieldsAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_Asset_Custom_FieldsAsync(int CompanyID, object userState) {
            if ((this.Fetch_Asset_Custom_FieldsOperationCompleted == null)) {
                this.Fetch_Asset_Custom_FieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Asset_Custom_FieldsOperationCompleted);
            }
            this.InvokeAsync("Fetch_Asset_Custom_Fields", new object[] {
                        CompanyID}, this.Fetch_Asset_Custom_FieldsOperationCompleted, userState);
        }
        
        private void OnFetch_Asset_Custom_FieldsOperationCompleted(object arg) {
            if ((this.Fetch_Asset_Custom_FieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Asset_Custom_FieldsCompleted(this, new Fetch_Asset_Custom_FieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchUserEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FetchUserEmail(string EmailID, string UserType, int CompanyID) {
            object[] results = this.Invoke("FetchUserEmail", new object[] {
                        EmailID,
                        UserType,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchUserEmailAsync(string EmailID, string UserType, int CompanyID) {
            this.FetchUserEmailAsync(EmailID, UserType, CompanyID, null);
        }
        
        /// <remarks/>
        public void FetchUserEmailAsync(string EmailID, string UserType, int CompanyID, object userState) {
            if ((this.FetchUserEmailOperationCompleted == null)) {
                this.FetchUserEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchUserEmailOperationCompleted);
            }
            this.InvokeAsync("FetchUserEmail", new object[] {
                        EmailID,
                        UserType,
                        CompanyID}, this.FetchUserEmailOperationCompleted, userState);
        }
        
        private void OnFetchUserEmailOperationCompleted(object arg) {
            if ((this.FetchUserEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchUserEmailCompleted(this, new FetchUserEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForgetPasswordSendOTP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ForgetPasswordSendOTP(string EmailID, string OTP, int CompanyID) {
            object[] results = this.Invoke("ForgetPasswordSendOTP", new object[] {
                        EmailID,
                        OTP,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ForgetPasswordSendOTPAsync(string EmailID, string OTP, int CompanyID) {
            this.ForgetPasswordSendOTPAsync(EmailID, OTP, CompanyID, null);
        }
        
        /// <remarks/>
        public void ForgetPasswordSendOTPAsync(string EmailID, string OTP, int CompanyID, object userState) {
            if ((this.ForgetPasswordSendOTPOperationCompleted == null)) {
                this.ForgetPasswordSendOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgetPasswordSendOTPOperationCompleted);
            }
            this.InvokeAsync("ForgetPasswordSendOTP", new object[] {
                        EmailID,
                        OTP,
                        CompanyID}, this.ForgetPasswordSendOTPOperationCompleted, userState);
        }
        
        private void OnForgetPasswordSendOTPOperationCompleted(object arg) {
            if ((this.ForgetPasswordSendOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgetPasswordSendOTPCompleted(this, new ForgetPasswordSendOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdatePassword(string User_ID, string EmailID, string Password, string UserType, int CompanyID) {
            object[] results = this.Invoke("UpdatePassword", new object[] {
                        User_ID,
                        EmailID,
                        Password,
                        UserType,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(string User_ID, string EmailID, string Password, string UserType, int CompanyID) {
            this.UpdatePasswordAsync(User_ID, EmailID, Password, UserType, CompanyID, null);
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(string User_ID, string EmailID, string Password, string UserType, int CompanyID, object userState) {
            if ((this.UpdatePasswordOperationCompleted == null)) {
                this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePassword", new object[] {
                        User_ID,
                        EmailID,
                        Password,
                        UserType,
                        CompanyID}, this.UpdatePasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePasswordOperationCompleted(object arg) {
            if ((this.UpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SiteMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SiteMaster_CRUD(int Site_ID, string Site_Code, string Site_Name, int CompanyID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("SiteMaster_CRUD", new object[] {
                        Site_ID,
                        Site_Code,
                        Site_Name,
                        CompanyID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SiteMaster_CRUDAsync(int Site_ID, string Site_Code, string Site_Name, int CompanyID, string LoggedInUserID, string Action) {
            this.SiteMaster_CRUDAsync(Site_ID, Site_Code, Site_Name, CompanyID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void SiteMaster_CRUDAsync(int Site_ID, string Site_Code, string Site_Name, int CompanyID, string LoggedInUserID, string Action, object userState) {
            if ((this.SiteMaster_CRUDOperationCompleted == null)) {
                this.SiteMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSiteMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("SiteMaster_CRUD", new object[] {
                        Site_ID,
                        Site_Code,
                        Site_Name,
                        CompanyID,
                        LoggedInUserID,
                        Action}, this.SiteMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnSiteMaster_CRUDOperationCompleted(object arg) {
            if ((this.SiteMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SiteMaster_CRUDCompleted(this, new SiteMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_states", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_states(int Country_Id) {
            object[] results = this.Invoke("Fetch_states", new object[] {
                        Country_Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_statesAsync(int Country_Id) {
            this.Fetch_statesAsync(Country_Id, null);
        }
        
        /// <remarks/>
        public void Fetch_statesAsync(int Country_Id, object userState) {
            if ((this.Fetch_statesOperationCompleted == null)) {
                this.Fetch_statesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_statesOperationCompleted);
            }
            this.InvokeAsync("Fetch_states", new object[] {
                        Country_Id}, this.Fetch_statesOperationCompleted, userState);
        }
        
        private void OnFetch_statesOperationCompleted(object arg) {
            if ((this.Fetch_statesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_statesCompleted(this, new Fetch_statesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_City", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_City(int State_Id) {
            object[] results = this.Invoke("Fetch_City", new object[] {
                        State_Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_CityAsync(int State_Id) {
            this.Fetch_CityAsync(State_Id, null);
        }
        
        /// <remarks/>
        public void Fetch_CityAsync(int State_Id, object userState) {
            if ((this.Fetch_CityOperationCompleted == null)) {
                this.Fetch_CityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_CityOperationCompleted);
            }
            this.InvokeAsync("Fetch_City", new object[] {
                        State_Id}, this.Fetch_CityOperationCompleted, userState);
        }
        
        private void OnFetch_CityOperationCompleted(object arg) {
            if ((this.Fetch_CityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_CityCompleted(this, new Fetch_CityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INSERT_Electricity_Category", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet INSERT_Electricity_Category(string Electricity_CatXML, int CompanyID, string LoggedInUserID, int Electricity_Cat_ID, string strAction) {
            object[] results = this.Invoke("INSERT_Electricity_Category", new object[] {
                        Electricity_CatXML,
                        CompanyID,
                        LoggedInUserID,
                        Electricity_Cat_ID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void INSERT_Electricity_CategoryAsync(string Electricity_CatXML, int CompanyID, string LoggedInUserID, int Electricity_Cat_ID, string strAction) {
            this.INSERT_Electricity_CategoryAsync(Electricity_CatXML, CompanyID, LoggedInUserID, Electricity_Cat_ID, strAction, null);
        }
        
        /// <remarks/>
        public void INSERT_Electricity_CategoryAsync(string Electricity_CatXML, int CompanyID, string LoggedInUserID, int Electricity_Cat_ID, string strAction, object userState) {
            if ((this.INSERT_Electricity_CategoryOperationCompleted == null)) {
                this.INSERT_Electricity_CategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINSERT_Electricity_CategoryOperationCompleted);
            }
            this.InvokeAsync("INSERT_Electricity_Category", new object[] {
                        Electricity_CatXML,
                        CompanyID,
                        LoggedInUserID,
                        Electricity_Cat_ID,
                        strAction}, this.INSERT_Electricity_CategoryOperationCompleted, userState);
        }
        
        private void OnINSERT_Electricity_CategoryOperationCompleted(object arg) {
            if ((this.INSERT_Electricity_CategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INSERT_Electricity_CategoryCompleted(this, new INSERT_Electricity_CategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_WhatSappLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_WhatSappLog(string ModuleType, int RecordID, string AccountSid, string AuthToken, string MsgSid, string MsgBody, string MsgStatus, string FromNo, string ToNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> ErrorCode, string ErrorMSg, int CompanyID, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_WhatSappLog", new object[] {
                        ModuleType,
                        RecordID,
                        AccountSid,
                        AuthToken,
                        MsgSid,
                        MsgBody,
                        MsgStatus,
                        FromNo,
                        ToNo,
                        ErrorCode,
                        ErrorMSg,
                        CompanyID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_WhatSappLogAsync(string ModuleType, int RecordID, string AccountSid, string AuthToken, string MsgSid, string MsgBody, string MsgStatus, string FromNo, string ToNo, System.Nullable<int> ErrorCode, string ErrorMSg, int CompanyID, string LoggedInUserID) {
            this.Insert_WhatSappLogAsync(ModuleType, RecordID, AccountSid, AuthToken, MsgSid, MsgBody, MsgStatus, FromNo, ToNo, ErrorCode, ErrorMSg, CompanyID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_WhatSappLogAsync(string ModuleType, int RecordID, string AccountSid, string AuthToken, string MsgSid, string MsgBody, string MsgStatus, string FromNo, string ToNo, System.Nullable<int> ErrorCode, string ErrorMSg, int CompanyID, string LoggedInUserID, object userState) {
            if ((this.Insert_WhatSappLogOperationCompleted == null)) {
                this.Insert_WhatSappLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_WhatSappLogOperationCompleted);
            }
            this.InvokeAsync("Insert_WhatSappLog", new object[] {
                        ModuleType,
                        RecordID,
                        AccountSid,
                        AuthToken,
                        MsgSid,
                        MsgBody,
                        MsgStatus,
                        FromNo,
                        ToNo,
                        ErrorCode,
                        ErrorMSg,
                        CompanyID,
                        LoggedInUserID}, this.Insert_WhatSappLogOperationCompleted, userState);
        }
        
        private void OnInsert_WhatSappLogOperationCompleted(object arg) {
            if ((this.Insert_WhatSappLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_WhatSappLogCompleted(this, new Insert_WhatSappLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Close_Ticket_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Close_Ticket_Details(string TicketID, string CloseTicketDesc, string LoggedInUserID, string list_Images, string strTicketAction, string CurrentLevel) {
            object[] results = this.Invoke("Close_Ticket_Details", new object[] {
                        TicketID,
                        CloseTicketDesc,
                        LoggedInUserID,
                        list_Images,
                        strTicketAction,
                        CurrentLevel});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Close_Ticket_DetailsAsync(string TicketID, string CloseTicketDesc, string LoggedInUserID, string list_Images, string strTicketAction, string CurrentLevel) {
            this.Close_Ticket_DetailsAsync(TicketID, CloseTicketDesc, LoggedInUserID, list_Images, strTicketAction, CurrentLevel, null);
        }
        
        /// <remarks/>
        public void Close_Ticket_DetailsAsync(string TicketID, string CloseTicketDesc, string LoggedInUserID, string list_Images, string strTicketAction, string CurrentLevel, object userState) {
            if ((this.Close_Ticket_DetailsOperationCompleted == null)) {
                this.Close_Ticket_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClose_Ticket_DetailsOperationCompleted);
            }
            this.InvokeAsync("Close_Ticket_Details", new object[] {
                        TicketID,
                        CloseTicketDesc,
                        LoggedInUserID,
                        list_Images,
                        strTicketAction,
                        CurrentLevel}, this.Close_Ticket_DetailsOperationCompleted, userState);
        }
        
        private void OnClose_Ticket_DetailsOperationCompleted(object arg) {
            if ((this.Close_Ticket_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Close_Ticket_DetailsCompleted(this, new Close_Ticket_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Store_Attendance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Store_Attendance(int CompanyID) {
            object[] results = this.Invoke("Fetch_Store_Attendance", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Store_AttendanceAsync(int CompanyID) {
            this.Fetch_Store_AttendanceAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_Store_AttendanceAsync(int CompanyID, object userState) {
            if ((this.Fetch_Store_AttendanceOperationCompleted == null)) {
                this.Fetch_Store_AttendanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Store_AttendanceOperationCompleted);
            }
            this.InvokeAsync("Fetch_Store_Attendance", new object[] {
                        CompanyID}, this.Fetch_Store_AttendanceOperationCompleted, userState);
        }
        
        private void OnFetch_Store_AttendanceOperationCompleted(object arg) {
            if ((this.Fetch_Store_AttendanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Store_AttendanceCompleted(this, new Fetch_Store_AttendanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Location_PopulateRootLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Location_PopulateRootLevel(int CompanyID) {
            object[] results = this.Invoke("Location_PopulateRootLevel", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Location_PopulateRootLevelAsync(int CompanyID) {
            this.Location_PopulateRootLevelAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Location_PopulateRootLevelAsync(int CompanyID, object userState) {
            if ((this.Location_PopulateRootLevelOperationCompleted == null)) {
                this.Location_PopulateRootLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocation_PopulateRootLevelOperationCompleted);
            }
            this.InvokeAsync("Location_PopulateRootLevel", new object[] {
                        CompanyID}, this.Location_PopulateRootLevelOperationCompleted, userState);
        }
        
        private void OnLocation_PopulateRootLevelOperationCompleted(object arg) {
            if ((this.Location_PopulateRootLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Location_PopulateRootLevelCompleted(this, new Location_PopulateRootLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Location_PopulateSubLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Location_PopulateSubLevel(int ParentID) {
            object[] results = this.Invoke("Location_PopulateSubLevel", new object[] {
                        ParentID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Location_PopulateSubLevelAsync(int ParentID) {
            this.Location_PopulateSubLevelAsync(ParentID, null);
        }
        
        /// <remarks/>
        public void Location_PopulateSubLevelAsync(int ParentID, object userState) {
            if ((this.Location_PopulateSubLevelOperationCompleted == null)) {
                this.Location_PopulateSubLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocation_PopulateSubLevelOperationCompleted);
            }
            this.InvokeAsync("Location_PopulateSubLevel", new object[] {
                        ParentID}, this.Location_PopulateSubLevelOperationCompleted, userState);
        }
        
        private void OnLocation_PopulateSubLevelOperationCompleted(object arg) {
            if ((this.Location_PopulateSubLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Location_PopulateSubLevelCompleted(this, new Location_PopulateSubLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Add_Update_Location_Node", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Add_Update_Location_Node(int ParentID, string Location_Node, int CompanyID, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("Add_Update_Location_Node", new object[] {
                        ParentID,
                        Location_Node,
                        CompanyID,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Add_Update_Location_NodeAsync(int ParentID, string Location_Node, int CompanyID, string LoggedInUserID, string strAction) {
            this.Add_Update_Location_NodeAsync(ParentID, Location_Node, CompanyID, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void Add_Update_Location_NodeAsync(int ParentID, string Location_Node, int CompanyID, string LoggedInUserID, string strAction, object userState) {
            if ((this.Add_Update_Location_NodeOperationCompleted == null)) {
                this.Add_Update_Location_NodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdd_Update_Location_NodeOperationCompleted);
            }
            this.InvokeAsync("Add_Update_Location_Node", new object[] {
                        ParentID,
                        Location_Node,
                        CompanyID,
                        LoggedInUserID,
                        strAction}, this.Add_Update_Location_NodeOperationCompleted, userState);
        }
        
        private void OnAdd_Update_Location_NodeOperationCompleted(object arg) {
            if ((this.Add_Update_Location_NodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Add_Update_Location_NodeCompleted(this, new Add_Update_Location_NodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FetchMenu(int parentMenuId, string LoggedInUserID, string ModuleIDs, int CompanyID) {
            object[] results = this.Invoke("FetchMenu", new object[] {
                        parentMenuId,
                        LoggedInUserID,
                        ModuleIDs,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchMenuAsync(int parentMenuId, string LoggedInUserID, string ModuleIDs, int CompanyID) {
            this.FetchMenuAsync(parentMenuId, LoggedInUserID, ModuleIDs, CompanyID, null);
        }
        
        /// <remarks/>
        public void FetchMenuAsync(int parentMenuId, string LoggedInUserID, string ModuleIDs, int CompanyID, object userState) {
            if ((this.FetchMenuOperationCompleted == null)) {
                this.FetchMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchMenuOperationCompleted);
            }
            this.InvokeAsync("FetchMenu", new object[] {
                        parentMenuId,
                        LoggedInUserID,
                        ModuleIDs,
                        CompanyID}, this.FetchMenuOperationCompleted, userState);
        }
        
        private void OnFetchMenuOperationCompleted(object arg) {
            if ((this.FetchMenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchMenuCompleted(this, new FetchMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RoleMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RoleMaster_CRUD(int RoleID, string Role, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("RoleMaster_CRUD", new object[] {
                        RoleID,
                        Role,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RoleMaster_CRUDAsync(int RoleID, string Role, string LoggedInUserID, string strAction) {
            this.RoleMaster_CRUDAsync(RoleID, Role, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void RoleMaster_CRUDAsync(int RoleID, string Role, string LoggedInUserID, string strAction, object userState) {
            if ((this.RoleMaster_CRUDOperationCompleted == null)) {
                this.RoleMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRoleMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("RoleMaster_CRUD", new object[] {
                        RoleID,
                        Role,
                        LoggedInUserID,
                        strAction}, this.RoleMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnRoleMaster_CRUDOperationCompleted(object arg) {
            if ((this.RoleMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RoleMaster_CRUDCompleted(this, new RoleMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Assigned_Role", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Assigned_Role(int RoleID) {
            object[] results = this.Invoke("Fetch_Assigned_Role", new object[] {
                        RoleID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Assigned_RoleAsync(int RoleID) {
            this.Fetch_Assigned_RoleAsync(RoleID, null);
        }
        
        /// <remarks/>
        public void Fetch_Assigned_RoleAsync(int RoleID, object userState) {
            if ((this.Fetch_Assigned_RoleOperationCompleted == null)) {
                this.Fetch_Assigned_RoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Assigned_RoleOperationCompleted);
            }
            this.InvokeAsync("Fetch_Assigned_Role", new object[] {
                        RoleID}, this.Fetch_Assigned_RoleOperationCompleted, userState);
        }
        
        private void OnFetch_Assigned_RoleOperationCompleted(object arg) {
            if ((this.Fetch_Assigned_RoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Assigned_RoleCompleted(this, new Fetch_Assigned_RoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Role_Menu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Role_Menu() {
            object[] results = this.Invoke("Fetch_Role_Menu", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Role_MenuAsync() {
            this.Fetch_Role_MenuAsync(null);
        }
        
        /// <remarks/>
        public void Fetch_Role_MenuAsync(object userState) {
            if ((this.Fetch_Role_MenuOperationCompleted == null)) {
                this.Fetch_Role_MenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Role_MenuOperationCompleted);
            }
            this.InvokeAsync("Fetch_Role_Menu", new object[0], this.Fetch_Role_MenuOperationCompleted, userState);
        }
        
        private void OnFetch_Role_MenuOperationCompleted(object arg) {
            if ((this.Fetch_Role_MenuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Role_MenuCompleted(this, new Fetch_Role_MenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FETCH_Saved_Role_MENU_Rights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FETCH_Saved_Role_MENU_Rights(int RoleID, int ParentMenuId) {
            object[] results = this.Invoke("FETCH_Saved_Role_MENU_Rights", new object[] {
                        RoleID,
                        ParentMenuId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FETCH_Saved_Role_MENU_RightsAsync(int RoleID, int ParentMenuId) {
            this.FETCH_Saved_Role_MENU_RightsAsync(RoleID, ParentMenuId, null);
        }
        
        /// <remarks/>
        public void FETCH_Saved_Role_MENU_RightsAsync(int RoleID, int ParentMenuId, object userState) {
            if ((this.FETCH_Saved_Role_MENU_RightsOperationCompleted == null)) {
                this.FETCH_Saved_Role_MENU_RightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFETCH_Saved_Role_MENU_RightsOperationCompleted);
            }
            this.InvokeAsync("FETCH_Saved_Role_MENU_Rights", new object[] {
                        RoleID,
                        ParentMenuId}, this.FETCH_Saved_Role_MENU_RightsOperationCompleted, userState);
        }
        
        private void OnFETCH_Saved_Role_MENU_RightsOperationCompleted(object arg) {
            if ((this.FETCH_Saved_Role_MENU_RightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FETCH_Saved_Role_MENU_RightsCompleted(this, new FETCH_Saved_Role_MENU_RightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_RoleMenuRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_RoleMenuRights(int RoleId, int ParentMenuId, string LoggedInUserID, string strWpSectionHeaderData) {
            object[] results = this.Invoke("Insert_RoleMenuRights", new object[] {
                        RoleId,
                        ParentMenuId,
                        LoggedInUserID,
                        strWpSectionHeaderData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_RoleMenuRightsAsync(int RoleId, int ParentMenuId, string LoggedInUserID, string strWpSectionHeaderData) {
            this.Insert_RoleMenuRightsAsync(RoleId, ParentMenuId, LoggedInUserID, strWpSectionHeaderData, null);
        }
        
        /// <remarks/>
        public void Insert_RoleMenuRightsAsync(int RoleId, int ParentMenuId, string LoggedInUserID, string strWpSectionHeaderData, object userState) {
            if ((this.Insert_RoleMenuRightsOperationCompleted == null)) {
                this.Insert_RoleMenuRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_RoleMenuRightsOperationCompleted);
            }
            this.InvokeAsync("Insert_RoleMenuRights", new object[] {
                        RoleId,
                        ParentMenuId,
                        LoggedInUserID,
                        strWpSectionHeaderData}, this.Insert_RoleMenuRightsOperationCompleted, userState);
        }
        
        private void OnInsert_RoleMenuRightsOperationCompleted(object arg) {
            if ((this.Insert_RoleMenuRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_RoleMenuRightsCompleted(this, new Insert_RoleMenuRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Assigned_Role", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_Assigned_Role(int RoleID, string SelectedEmployees, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_Assigned_Role", new object[] {
                        RoleID,
                        SelectedEmployees,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_Assigned_RoleAsync(int RoleID, string SelectedEmployees, string LoggedInUserID) {
            this.Insert_Assigned_RoleAsync(RoleID, SelectedEmployees, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_Assigned_RoleAsync(int RoleID, string SelectedEmployees, string LoggedInUserID, object userState) {
            if ((this.Insert_Assigned_RoleOperationCompleted == null)) {
                this.Insert_Assigned_RoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Assigned_RoleOperationCompleted);
            }
            this.InvokeAsync("Insert_Assigned_Role", new object[] {
                        RoleID,
                        SelectedEmployees,
                        LoggedInUserID}, this.Insert_Assigned_RoleOperationCompleted, userState);
        }
        
        private void OnInsert_Assigned_RoleOperationCompleted(object arg) {
            if ((this.Insert_Assigned_RoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Assigned_RoleCompleted(this, new Insert_Assigned_RoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_RoleListing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_RoleListing() {
            object[] results = this.Invoke("Fetch_RoleListing", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_RoleListingAsync() {
            this.Fetch_RoleListingAsync(null);
        }
        
        /// <remarks/>
        public void Fetch_RoleListingAsync(object userState) {
            if ((this.Fetch_RoleListingOperationCompleted == null)) {
                this.Fetch_RoleListingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_RoleListingOperationCompleted);
            }
            this.InvokeAsync("Fetch_RoleListing", new object[0], this.Fetch_RoleListingOperationCompleted, userState);
        }
        
        private void OnFetch_RoleListingOperationCompleted(object arg) {
            if ((this.Fetch_RoleListingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_RoleListingCompleted(this, new Fetch_RoleListingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_GatePassConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_GatePassConfiguration(string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlGatepass_Header, string strXmlGatepass_Type, string strXmlGatepass_Doc, string strXmlGatepass_TermCondition, string strXmlApprovalMatrix, bool ShowApprovalMatrix, string strGPClosureBy, string GatepassDescription, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_GatePassConfiguration", new object[] {
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlGatepass_Header,
                        strXmlGatepass_Type,
                        strXmlGatepass_Doc,
                        strXmlGatepass_TermCondition,
                        strXmlApprovalMatrix,
                        ShowApprovalMatrix,
                        strGPClosureBy,
                        GatepassDescription,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_GatePassConfigurationAsync(string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlGatepass_Header, string strXmlGatepass_Type, string strXmlGatepass_Doc, string strXmlGatepass_TermCondition, string strXmlApprovalMatrix, bool ShowApprovalMatrix, string strGPClosureBy, string GatepassDescription, string LoggedInUserID) {
            this.Insert_GatePassConfigurationAsync(strConfigTitle, CompanyID, strInitiator, LinkDepartment, strTransactionPrefix, strXmlGatepass_Header, strXmlGatepass_Type, strXmlGatepass_Doc, strXmlGatepass_TermCondition, strXmlApprovalMatrix, ShowApprovalMatrix, strGPClosureBy, GatepassDescription, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_GatePassConfigurationAsync(string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlGatepass_Header, string strXmlGatepass_Type, string strXmlGatepass_Doc, string strXmlGatepass_TermCondition, string strXmlApprovalMatrix, bool ShowApprovalMatrix, string strGPClosureBy, string GatepassDescription, string LoggedInUserID, object userState) {
            if ((this.Insert_GatePassConfigurationOperationCompleted == null)) {
                this.Insert_GatePassConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_GatePassConfigurationOperationCompleted);
            }
            this.InvokeAsync("Insert_GatePassConfiguration", new object[] {
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlGatepass_Header,
                        strXmlGatepass_Type,
                        strXmlGatepass_Doc,
                        strXmlGatepass_TermCondition,
                        strXmlApprovalMatrix,
                        ShowApprovalMatrix,
                        strGPClosureBy,
                        GatepassDescription,
                        LoggedInUserID}, this.Insert_GatePassConfigurationOperationCompleted, userState);
        }
        
        private void OnInsert_GatePassConfigurationOperationCompleted(object arg) {
            if ((this.Insert_GatePassConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_GatePassConfigurationCompleted(this, new Insert_GatePassConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_GatePassConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_GatePassConfiguration(string Initiator, int CompanyID) {
            object[] results = this.Invoke("Fetch_GatePassConfiguration", new object[] {
                        Initiator,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_GatePassConfigurationAsync(string Initiator, int CompanyID) {
            this.Fetch_GatePassConfigurationAsync(Initiator, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_GatePassConfigurationAsync(string Initiator, int CompanyID, object userState) {
            if ((this.Fetch_GatePassConfigurationOperationCompleted == null)) {
                this.Fetch_GatePassConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_GatePassConfigurationOperationCompleted);
            }
            this.InvokeAsync("Fetch_GatePassConfiguration", new object[] {
                        Initiator,
                        CompanyID}, this.Fetch_GatePassConfigurationOperationCompleted, userState);
        }
        
        private void OnFetch_GatePassConfigurationOperationCompleted(object arg) {
            if ((this.Fetch_GatePassConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_GatePassConfigurationCompleted(this, new Fetch_GatePassConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_GatePassConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_GatePassConfiguration(int GP_ConfigID) {
            object[] results = this.Invoke("Bind_GatePassConfiguration", new object[] {
                        GP_ConfigID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_GatePassConfigurationAsync(int GP_ConfigID) {
            this.Bind_GatePassConfigurationAsync(GP_ConfigID, null);
        }
        
        /// <remarks/>
        public void Bind_GatePassConfigurationAsync(int GP_ConfigID, object userState) {
            if ((this.Bind_GatePassConfigurationOperationCompleted == null)) {
                this.Bind_GatePassConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_GatePassConfigurationOperationCompleted);
            }
            this.InvokeAsync("Bind_GatePassConfiguration", new object[] {
                        GP_ConfigID}, this.Bind_GatePassConfigurationOperationCompleted, userState);
        }
        
        private void OnBind_GatePassConfigurationOperationCompleted(object arg) {
            if ((this.Bind_GatePassConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_GatePassConfigurationCompleted(this, new Bind_GatePassConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GatePassHeader_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GatePassHeader_CRUD(int GatePassHeaderID, string GatePassHeader, bool GPHeaderNumeric, int GPHeaderUnit, int GatePass_ConfigID, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("GatePassHeader_CRUD", new object[] {
                        GatePassHeaderID,
                        GatePassHeader,
                        GPHeaderNumeric,
                        GPHeaderUnit,
                        GatePass_ConfigID,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GatePassHeader_CRUDAsync(int GatePassHeaderID, string GatePassHeader, bool GPHeaderNumeric, int GPHeaderUnit, int GatePass_ConfigID, string LoggedInUserID, string strAction) {
            this.GatePassHeader_CRUDAsync(GatePassHeaderID, GatePassHeader, GPHeaderNumeric, GPHeaderUnit, GatePass_ConfigID, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void GatePassHeader_CRUDAsync(int GatePassHeaderID, string GatePassHeader, bool GPHeaderNumeric, int GPHeaderUnit, int GatePass_ConfigID, string LoggedInUserID, string strAction, object userState) {
            if ((this.GatePassHeader_CRUDOperationCompleted == null)) {
                this.GatePassHeader_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGatePassHeader_CRUDOperationCompleted);
            }
            this.InvokeAsync("GatePassHeader_CRUD", new object[] {
                        GatePassHeaderID,
                        GatePassHeader,
                        GPHeaderNumeric,
                        GPHeaderUnit,
                        GatePass_ConfigID,
                        LoggedInUserID,
                        strAction}, this.GatePassHeader_CRUDOperationCompleted, userState);
        }
        
        private void OnGatePassHeader_CRUDOperationCompleted(object arg) {
            if ((this.GatePassHeader_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GatePassHeader_CRUDCompleted(this, new GatePassHeader_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GatePassType_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GatePassType_CRUD(int GP_TypeID, string GP_TypeDesc, int GatePass_ConfigID, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("GatePassType_CRUD", new object[] {
                        GP_TypeID,
                        GP_TypeDesc,
                        GatePass_ConfigID,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GatePassType_CRUDAsync(int GP_TypeID, string GP_TypeDesc, int GatePass_ConfigID, string LoggedInUserID, string strAction) {
            this.GatePassType_CRUDAsync(GP_TypeID, GP_TypeDesc, GatePass_ConfigID, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void GatePassType_CRUDAsync(int GP_TypeID, string GP_TypeDesc, int GatePass_ConfigID, string LoggedInUserID, string strAction, object userState) {
            if ((this.GatePassType_CRUDOperationCompleted == null)) {
                this.GatePassType_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGatePassType_CRUDOperationCompleted);
            }
            this.InvokeAsync("GatePassType_CRUD", new object[] {
                        GP_TypeID,
                        GP_TypeDesc,
                        GatePass_ConfigID,
                        LoggedInUserID,
                        strAction}, this.GatePassType_CRUDOperationCompleted, userState);
        }
        
        private void OnGatePassType_CRUDOperationCompleted(object arg) {
            if ((this.GatePassType_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GatePassType_CRUDCompleted(this, new GatePassType_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GatePassTerm_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GatePassTerm_CRUD(int GP_TermID, string GP_TermDesc, int GatePass_ConfigID, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("GatePassTerm_CRUD", new object[] {
                        GP_TermID,
                        GP_TermDesc,
                        GatePass_ConfigID,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GatePassTerm_CRUDAsync(int GP_TermID, string GP_TermDesc, int GatePass_ConfigID, string LoggedInUserID, string strAction) {
            this.GatePassTerm_CRUDAsync(GP_TermID, GP_TermDesc, GatePass_ConfigID, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void GatePassTerm_CRUDAsync(int GP_TermID, string GP_TermDesc, int GatePass_ConfigID, string LoggedInUserID, string strAction, object userState) {
            if ((this.GatePassTerm_CRUDOperationCompleted == null)) {
                this.GatePassTerm_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGatePassTerm_CRUDOperationCompleted);
            }
            this.InvokeAsync("GatePassTerm_CRUD", new object[] {
                        GP_TermID,
                        GP_TermDesc,
                        GatePass_ConfigID,
                        LoggedInUserID,
                        strAction}, this.GatePassTerm_CRUDOperationCompleted, userState);
        }
        
        private void OnGatePassTerm_CRUDOperationCompleted(object arg) {
            if ((this.GatePassTerm_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GatePassTerm_CRUDCompleted(this, new GatePassTerm_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_GatePassConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_GatePassConfiguration(int GP_Config_ID, string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlApprovalMatrix, bool ShowApprovalMatrix, string strGPClosureBy, string GatepassDescription, string LoggedInUserID) {
            object[] results = this.Invoke("Update_GatePassConfiguration", new object[] {
                        GP_Config_ID,
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlApprovalMatrix,
                        ShowApprovalMatrix,
                        strGPClosureBy,
                        GatepassDescription,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_GatePassConfigurationAsync(int GP_Config_ID, string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlApprovalMatrix, bool ShowApprovalMatrix, string strGPClosureBy, string GatepassDescription, string LoggedInUserID) {
            this.Update_GatePassConfigurationAsync(GP_Config_ID, strConfigTitle, CompanyID, strInitiator, LinkDepartment, strTransactionPrefix, strXmlApprovalMatrix, ShowApprovalMatrix, strGPClosureBy, GatepassDescription, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Update_GatePassConfigurationAsync(int GP_Config_ID, string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlApprovalMatrix, bool ShowApprovalMatrix, string strGPClosureBy, string GatepassDescription, string LoggedInUserID, object userState) {
            if ((this.Update_GatePassConfigurationOperationCompleted == null)) {
                this.Update_GatePassConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_GatePassConfigurationOperationCompleted);
            }
            this.InvokeAsync("Update_GatePassConfiguration", new object[] {
                        GP_Config_ID,
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlApprovalMatrix,
                        ShowApprovalMatrix,
                        strGPClosureBy,
                        GatepassDescription,
                        LoggedInUserID}, this.Update_GatePassConfigurationOperationCompleted, userState);
        }
        
        private void OnUpdate_GatePassConfigurationOperationCompleted(object arg) {
            if ((this.Update_GatePassConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_GatePassConfigurationCompleted(this, new Update_GatePassConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_GatePassRequestDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_GatePassRequestDetails(int GP_ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Bind_GatePassRequestDetails", new object[] {
                        GP_ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_GatePassRequestDetailsAsync(int GP_ConfigID, string LoggedInUserID) {
            this.Bind_GatePassRequestDetailsAsync(GP_ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Bind_GatePassRequestDetailsAsync(int GP_ConfigID, string LoggedInUserID, object userState) {
            if ((this.Bind_GatePassRequestDetailsOperationCompleted == null)) {
                this.Bind_GatePassRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_GatePassRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("Bind_GatePassRequestDetails", new object[] {
                        GP_ConfigID,
                        LoggedInUserID}, this.Bind_GatePassRequestDetailsOperationCompleted, userState);
        }
        
        private void OnBind_GatePassRequestDetailsOperationCompleted(object arg) {
            if ((this.Bind_GatePassRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_GatePassRequestDetailsCompleted(this, new Bind_GatePassRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_GatePassRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_GatePassRequest(int GP_ConfigID, string strGatePassDate, int DeptID, int GPTypeID, string strGPHeader, string strGPHeaderData, string strGPDoc, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_GatePassRequest", new object[] {
                        GP_ConfigID,
                        strGatePassDate,
                        DeptID,
                        GPTypeID,
                        strGPHeader,
                        strGPHeaderData,
                        strGPDoc,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_GatePassRequestAsync(int GP_ConfigID, string strGatePassDate, int DeptID, int GPTypeID, string strGPHeader, string strGPHeaderData, string strGPDoc, string LoggedInUserID) {
            this.Insert_GatePassRequestAsync(GP_ConfigID, strGatePassDate, DeptID, GPTypeID, strGPHeader, strGPHeaderData, strGPDoc, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_GatePassRequestAsync(int GP_ConfigID, string strGatePassDate, int DeptID, int GPTypeID, string strGPHeader, string strGPHeaderData, string strGPDoc, string LoggedInUserID, object userState) {
            if ((this.Insert_GatePassRequestOperationCompleted == null)) {
                this.Insert_GatePassRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_GatePassRequestOperationCompleted);
            }
            this.InvokeAsync("Insert_GatePassRequest", new object[] {
                        GP_ConfigID,
                        strGatePassDate,
                        DeptID,
                        GPTypeID,
                        strGPHeader,
                        strGPHeaderData,
                        strGPDoc,
                        LoggedInUserID}, this.Insert_GatePassRequestOperationCompleted, userState);
        }
        
        private void OnInsert_GatePassRequestOperationCompleted(object arg) {
            if ((this.Insert_GatePassRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_GatePassRequestCompleted(this, new Insert_GatePassRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyRequestGatePass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyRequestGatePass(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyRequestGatePass", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyRequestGatePassAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_MyRequestGatePassAsync(CompanyID, LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyRequestGatePassAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyRequestGatePassOperationCompleted == null)) {
                this.Fetch_MyRequestGatePassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyRequestGatePassOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyRequestGatePass", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_MyRequestGatePassOperationCompleted, userState);
        }
        
        private void OnFetch_MyRequestGatePassOperationCompleted(object arg) {
            if ((this.Fetch_MyRequestGatePassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyRequestGatePassCompleted(this, new Fetch_MyRequestGatePassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyActionableGatePass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyActionableGatePass(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyActionableGatePass", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyActionableGatePassAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_MyActionableGatePassAsync(CompanyID, LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyActionableGatePassAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyActionableGatePassOperationCompleted == null)) {
                this.Fetch_MyActionableGatePassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyActionableGatePassOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyActionableGatePass", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_MyActionableGatePassOperationCompleted, userState);
        }
        
        private void OnFetch_MyActionableGatePassOperationCompleted(object arg) {
            if ((this.Fetch_MyActionableGatePassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyActionableGatePassCompleted(this, new Fetch_MyActionableGatePassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_GatePassRequest_Approval_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_GatePassRequest_Approval_Details(int TransactionID, string LoggedInUserID) {
            object[] results = this.Invoke("Fetch_GatePassRequest_Approval_Details", new object[] {
                        TransactionID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_GatePassRequest_Approval_DetailsAsync(int TransactionID, string LoggedInUserID) {
            this.Fetch_GatePassRequest_Approval_DetailsAsync(TransactionID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Fetch_GatePassRequest_Approval_DetailsAsync(int TransactionID, string LoggedInUserID, object userState) {
            if ((this.Fetch_GatePassRequest_Approval_DetailsOperationCompleted == null)) {
                this.Fetch_GatePassRequest_Approval_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_GatePassRequest_Approval_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_GatePassRequest_Approval_Details", new object[] {
                        TransactionID,
                        LoggedInUserID}, this.Fetch_GatePassRequest_Approval_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_GatePassRequest_Approval_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_GatePassRequest_Approval_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_GatePassRequest_Approval_DetailsCompleted(this, new Fetch_GatePassRequest_Approval_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAction_GatePassRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateAction_GatePassRequest(string TransactionID, string CurrentLevel, string ActionStatus, string strRemarks, string LoggedInUserID) {
            object[] results = this.Invoke("UpdateAction_GatePassRequest", new object[] {
                        TransactionID,
                        CurrentLevel,
                        ActionStatus,
                        strRemarks,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAction_GatePassRequestAsync(string TransactionID, string CurrentLevel, string ActionStatus, string strRemarks, string LoggedInUserID) {
            this.UpdateAction_GatePassRequestAsync(TransactionID, CurrentLevel, ActionStatus, strRemarks, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void UpdateAction_GatePassRequestAsync(string TransactionID, string CurrentLevel, string ActionStatus, string strRemarks, string LoggedInUserID, object userState) {
            if ((this.UpdateAction_GatePassRequestOperationCompleted == null)) {
                this.UpdateAction_GatePassRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAction_GatePassRequestOperationCompleted);
            }
            this.InvokeAsync("UpdateAction_GatePassRequest", new object[] {
                        TransactionID,
                        CurrentLevel,
                        ActionStatus,
                        strRemarks,
                        LoggedInUserID}, this.UpdateAction_GatePassRequestOperationCompleted, userState);
        }
        
        private void OnUpdateAction_GatePassRequestOperationCompleted(object arg) {
            if ((this.UpdateAction_GatePassRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAction_GatePassRequestCompleted(this, new UpdateAction_GatePassRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_GatePass_MIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_GatePass_MIS(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_GatePass_MIS", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_GatePass_MISAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_GatePass_MISAsync(CompanyID, LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_GatePass_MISAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_GatePass_MISOperationCompleted == null)) {
                this.Fetch_GatePass_MISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_GatePass_MISOperationCompleted);
            }
            this.InvokeAsync("Fetch_GatePass_MIS", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_GatePass_MISOperationCompleted, userState);
        }
        
        private void OnFetch_GatePass_MISOperationCompleted(object arg) {
            if ((this.Fetch_GatePass_MISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_GatePass_MISCompleted(this, new Fetch_GatePass_MISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GatePassConfiguration_Document_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GatePassConfiguration_Document_CRUD(int GP_ConfigID, int GatePassDocID, string DocumentHeader, int Mandatory, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("GatePassConfiguration_Document_CRUD", new object[] {
                        GP_ConfigID,
                        GatePassDocID,
                        DocumentHeader,
                        Mandatory,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GatePassConfiguration_Document_CRUDAsync(int GP_ConfigID, int GatePassDocID, string DocumentHeader, int Mandatory, string LoggedInUserID, string strAction) {
            this.GatePassConfiguration_Document_CRUDAsync(GP_ConfigID, GatePassDocID, DocumentHeader, Mandatory, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void GatePassConfiguration_Document_CRUDAsync(int GP_ConfigID, int GatePassDocID, string DocumentHeader, int Mandatory, string LoggedInUserID, string strAction, object userState) {
            if ((this.GatePassConfiguration_Document_CRUDOperationCompleted == null)) {
                this.GatePassConfiguration_Document_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGatePassConfiguration_Document_CRUDOperationCompleted);
            }
            this.InvokeAsync("GatePassConfiguration_Document_CRUD", new object[] {
                        GP_ConfigID,
                        GatePassDocID,
                        DocumentHeader,
                        Mandatory,
                        LoggedInUserID,
                        strAction}, this.GatePassConfiguration_Document_CRUDOperationCompleted, userState);
        }
        
        private void OnGatePassConfiguration_Document_CRUDOperationCompleted(object arg) {
            if ((this.GatePassConfiguration_Document_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GatePassConfiguration_Document_CRUDCompleted(this, new GatePassConfiguration_Document_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_WorkPermitConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_WorkPermitConfiguration(string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlWorkPermit_Header, string strXmlWorkPermit_TermCondition, string strXmlApprovalMatrix, bool chkShowApprovalMatrix_Initiator, bool chkShowApprovalMatrix_Approver, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_WorkPermitConfiguration", new object[] {
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlWorkPermit_Header,
                        strXmlWorkPermit_TermCondition,
                        strXmlApprovalMatrix,
                        chkShowApprovalMatrix_Initiator,
                        chkShowApprovalMatrix_Approver,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_WorkPermitConfigurationAsync(string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlWorkPermit_Header, string strXmlWorkPermit_TermCondition, string strXmlApprovalMatrix, bool chkShowApprovalMatrix_Initiator, bool chkShowApprovalMatrix_Approver, string LoggedInUserID) {
            this.Insert_WorkPermitConfigurationAsync(strConfigTitle, CompanyID, strInitiator, LinkDepartment, strTransactionPrefix, strXmlWorkPermit_Header, strXmlWorkPermit_TermCondition, strXmlApprovalMatrix, chkShowApprovalMatrix_Initiator, chkShowApprovalMatrix_Approver, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_WorkPermitConfigurationAsync(string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlWorkPermit_Header, string strXmlWorkPermit_TermCondition, string strXmlApprovalMatrix, bool chkShowApprovalMatrix_Initiator, bool chkShowApprovalMatrix_Approver, string LoggedInUserID, object userState) {
            if ((this.Insert_WorkPermitConfigurationOperationCompleted == null)) {
                this.Insert_WorkPermitConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_WorkPermitConfigurationOperationCompleted);
            }
            this.InvokeAsync("Insert_WorkPermitConfiguration", new object[] {
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlWorkPermit_Header,
                        strXmlWorkPermit_TermCondition,
                        strXmlApprovalMatrix,
                        chkShowApprovalMatrix_Initiator,
                        chkShowApprovalMatrix_Approver,
                        LoggedInUserID}, this.Insert_WorkPermitConfigurationOperationCompleted, userState);
        }
        
        private void OnInsert_WorkPermitConfigurationOperationCompleted(object arg) {
            if ((this.Insert_WorkPermitConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_WorkPermitConfigurationCompleted(this, new Insert_WorkPermitConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Answer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Answer() {
            object[] results = this.Invoke("Fetch_Answer", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_AnswerAsync() {
            this.Fetch_AnswerAsync(null);
        }
        
        /// <remarks/>
        public void Fetch_AnswerAsync(object userState) {
            if ((this.Fetch_AnswerOperationCompleted == null)) {
                this.Fetch_AnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_AnswerOperationCompleted);
            }
            this.InvokeAsync("Fetch_Answer", new object[0], this.Fetch_AnswerOperationCompleted, userState);
        }
        
        private void OnFetch_AnswerOperationCompleted(object arg) {
            if ((this.Fetch_AnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_AnswerCompleted(this, new Fetch_AnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_WorkPermitConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_WorkPermitConfiguration(string Initiator, string CompanyID) {
            object[] results = this.Invoke("Fetch_WorkPermitConfiguration", new object[] {
                        Initiator,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_WorkPermitConfigurationAsync(string Initiator, string CompanyID) {
            this.Fetch_WorkPermitConfigurationAsync(Initiator, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_WorkPermitConfigurationAsync(string Initiator, string CompanyID, object userState) {
            if ((this.Fetch_WorkPermitConfigurationOperationCompleted == null)) {
                this.Fetch_WorkPermitConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_WorkPermitConfigurationOperationCompleted);
            }
            this.InvokeAsync("Fetch_WorkPermitConfiguration", new object[] {
                        Initiator,
                        CompanyID}, this.Fetch_WorkPermitConfigurationOperationCompleted, userState);
        }
        
        private void OnFetch_WorkPermitConfigurationOperationCompleted(object arg) {
            if ((this.Fetch_WorkPermitConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_WorkPermitConfigurationCompleted(this, new Fetch_WorkPermitConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_WorkPermitConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_WorkPermitConfiguration(int WP_ConfigID) {
            object[] results = this.Invoke("Bind_WorkPermitConfiguration", new object[] {
                        WP_ConfigID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_WorkPermitConfigurationAsync(int WP_ConfigID) {
            this.Bind_WorkPermitConfigurationAsync(WP_ConfigID, null);
        }
        
        /// <remarks/>
        public void Bind_WorkPermitConfigurationAsync(int WP_ConfigID, object userState) {
            if ((this.Bind_WorkPermitConfigurationOperationCompleted == null)) {
                this.Bind_WorkPermitConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_WorkPermitConfigurationOperationCompleted);
            }
            this.InvokeAsync("Bind_WorkPermitConfiguration", new object[] {
                        WP_ConfigID}, this.Bind_WorkPermitConfigurationOperationCompleted, userState);
        }
        
        private void OnBind_WorkPermitConfigurationOperationCompleted(object arg) {
            if ((this.Bind_WorkPermitConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_WorkPermitConfigurationCompleted(this, new Bind_WorkPermitConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_WorkPermitRequestDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_WorkPermitRequestDetails(int WP_ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Bind_WorkPermitRequestDetails", new object[] {
                        WP_ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_WorkPermitRequestDetailsAsync(int WP_ConfigID, string LoggedInUserID) {
            this.Bind_WorkPermitRequestDetailsAsync(WP_ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Bind_WorkPermitRequestDetailsAsync(int WP_ConfigID, string LoggedInUserID, object userState) {
            if ((this.Bind_WorkPermitRequestDetailsOperationCompleted == null)) {
                this.Bind_WorkPermitRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_WorkPermitRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("Bind_WorkPermitRequestDetails", new object[] {
                        WP_ConfigID,
                        LoggedInUserID}, this.Bind_WorkPermitRequestDetailsOperationCompleted, userState);
        }
        
        private void OnBind_WorkPermitRequestDetailsOperationCompleted(object arg) {
            if ((this.Bind_WorkPermitRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_WorkPermitRequestDetailsCompleted(this, new Bind_WorkPermitRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_WorkPermitRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_WorkPermitRequest(int WP_ConfigID, string LoggedInUserID, string strWpDate, string strWpTpDate, string strWpSectionHeaderData) {
            object[] results = this.Invoke("Insert_WorkPermitRequest", new object[] {
                        WP_ConfigID,
                        LoggedInUserID,
                        strWpDate,
                        strWpTpDate,
                        strWpSectionHeaderData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_WorkPermitRequestAsync(int WP_ConfigID, string LoggedInUserID, string strWpDate, string strWpTpDate, string strWpSectionHeaderData) {
            this.Insert_WorkPermitRequestAsync(WP_ConfigID, LoggedInUserID, strWpDate, strWpTpDate, strWpSectionHeaderData, null);
        }
        
        /// <remarks/>
        public void Insert_WorkPermitRequestAsync(int WP_ConfigID, string LoggedInUserID, string strWpDate, string strWpTpDate, string strWpSectionHeaderData, object userState) {
            if ((this.Insert_WorkPermitRequestOperationCompleted == null)) {
                this.Insert_WorkPermitRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_WorkPermitRequestOperationCompleted);
            }
            this.InvokeAsync("Insert_WorkPermitRequest", new object[] {
                        WP_ConfigID,
                        LoggedInUserID,
                        strWpDate,
                        strWpTpDate,
                        strWpSectionHeaderData}, this.Insert_WorkPermitRequestOperationCompleted, userState);
        }
        
        private void OnInsert_WorkPermitRequestOperationCompleted(object arg) {
            if ((this.Insert_WorkPermitRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_WorkPermitRequestCompleted(this, new Insert_WorkPermitRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_WorkPermitRequestSavedData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_WorkPermitRequestSavedData(int WP_ConfigID, string Transaction_ID, string LoggedInUserID) {
            object[] results = this.Invoke("Fetch_WorkPermitRequestSavedData", new object[] {
                        WP_ConfigID,
                        Transaction_ID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_WorkPermitRequestSavedDataAsync(int WP_ConfigID, string Transaction_ID, string LoggedInUserID) {
            this.Fetch_WorkPermitRequestSavedDataAsync(WP_ConfigID, Transaction_ID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Fetch_WorkPermitRequestSavedDataAsync(int WP_ConfigID, string Transaction_ID, string LoggedInUserID, object userState) {
            if ((this.Fetch_WorkPermitRequestSavedDataOperationCompleted == null)) {
                this.Fetch_WorkPermitRequestSavedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_WorkPermitRequestSavedDataOperationCompleted);
            }
            this.InvokeAsync("Fetch_WorkPermitRequestSavedData", new object[] {
                        WP_ConfigID,
                        Transaction_ID,
                        LoggedInUserID}, this.Fetch_WorkPermitRequestSavedDataOperationCompleted, userState);
        }
        
        private void OnFetch_WorkPermitRequestSavedDataOperationCompleted(object arg) {
            if ((this.Fetch_WorkPermitRequestSavedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_WorkPermitRequestSavedDataCompleted(this, new Fetch_WorkPermitRequestSavedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_WorkPermitRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_WorkPermitRequest(int TransactionID, string LoggedInUserID, string ActionStatus, string Remarks) {
            object[] results = this.Invoke("Update_WorkPermitRequest", new object[] {
                        TransactionID,
                        LoggedInUserID,
                        ActionStatus,
                        Remarks});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_WorkPermitRequestAsync(int TransactionID, string LoggedInUserID, string ActionStatus, string Remarks) {
            this.Update_WorkPermitRequestAsync(TransactionID, LoggedInUserID, ActionStatus, Remarks, null);
        }
        
        /// <remarks/>
        public void Update_WorkPermitRequestAsync(int TransactionID, string LoggedInUserID, string ActionStatus, string Remarks, object userState) {
            if ((this.Update_WorkPermitRequestOperationCompleted == null)) {
                this.Update_WorkPermitRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_WorkPermitRequestOperationCompleted);
            }
            this.InvokeAsync("Update_WorkPermitRequest", new object[] {
                        TransactionID,
                        LoggedInUserID,
                        ActionStatus,
                        Remarks}, this.Update_WorkPermitRequestOperationCompleted, userState);
        }
        
        private void OnUpdate_WorkPermitRequestOperationCompleted(object arg) {
            if ((this.Update_WorkPermitRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_WorkPermitRequestCompleted(this, new Update_WorkPermitRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyRequestWorkPermit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyRequestWorkPermit(string LoggedInUserID, string From_Date, string To_Date, int CompanyID) {
            object[] results = this.Invoke("Fetch_MyRequestWorkPermit", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyRequestWorkPermitAsync(string LoggedInUserID, string From_Date, string To_Date, int CompanyID) {
            this.Fetch_MyRequestWorkPermitAsync(LoggedInUserID, From_Date, To_Date, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_MyRequestWorkPermitAsync(string LoggedInUserID, string From_Date, string To_Date, int CompanyID, object userState) {
            if ((this.Fetch_MyRequestWorkPermitOperationCompleted == null)) {
                this.Fetch_MyRequestWorkPermitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyRequestWorkPermitOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyRequestWorkPermit", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date,
                        CompanyID}, this.Fetch_MyRequestWorkPermitOperationCompleted, userState);
        }
        
        private void OnFetch_MyRequestWorkPermitOperationCompleted(object arg) {
            if ((this.Fetch_MyRequestWorkPermitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyRequestWorkPermitCompleted(this, new Fetch_MyRequestWorkPermitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyActionableWorkPermit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyActionableWorkPermit(string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyActionableWorkPermit", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyActionableWorkPermitAsync(string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_MyActionableWorkPermitAsync(LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyActionableWorkPermitAsync(string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyActionableWorkPermitOperationCompleted == null)) {
                this.Fetch_MyActionableWorkPermitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyActionableWorkPermitOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyActionableWorkPermit", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_MyActionableWorkPermitOperationCompleted, userState);
        }
        
        private void OnFetch_MyActionableWorkPermitOperationCompleted(object arg) {
            if ((this.Fetch_MyActionableWorkPermitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyActionableWorkPermitCompleted(this, new Fetch_MyActionableWorkPermitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_DashboardCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_DashboardCount(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_DashboardCount", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_DashboardCountAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_DashboardCountAsync(CompanyID, LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_DashboardCountAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_DashboardCountOperationCompleted == null)) {
                this.Fetch_DashboardCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_DashboardCountOperationCompleted);
            }
            this.InvokeAsync("Fetch_DashboardCount", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_DashboardCountOperationCompleted, userState);
        }
        
        private void OnFetch_DashboardCountOperationCompleted(object arg) {
            if ((this.Fetch_DashboardCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_DashboardCountCompleted(this, new Fetch_DashboardCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_GatePassConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_GatePassConfiguration(int ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_GatePassConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_GatePassConfigurationAsync(int ConfigID, string LoggedInUserID) {
            this.Delete_GatePassConfigurationAsync(ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_GatePassConfigurationAsync(int ConfigID, string LoggedInUserID, object userState) {
            if ((this.Delete_GatePassConfigurationOperationCompleted == null)) {
                this.Delete_GatePassConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_GatePassConfigurationOperationCompleted);
            }
            this.InvokeAsync("Delete_GatePassConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID}, this.Delete_GatePassConfigurationOperationCompleted, userState);
        }
        
        private void OnDelete_GatePassConfigurationOperationCompleted(object arg) {
            if ((this.Delete_GatePassConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_GatePassConfigurationCompleted(this, new Delete_GatePassConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_WorkPermitConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_WorkPermitConfiguration(int WP_Config_ID, string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlWorkPermit_Header, string strXmlWorkPermit_TermCondition, string strXmlApprovalMatrix, bool chkShowApprovalMatrix_Initiator, bool chkShowApprovalMatrix_Approver, string LoggedInUserID) {
            object[] results = this.Invoke("Update_WorkPermitConfiguration", new object[] {
                        WP_Config_ID,
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlWorkPermit_Header,
                        strXmlWorkPermit_TermCondition,
                        strXmlApprovalMatrix,
                        chkShowApprovalMatrix_Initiator,
                        chkShowApprovalMatrix_Approver,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_WorkPermitConfigurationAsync(int WP_Config_ID, string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlWorkPermit_Header, string strXmlWorkPermit_TermCondition, string strXmlApprovalMatrix, bool chkShowApprovalMatrix_Initiator, bool chkShowApprovalMatrix_Approver, string LoggedInUserID) {
            this.Update_WorkPermitConfigurationAsync(WP_Config_ID, strConfigTitle, CompanyID, strInitiator, LinkDepartment, strTransactionPrefix, strXmlWorkPermit_Header, strXmlWorkPermit_TermCondition, strXmlApprovalMatrix, chkShowApprovalMatrix_Initiator, chkShowApprovalMatrix_Approver, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Update_WorkPermitConfigurationAsync(int WP_Config_ID, string strConfigTitle, int CompanyID, string strInitiator, bool LinkDepartment, string strTransactionPrefix, string strXmlWorkPermit_Header, string strXmlWorkPermit_TermCondition, string strXmlApprovalMatrix, bool chkShowApprovalMatrix_Initiator, bool chkShowApprovalMatrix_Approver, string LoggedInUserID, object userState) {
            if ((this.Update_WorkPermitConfigurationOperationCompleted == null)) {
                this.Update_WorkPermitConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_WorkPermitConfigurationOperationCompleted);
            }
            this.InvokeAsync("Update_WorkPermitConfiguration", new object[] {
                        WP_Config_ID,
                        strConfigTitle,
                        CompanyID,
                        strInitiator,
                        LinkDepartment,
                        strTransactionPrefix,
                        strXmlWorkPermit_Header,
                        strXmlWorkPermit_TermCondition,
                        strXmlApprovalMatrix,
                        chkShowApprovalMatrix_Initiator,
                        chkShowApprovalMatrix_Approver,
                        LoggedInUserID}, this.Update_WorkPermitConfigurationOperationCompleted, userState);
        }
        
        private void OnUpdate_WorkPermitConfigurationOperationCompleted(object arg) {
            if ((this.Update_WorkPermitConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_WorkPermitConfigurationCompleted(this, new Update_WorkPermitConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_WorkPermitSavedConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_WorkPermitSavedConfiguration(int WP_ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Bind_WorkPermitSavedConfiguration", new object[] {
                        WP_ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_WorkPermitSavedConfigurationAsync(int WP_ConfigID, string LoggedInUserID) {
            this.Bind_WorkPermitSavedConfigurationAsync(WP_ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Bind_WorkPermitSavedConfigurationAsync(int WP_ConfigID, string LoggedInUserID, object userState) {
            if ((this.Bind_WorkPermitSavedConfigurationOperationCompleted == null)) {
                this.Bind_WorkPermitSavedConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_WorkPermitSavedConfigurationOperationCompleted);
            }
            this.InvokeAsync("Bind_WorkPermitSavedConfiguration", new object[] {
                        WP_ConfigID,
                        LoggedInUserID}, this.Bind_WorkPermitSavedConfigurationOperationCompleted, userState);
        }
        
        private void OnBind_WorkPermitSavedConfigurationOperationCompleted(object arg) {
            if ((this.Bind_WorkPermitSavedConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_WorkPermitSavedConfigurationCompleted(this, new Bind_WorkPermitSavedConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_WorkPermit_MIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_WorkPermit_MIS(string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_WorkPermit_MIS", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_WorkPermit_MISAsync(string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_WorkPermit_MISAsync(LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_WorkPermit_MISAsync(string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_WorkPermit_MISOperationCompleted == null)) {
                this.Fetch_WorkPermit_MISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_WorkPermit_MISOperationCompleted);
            }
            this.InvokeAsync("Fetch_WorkPermit_MIS", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_WorkPermit_MISOperationCompleted, userState);
        }
        
        private void OnFetch_WorkPermit_MISOperationCompleted(object arg) {
            if ((this.Fetch_WorkPermit_MISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_WorkPermit_MISCompleted(this, new Fetch_WorkPermit_MISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_WPConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_WPConfiguration(int ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_WPConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_WPConfigurationAsync(int ConfigID, string LoggedInUserID) {
            this.Delete_WPConfigurationAsync(ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_WPConfigurationAsync(int ConfigID, string LoggedInUserID, object userState) {
            if ((this.Delete_WPConfigurationOperationCompleted == null)) {
                this.Delete_WPConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_WPConfigurationOperationCompleted);
            }
            this.InvokeAsync("Delete_WPConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID}, this.Delete_WPConfigurationOperationCompleted, userState);
        }
        
        private void OnDelete_WPConfigurationOperationCompleted(object arg) {
            if ((this.Delete_WPConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_WPConfigurationCompleted(this, new Delete_WPConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Chk_Answer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Chk_Answer() {
            object[] results = this.Invoke("Fetch_Chk_Answer", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Chk_AnswerAsync() {
            this.Fetch_Chk_AnswerAsync(null);
        }
        
        /// <remarks/>
        public void Fetch_Chk_AnswerAsync(object userState) {
            if ((this.Fetch_Chk_AnswerOperationCompleted == null)) {
                this.Fetch_Chk_AnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Chk_AnswerOperationCompleted);
            }
            this.InvokeAsync("Fetch_Chk_Answer", new object[0], this.Fetch_Chk_AnswerOperationCompleted, userState);
        }
        
        private void OnFetch_Chk_AnswerOperationCompleted(object arg) {
            if ((this.Fetch_Chk_AnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Chk_AnswerCompleted(this, new Fetch_Chk_AnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_ChecklistConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_ChecklistConfiguration(int Chk_Config_ID, string strConfigTitle, string strConfigTitleDesc, bool IsScoreEnable, int TotalScore, string strXmlChecklist, string LoggedInUserID) {
            object[] results = this.Invoke("Update_ChecklistConfiguration", new object[] {
                        Chk_Config_ID,
                        strConfigTitle,
                        strConfigTitleDesc,
                        IsScoreEnable,
                        TotalScore,
                        strXmlChecklist,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_ChecklistConfigurationAsync(int Chk_Config_ID, string strConfigTitle, string strConfigTitleDesc, bool IsScoreEnable, int TotalScore, string strXmlChecklist, string LoggedInUserID) {
            this.Update_ChecklistConfigurationAsync(Chk_Config_ID, strConfigTitle, strConfigTitleDesc, IsScoreEnable, TotalScore, strXmlChecklist, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Update_ChecklistConfigurationAsync(int Chk_Config_ID, string strConfigTitle, string strConfigTitleDesc, bool IsScoreEnable, int TotalScore, string strXmlChecklist, string LoggedInUserID, object userState) {
            if ((this.Update_ChecklistConfigurationOperationCompleted == null)) {
                this.Update_ChecklistConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_ChecklistConfigurationOperationCompleted);
            }
            this.InvokeAsync("Update_ChecklistConfiguration", new object[] {
                        Chk_Config_ID,
                        strConfigTitle,
                        strConfigTitleDesc,
                        IsScoreEnable,
                        TotalScore,
                        strXmlChecklist,
                        LoggedInUserID}, this.Update_ChecklistConfigurationOperationCompleted, userState);
        }
        
        private void OnUpdate_ChecklistConfigurationOperationCompleted(object arg) {
            if ((this.Update_ChecklistConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_ChecklistConfigurationCompleted(this, new Update_ChecklistConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_ChecklistConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_ChecklistConfiguration(string strConfigTitle, string strConfigTitleDesc, bool IsScoreEnable, int TotalScore, string strXmlChecklist, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_ChecklistConfiguration", new object[] {
                        strConfigTitle,
                        strConfigTitleDesc,
                        IsScoreEnable,
                        TotalScore,
                        strXmlChecklist,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_ChecklistConfigurationAsync(string strConfigTitle, string strConfigTitleDesc, bool IsScoreEnable, int TotalScore, string strXmlChecklist, string LoggedInUserID) {
            this.Insert_ChecklistConfigurationAsync(strConfigTitle, strConfigTitleDesc, IsScoreEnable, TotalScore, strXmlChecklist, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_ChecklistConfigurationAsync(string strConfigTitle, string strConfigTitleDesc, bool IsScoreEnable, int TotalScore, string strXmlChecklist, string LoggedInUserID, object userState) {
            if ((this.Insert_ChecklistConfigurationOperationCompleted == null)) {
                this.Insert_ChecklistConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_ChecklistConfigurationOperationCompleted);
            }
            this.InvokeAsync("Insert_ChecklistConfiguration", new object[] {
                        strConfigTitle,
                        strConfigTitleDesc,
                        IsScoreEnable,
                        TotalScore,
                        strXmlChecklist,
                        LoggedInUserID}, this.Insert_ChecklistConfigurationOperationCompleted, userState);
        }
        
        private void OnInsert_ChecklistConfigurationOperationCompleted(object arg) {
            if ((this.Insert_ChecklistConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_ChecklistConfigurationCompleted(this, new Insert_ChecklistConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_ChecklistConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_ChecklistConfiguration(int CHK_ConfigID) {
            object[] results = this.Invoke("Bind_ChecklistConfiguration", new object[] {
                        CHK_ConfigID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_ChecklistConfigurationAsync(int CHK_ConfigID) {
            this.Bind_ChecklistConfigurationAsync(CHK_ConfigID, null);
        }
        
        /// <remarks/>
        public void Bind_ChecklistConfigurationAsync(int CHK_ConfigID, object userState) {
            if ((this.Bind_ChecklistConfigurationOperationCompleted == null)) {
                this.Bind_ChecklistConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_ChecklistConfigurationOperationCompleted);
            }
            this.InvokeAsync("Bind_ChecklistConfiguration", new object[] {
                        CHK_ConfigID}, this.Bind_ChecklistConfigurationOperationCompleted, userState);
        }
        
        private void OnBind_ChecklistConfigurationOperationCompleted(object arg) {
            if ((this.Bind_ChecklistConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_ChecklistConfigurationCompleted(this, new Bind_ChecklistConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyChecklist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyChecklist(string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyChecklist", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyChecklistAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            this.Fetch_MyChecklistAsync(LoggedInUserID, CompanyID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyChecklistAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyChecklistOperationCompleted == null)) {
                this.Fetch_MyChecklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyChecklistOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyChecklist", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date}, this.Fetch_MyChecklistOperationCompleted, userState);
        }
        
        private void OnFetch_MyChecklistOperationCompleted(object arg) {
            if ((this.Fetch_MyChecklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyChecklistCompleted(this, new Fetch_MyChecklistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_CHKConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_CHKConfiguration(int ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_CHKConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_CHKConfigurationAsync(int ConfigID, string LoggedInUserID) {
            this.Delete_CHKConfigurationAsync(ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_CHKConfigurationAsync(int ConfigID, string LoggedInUserID, object userState) {
            if ((this.Delete_CHKConfigurationOperationCompleted == null)) {
                this.Delete_CHKConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_CHKConfigurationOperationCompleted);
            }
            this.InvokeAsync("Delete_CHKConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID}, this.Delete_CHKConfigurationOperationCompleted, userState);
        }
        
        private void OnDelete_CHKConfigurationOperationCompleted(object arg) {
            if ((this.Delete_CHKConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_CHKConfigurationCompleted(this, new Delete_CHKConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyChecklistReportList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyChecklistReportList(string LoggedInUserID, string CompanyID, string From_Date, string To_Date, int Department_ID, int Checklist_ID, string Status) {
            object[] results = this.Invoke("Fetch_MyChecklistReportList", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date,
                        Department_ID,
                        Checklist_ID,
                        Status});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyChecklistReportListAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date, int Department_ID, int Checklist_ID, string Status) {
            this.Fetch_MyChecklistReportListAsync(LoggedInUserID, CompanyID, From_Date, To_Date, Department_ID, Checklist_ID, Status, null);
        }
        
        /// <remarks/>
        public void Fetch_MyChecklistReportListAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date, int Department_ID, int Checklist_ID, string Status, object userState) {
            if ((this.Fetch_MyChecklistReportListOperationCompleted == null)) {
                this.Fetch_MyChecklistReportListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyChecklistReportListOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyChecklistReportList", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date,
                        Department_ID,
                        Checklist_ID,
                        Status}, this.Fetch_MyChecklistReportListOperationCompleted, userState);
        }
        
        private void OnFetch_MyChecklistReportListOperationCompleted(object arg) {
            if ((this.Fetch_MyChecklistReportListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyChecklistReportListCompleted(this, new Fetch_MyChecklistReportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_My_Department_Checklists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_My_Department_Checklists(string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_My_Department_Checklists", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_My_Department_ChecklistsAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            this.Fetch_My_Department_ChecklistsAsync(LoggedInUserID, CompanyID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_My_Department_ChecklistsAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_My_Department_ChecklistsOperationCompleted == null)) {
                this.Fetch_My_Department_ChecklistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_My_Department_ChecklistsOperationCompleted);
            }
            this.InvokeAsync("Fetch_My_Department_Checklists", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date}, this.Fetch_My_Department_ChecklistsOperationCompleted, userState);
        }
        
        private void OnFetch_My_Department_ChecklistsOperationCompleted(object arg) {
            if ((this.Fetch_My_Department_ChecklistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_My_Department_ChecklistsCompleted(this, new Fetch_My_Department_ChecklistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyChecklists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyChecklists(string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyChecklists", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyChecklistsAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date) {
            this.Fetch_MyChecklistsAsync(LoggedInUserID, CompanyID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyChecklistsAsync(string LoggedInUserID, string CompanyID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyChecklistsOperationCompleted == null)) {
                this.Fetch_MyChecklistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyChecklistsOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyChecklists", new object[] {
                        LoggedInUserID,
                        CompanyID,
                        From_Date,
                        To_Date}, this.Fetch_MyChecklistsOperationCompleted, userState);
        }
        
        private void OnFetch_MyChecklistsOperationCompleted(object arg) {
            if ((this.Fetch_MyChecklistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyChecklistsCompleted(this, new Fetch_MyChecklistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Checklist_Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Checklist_Report(string Response_ID, string LoggedInUserID) {
            object[] results = this.Invoke("Fetch_Checklist_Report", new object[] {
                        Response_ID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Checklist_ReportAsync(string Response_ID, string LoggedInUserID) {
            this.Fetch_Checklist_ReportAsync(Response_ID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Fetch_Checklist_ReportAsync(string Response_ID, string LoggedInUserID, object userState) {
            if ((this.Fetch_Checklist_ReportOperationCompleted == null)) {
                this.Fetch_Checklist_ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Checklist_ReportOperationCompleted);
            }
            this.InvokeAsync("Fetch_Checklist_Report", new object[] {
                        Response_ID,
                        LoggedInUserID}, this.Fetch_Checklist_ReportOperationCompleted, userState);
        }
        
        private void OnFetch_Checklist_ReportOperationCompleted(object arg) {
            if ((this.Fetch_Checklist_ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Checklist_ReportCompleted(this, new Fetch_Checklist_ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Checklist_Consolidated_Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Checklist_Consolidated_Report(int Chk_Config_ID, string LoggedInUserID) {
            object[] results = this.Invoke("Fetch_Checklist_Consolidated_Report", new object[] {
                        Chk_Config_ID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Checklist_Consolidated_ReportAsync(int Chk_Config_ID, string LoggedInUserID) {
            this.Fetch_Checklist_Consolidated_ReportAsync(Chk_Config_ID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Fetch_Checklist_Consolidated_ReportAsync(int Chk_Config_ID, string LoggedInUserID, object userState) {
            if ((this.Fetch_Checklist_Consolidated_ReportOperationCompleted == null)) {
                this.Fetch_Checklist_Consolidated_ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Checklist_Consolidated_ReportOperationCompleted);
            }
            this.InvokeAsync("Fetch_Checklist_Consolidated_Report", new object[] {
                        Chk_Config_ID,
                        LoggedInUserID}, this.Fetch_Checklist_Consolidated_ReportOperationCompleted, userState);
        }
        
        private void OnFetch_Checklist_Consolidated_ReportOperationCompleted(object arg) {
            if ((this.Fetch_Checklist_Consolidated_ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Checklist_Consolidated_ReportCompleted(this, new Fetch_Checklist_Consolidated_ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Save_Checklist_Schedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Save_Checklist_Schedule(int Checklist_ConfigID, int DepartmentID, string SelectedLocationID, string LoggedInUserID, int CompanyID) {
            object[] results = this.Invoke("Save_Checklist_Schedule", new object[] {
                        Checklist_ConfigID,
                        DepartmentID,
                        SelectedLocationID,
                        LoggedInUserID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Save_Checklist_ScheduleAsync(int Checklist_ConfigID, int DepartmentID, string SelectedLocationID, string LoggedInUserID, int CompanyID) {
            this.Save_Checklist_ScheduleAsync(Checklist_ConfigID, DepartmentID, SelectedLocationID, LoggedInUserID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Save_Checklist_ScheduleAsync(int Checklist_ConfigID, int DepartmentID, string SelectedLocationID, string LoggedInUserID, int CompanyID, object userState) {
            if ((this.Save_Checklist_ScheduleOperationCompleted == null)) {
                this.Save_Checklist_ScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_Checklist_ScheduleOperationCompleted);
            }
            this.InvokeAsync("Save_Checklist_Schedule", new object[] {
                        Checklist_ConfigID,
                        DepartmentID,
                        SelectedLocationID,
                        LoggedInUserID,
                        CompanyID}, this.Save_Checklist_ScheduleOperationCompleted, userState);
        }
        
        private void OnSave_Checklist_ScheduleOperationCompleted(object arg) {
            if ((this.Save_Checklist_ScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_Checklist_ScheduleCompleted(this, new Save_Checklist_ScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Save_Checklist_Schedule_NEW", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Save_Checklist_Schedule_NEW(int Chk_Map_ID, int Checklist_ConfigID, int DepartmentID, string SelectedLocationID, string LoggedInUserID, int CompanyID, string Action) {
            object[] results = this.Invoke("Save_Checklist_Schedule_NEW", new object[] {
                        Chk_Map_ID,
                        Checklist_ConfigID,
                        DepartmentID,
                        SelectedLocationID,
                        LoggedInUserID,
                        CompanyID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Save_Checklist_Schedule_NEWAsync(int Chk_Map_ID, int Checklist_ConfigID, int DepartmentID, string SelectedLocationID, string LoggedInUserID, int CompanyID, string Action) {
            this.Save_Checklist_Schedule_NEWAsync(Chk_Map_ID, Checklist_ConfigID, DepartmentID, SelectedLocationID, LoggedInUserID, CompanyID, Action, null);
        }
        
        /// <remarks/>
        public void Save_Checklist_Schedule_NEWAsync(int Chk_Map_ID, int Checklist_ConfigID, int DepartmentID, string SelectedLocationID, string LoggedInUserID, int CompanyID, string Action, object userState) {
            if ((this.Save_Checklist_Schedule_NEWOperationCompleted == null)) {
                this.Save_Checklist_Schedule_NEWOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_Checklist_Schedule_NEWOperationCompleted);
            }
            this.InvokeAsync("Save_Checklist_Schedule_NEW", new object[] {
                        Chk_Map_ID,
                        Checklist_ConfigID,
                        DepartmentID,
                        SelectedLocationID,
                        LoggedInUserID,
                        CompanyID,
                        Action}, this.Save_Checklist_Schedule_NEWOperationCompleted, userState);
        }
        
        private void OnSave_Checklist_Schedule_NEWOperationCompleted(object arg) {
            if ((this.Save_Checklist_Schedule_NEWCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_Checklist_Schedule_NEWCompleted(this, new Save_Checklist_Schedule_NEWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Update_VMSConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_Update_VMSConfiguration(int ConfigID, string strConfigTitle, string strConfigDesc, int CompanyID, string strInitiator, string strXmlVMS_Question, bool blFeedbackCompulsary, int FeedbackTitle, bool blEnableCovid, int EntryCount, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_Update_VMSConfiguration", new object[] {
                        ConfigID,
                        strConfigTitle,
                        strConfigDesc,
                        CompanyID,
                        strInitiator,
                        strXmlVMS_Question,
                        blFeedbackCompulsary,
                        FeedbackTitle,
                        blEnableCovid,
                        EntryCount,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_Update_VMSConfigurationAsync(int ConfigID, string strConfigTitle, string strConfigDesc, int CompanyID, string strInitiator, string strXmlVMS_Question, bool blFeedbackCompulsary, int FeedbackTitle, bool blEnableCovid, int EntryCount, string LoggedInUserID) {
            this.Insert_Update_VMSConfigurationAsync(ConfigID, strConfigTitle, strConfigDesc, CompanyID, strInitiator, strXmlVMS_Question, blFeedbackCompulsary, FeedbackTitle, blEnableCovid, EntryCount, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_Update_VMSConfigurationAsync(int ConfigID, string strConfigTitle, string strConfigDesc, int CompanyID, string strInitiator, string strXmlVMS_Question, bool blFeedbackCompulsary, int FeedbackTitle, bool blEnableCovid, int EntryCount, string LoggedInUserID, object userState) {
            if ((this.Insert_Update_VMSConfigurationOperationCompleted == null)) {
                this.Insert_Update_VMSConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Update_VMSConfigurationOperationCompleted);
            }
            this.InvokeAsync("Insert_Update_VMSConfiguration", new object[] {
                        ConfigID,
                        strConfigTitle,
                        strConfigDesc,
                        CompanyID,
                        strInitiator,
                        strXmlVMS_Question,
                        blFeedbackCompulsary,
                        FeedbackTitle,
                        blEnableCovid,
                        EntryCount,
                        LoggedInUserID}, this.Insert_Update_VMSConfigurationOperationCompleted, userState);
        }
        
        private void OnInsert_Update_VMSConfigurationOperationCompleted(object arg) {
            if ((this.Insert_Update_VMSConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Update_VMSConfigurationCompleted(this, new Insert_Update_VMSConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_VMSConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_VMSConfiguration(int CompanyID, string Initiator) {
            object[] results = this.Invoke("Fetch_VMSConfiguration", new object[] {
                        CompanyID,
                        Initiator});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_VMSConfigurationAsync(int CompanyID, string Initiator) {
            this.Fetch_VMSConfigurationAsync(CompanyID, Initiator, null);
        }
        
        /// <remarks/>
        public void Fetch_VMSConfigurationAsync(int CompanyID, string Initiator, object userState) {
            if ((this.Fetch_VMSConfigurationOperationCompleted == null)) {
                this.Fetch_VMSConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_VMSConfigurationOperationCompleted);
            }
            this.InvokeAsync("Fetch_VMSConfiguration", new object[] {
                        CompanyID,
                        Initiator}, this.Fetch_VMSConfigurationOperationCompleted, userState);
        }
        
        private void OnFetch_VMSConfigurationOperationCompleted(object arg) {
            if ((this.Fetch_VMSConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_VMSConfigurationCompleted(this, new Fetch_VMSConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_VMSConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_VMSConfiguration(int VMS_ConfigID) {
            object[] results = this.Invoke("Bind_VMSConfiguration", new object[] {
                        VMS_ConfigID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_VMSConfigurationAsync(int VMS_ConfigID) {
            this.Bind_VMSConfigurationAsync(VMS_ConfigID, null);
        }
        
        /// <remarks/>
        public void Bind_VMSConfigurationAsync(int VMS_ConfigID, object userState) {
            if ((this.Bind_VMSConfigurationOperationCompleted == null)) {
                this.Bind_VMSConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_VMSConfigurationOperationCompleted);
            }
            this.InvokeAsync("Bind_VMSConfiguration", new object[] {
                        VMS_ConfigID}, this.Bind_VMSConfigurationOperationCompleted, userState);
        }
        
        private void OnBind_VMSConfigurationOperationCompleted(object arg) {
            if ((this.Bind_VMSConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_VMSConfigurationCompleted(this, new Bind_VMSConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_VMSRequestList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_VMSRequestList(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_VMSRequestList", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_VMSRequestListAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_VMSRequestListAsync(CompanyID, LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_VMSRequestListAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_VMSRequestListOperationCompleted == null)) {
                this.Fetch_VMSRequestListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_VMSRequestListOperationCompleted);
            }
            this.InvokeAsync("Fetch_VMSRequestList", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_VMSRequestListOperationCompleted, userState);
        }
        
        private void OnFetch_VMSRequestListOperationCompleted(object arg) {
            if ((this.Fetch_VMSRequestListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_VMSRequestListCompleted(this, new Fetch_VMSRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_VMSRequestDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_VMSRequestDetails(int RequestID, string LoggedInUserID) {
            object[] results = this.Invoke("Bind_VMSRequestDetails", new object[] {
                        RequestID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_VMSRequestDetailsAsync(int RequestID, string LoggedInUserID) {
            this.Bind_VMSRequestDetailsAsync(RequestID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Bind_VMSRequestDetailsAsync(int RequestID, string LoggedInUserID, object userState) {
            if ((this.Bind_VMSRequestDetailsOperationCompleted == null)) {
                this.Bind_VMSRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_VMSRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("Bind_VMSRequestDetails", new object[] {
                        RequestID,
                        LoggedInUserID}, this.Bind_VMSRequestDetailsOperationCompleted, userState);
        }
        
        private void OnBind_VMSRequestDetailsOperationCompleted(object arg) {
            if ((this.Bind_VMSRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_VMSRequestDetailsCompleted(this, new Bind_VMSRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_VMSRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_VMSRequest(int CompanyID, char Action, int RequestID, int VMS_ConfigID, string Name, string Email, string Phone, string strVMSDate, string strMeetUsrs, string strVMSData, string strVMSCovidColorCode, string strVMSCovidTestDate, string strTemperature, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_VMSRequest", new object[] {
                        CompanyID,
                        Action,
                        RequestID,
                        VMS_ConfigID,
                        Name,
                        Email,
                        Phone,
                        strVMSDate,
                        strMeetUsrs,
                        strVMSData,
                        strVMSCovidColorCode,
                        strVMSCovidTestDate,
                        strTemperature,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_VMSRequestAsync(int CompanyID, char Action, int RequestID, int VMS_ConfigID, string Name, string Email, string Phone, string strVMSDate, string strMeetUsrs, string strVMSData, string strVMSCovidColorCode, string strVMSCovidTestDate, string strTemperature, string LoggedInUserID) {
            this.Insert_VMSRequestAsync(CompanyID, Action, RequestID, VMS_ConfigID, Name, Email, Phone, strVMSDate, strMeetUsrs, strVMSData, strVMSCovidColorCode, strVMSCovidTestDate, strTemperature, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_VMSRequestAsync(int CompanyID, char Action, int RequestID, int VMS_ConfigID, string Name, string Email, string Phone, string strVMSDate, string strMeetUsrs, string strVMSData, string strVMSCovidColorCode, string strVMSCovidTestDate, string strTemperature, string LoggedInUserID, object userState) {
            if ((this.Insert_VMSRequestOperationCompleted == null)) {
                this.Insert_VMSRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_VMSRequestOperationCompleted);
            }
            this.InvokeAsync("Insert_VMSRequest", new object[] {
                        CompanyID,
                        Action,
                        RequestID,
                        VMS_ConfigID,
                        Name,
                        Email,
                        Phone,
                        strVMSDate,
                        strMeetUsrs,
                        strVMSData,
                        strVMSCovidColorCode,
                        strVMSCovidTestDate,
                        strTemperature,
                        LoggedInUserID}, this.Insert_VMSRequestOperationCompleted, userState);
        }
        
        private void OnInsert_VMSRequestOperationCompleted(object arg) {
            if ((this.Insert_VMSRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_VMSRequestCompleted(this, new Insert_VMSRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_VMSFormURL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_VMSFormURL(string ShortUrl) {
            object[] results = this.Invoke("Fetch_VMSFormURL", new object[] {
                        ShortUrl});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_VMSFormURLAsync(string ShortUrl) {
            this.Fetch_VMSFormURLAsync(ShortUrl, null);
        }
        
        /// <remarks/>
        public void Fetch_VMSFormURLAsync(string ShortUrl, object userState) {
            if ((this.Fetch_VMSFormURLOperationCompleted == null)) {
                this.Fetch_VMSFormURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_VMSFormURLOperationCompleted);
            }
            this.InvokeAsync("Fetch_VMSFormURL", new object[] {
                        ShortUrl}, this.Fetch_VMSFormURLOperationCompleted, userState);
        }
        
        private void OnFetch_VMSFormURLOperationCompleted(object arg) {
            if ((this.Fetch_VMSFormURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_VMSFormURLCompleted(this, new Fetch_VMSFormURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_VMSConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_VMSConfiguration(int ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_VMSConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_VMSConfigurationAsync(int ConfigID, string LoggedInUserID) {
            this.Delete_VMSConfigurationAsync(ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_VMSConfigurationAsync(int ConfigID, string LoggedInUserID, object userState) {
            if ((this.Delete_VMSConfigurationOperationCompleted == null)) {
                this.Delete_VMSConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_VMSConfigurationOperationCompleted);
            }
            this.InvokeAsync("Delete_VMSConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID}, this.Delete_VMSConfigurationOperationCompleted, userState);
        }
        
        private void OnDelete_VMSConfigurationOperationCompleted(object arg) {
            if ((this.Delete_VMSConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_VMSConfigurationCompleted(this, new Delete_VMSConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Update_CSMConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_Update_CSMConfiguration(int ConfigID, string strConfigTitle, int CompanyID, string Description, string strXmlIn_Question, string strXmlOut_Question, string strXmlCSM_Terms, bool blFreeService, string CostUnit, string RequestFlowID, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_Update_CSMConfiguration", new object[] {
                        ConfigID,
                        strConfigTitle,
                        CompanyID,
                        Description,
                        strXmlIn_Question,
                        strXmlOut_Question,
                        strXmlCSM_Terms,
                        blFreeService,
                        CostUnit,
                        RequestFlowID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_Update_CSMConfigurationAsync(int ConfigID, string strConfigTitle, int CompanyID, string Description, string strXmlIn_Question, string strXmlOut_Question, string strXmlCSM_Terms, bool blFreeService, string CostUnit, string RequestFlowID, string LoggedInUserID) {
            this.Insert_Update_CSMConfigurationAsync(ConfigID, strConfigTitle, CompanyID, Description, strXmlIn_Question, strXmlOut_Question, strXmlCSM_Terms, blFreeService, CostUnit, RequestFlowID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_Update_CSMConfigurationAsync(int ConfigID, string strConfigTitle, int CompanyID, string Description, string strXmlIn_Question, string strXmlOut_Question, string strXmlCSM_Terms, bool blFreeService, string CostUnit, string RequestFlowID, string LoggedInUserID, object userState) {
            if ((this.Insert_Update_CSMConfigurationOperationCompleted == null)) {
                this.Insert_Update_CSMConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Update_CSMConfigurationOperationCompleted);
            }
            this.InvokeAsync("Insert_Update_CSMConfiguration", new object[] {
                        ConfigID,
                        strConfigTitle,
                        CompanyID,
                        Description,
                        strXmlIn_Question,
                        strXmlOut_Question,
                        strXmlCSM_Terms,
                        blFreeService,
                        CostUnit,
                        RequestFlowID,
                        LoggedInUserID}, this.Insert_Update_CSMConfigurationOperationCompleted, userState);
        }
        
        private void OnInsert_Update_CSMConfigurationOperationCompleted(object arg) {
            if ((this.Insert_Update_CSMConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Update_CSMConfigurationCompleted(this, new Insert_Update_CSMConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_CSMConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_CSMConfiguration(int CompanyID) {
            object[] results = this.Invoke("Fetch_CSMConfiguration", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_CSMConfigurationAsync(int CompanyID) {
            this.Fetch_CSMConfigurationAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_CSMConfigurationAsync(int CompanyID, object userState) {
            if ((this.Fetch_CSMConfigurationOperationCompleted == null)) {
                this.Fetch_CSMConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_CSMConfigurationOperationCompleted);
            }
            this.InvokeAsync("Fetch_CSMConfiguration", new object[] {
                        CompanyID}, this.Fetch_CSMConfigurationOperationCompleted, userState);
        }
        
        private void OnFetch_CSMConfigurationOperationCompleted(object arg) {
            if ((this.Fetch_CSMConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_CSMConfigurationCompleted(this, new Fetch_CSMConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_CSMConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_CSMConfiguration(int ConfigID) {
            object[] results = this.Invoke("Bind_CSMConfiguration", new object[] {
                        ConfigID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_CSMConfigurationAsync(int ConfigID) {
            this.Bind_CSMConfigurationAsync(ConfigID, null);
        }
        
        /// <remarks/>
        public void Bind_CSMConfigurationAsync(int ConfigID, object userState) {
            if ((this.Bind_CSMConfigurationOperationCompleted == null)) {
                this.Bind_CSMConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_CSMConfigurationOperationCompleted);
            }
            this.InvokeAsync("Bind_CSMConfiguration", new object[] {
                        ConfigID}, this.Bind_CSMConfigurationOperationCompleted, userState);
        }
        
        private void OnBind_CSMConfigurationOperationCompleted(object arg) {
            if ((this.Bind_CSMConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_CSMConfigurationCompleted(this, new Bind_CSMConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete_CSMConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_CSMConfiguration(int ConfigID, string LoggedInUserID) {
            object[] results = this.Invoke("Delete_CSMConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_CSMConfigurationAsync(int ConfigID, string LoggedInUserID) {
            this.Delete_CSMConfigurationAsync(ConfigID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Delete_CSMConfigurationAsync(int ConfigID, string LoggedInUserID, object userState) {
            if ((this.Delete_CSMConfigurationOperationCompleted == null)) {
                this.Delete_CSMConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_CSMConfigurationOperationCompleted);
            }
            this.InvokeAsync("Delete_CSMConfiguration", new object[] {
                        ConfigID,
                        LoggedInUserID}, this.Delete_CSMConfigurationOperationCompleted, userState);
        }
        
        private void OnDelete_CSMConfigurationOperationCompleted(object arg) {
            if ((this.Delete_CSMConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_CSMConfigurationCompleted(this, new Delete_CSMConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_CSMRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_CSMRequest(int CompanyID, char Action, int RequestID, int ConfigID, string strCSMData, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_CSMRequest", new object[] {
                        CompanyID,
                        Action,
                        RequestID,
                        ConfigID,
                        strCSMData,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_CSMRequestAsync(int CompanyID, char Action, int RequestID, int ConfigID, string strCSMData, string LoggedInUserID) {
            this.Insert_CSMRequestAsync(CompanyID, Action, RequestID, ConfigID, strCSMData, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_CSMRequestAsync(int CompanyID, char Action, int RequestID, int ConfigID, string strCSMData, string LoggedInUserID, object userState) {
            if ((this.Insert_CSMRequestOperationCompleted == null)) {
                this.Insert_CSMRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_CSMRequestOperationCompleted);
            }
            this.InvokeAsync("Insert_CSMRequest", new object[] {
                        CompanyID,
                        Action,
                        RequestID,
                        ConfigID,
                        strCSMData,
                        LoggedInUserID}, this.Insert_CSMRequestOperationCompleted, userState);
        }
        
        private void OnInsert_CSMRequestOperationCompleted(object arg) {
            if ((this.Insert_CSMRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_CSMRequestCompleted(this, new Insert_CSMRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_CSMRequestList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_CSMRequestList(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_CSMRequestList", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_CSMRequestListAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_CSMRequestListAsync(CompanyID, LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_CSMRequestListAsync(int CompanyID, string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_CSMRequestListOperationCompleted == null)) {
                this.Fetch_CSMRequestListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_CSMRequestListOperationCompleted);
            }
            this.InvokeAsync("Fetch_CSMRequestList", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_CSMRequestListOperationCompleted, userState);
        }
        
        private void OnFetch_CSMRequestListOperationCompleted(object arg) {
            if ((this.Fetch_CSMRequestListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_CSMRequestListCompleted(this, new Fetch_CSMRequestListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_CSMRequestDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_CSMRequestDetails(int RequestID, string LoggedInUserID) {
            object[] results = this.Invoke("Bind_CSMRequestDetails", new object[] {
                        RequestID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_CSMRequestDetailsAsync(int RequestID, string LoggedInUserID) {
            this.Bind_CSMRequestDetailsAsync(RequestID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Bind_CSMRequestDetailsAsync(int RequestID, string LoggedInUserID, object userState) {
            if ((this.Bind_CSMRequestDetailsOperationCompleted == null)) {
                this.Bind_CSMRequestDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_CSMRequestDetailsOperationCompleted);
            }
            this.InvokeAsync("Bind_CSMRequestDetails", new object[] {
                        RequestID,
                        LoggedInUserID}, this.Bind_CSMRequestDetailsOperationCompleted, userState);
        }
        
        private void OnBind_CSMRequestDetailsOperationCompleted(object arg) {
            if ((this.Bind_CSMRequestDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_CSMRequestDetailsCompleted(this, new Bind_CSMRequestDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_AnswerForAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_AnswerForAll(char Key) {
            object[] results = this.Invoke("Fetch_AnswerForAll", new object[] {
                        Key});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_AnswerForAllAsync(char Key) {
            this.Fetch_AnswerForAllAsync(Key, null);
        }
        
        /// <remarks/>
        public void Fetch_AnswerForAllAsync(char Key, object userState) {
            if ((this.Fetch_AnswerForAllOperationCompleted == null)) {
                this.Fetch_AnswerForAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_AnswerForAllOperationCompleted);
            }
            this.InvokeAsync("Fetch_AnswerForAll", new object[] {
                        Key}, this.Fetch_AnswerForAllOperationCompleted, userState);
        }
        
        private void OnFetch_AnswerForAllOperationCompleted(object arg) {
            if ((this.Fetch_AnswerForAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_AnswerForAllCompleted(this, new Fetch_AnswerForAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_User_UserGroupListGPWP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_User_UserGroupListGPWP(string Initiator) {
            object[] results = this.Invoke("Fetch_User_UserGroupListGPWP", new object[] {
                        Initiator});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_User_UserGroupListGPWPAsync(string Initiator) {
            this.Fetch_User_UserGroupListGPWPAsync(Initiator, null);
        }
        
        /// <remarks/>
        public void Fetch_User_UserGroupListGPWPAsync(string Initiator, object userState) {
            if ((this.Fetch_User_UserGroupListGPWPOperationCompleted == null)) {
                this.Fetch_User_UserGroupListGPWPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_User_UserGroupListGPWPOperationCompleted);
            }
            this.InvokeAsync("Fetch_User_UserGroupListGPWP", new object[] {
                        Initiator}, this.Fetch_User_UserGroupListGPWPOperationCompleted, userState);
        }
        
        private void OnFetch_User_UserGroupListGPWPOperationCompleted(object arg) {
            if ((this.Fetch_User_UserGroupListGPWPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_User_UserGroupListGPWPCompleted(this, new Fetch_User_UserGroupListGPWPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Company", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Company() {
            object[] results = this.Invoke("Fetch_Company", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_CompanyAsync() {
            this.Fetch_CompanyAsync(null);
        }
        
        /// <remarks/>
        public void Fetch_CompanyAsync(object userState) {
            if ((this.Fetch_CompanyOperationCompleted == null)) {
                this.Fetch_CompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_CompanyOperationCompleted);
            }
            this.InvokeAsync("Fetch_Company", new object[0], this.Fetch_CompanyOperationCompleted, userState);
        }
        
        private void OnFetch_CompanyOperationCompleted(object arg) {
            if ((this.Fetch_CompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_CompanyCompleted(this, new Fetch_CompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Error_Log", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Error_Log(string Extype, string Page, string Errormsg, string StackTrace, string CompanyID, string LoggedInUserID) {
            object[] results = this.Invoke("Error_Log", new object[] {
                        Extype,
                        Page,
                        Errormsg,
                        StackTrace,
                        CompanyID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Error_LogAsync(string Extype, string Page, string Errormsg, string StackTrace, string CompanyID, string LoggedInUserID) {
            this.Error_LogAsync(Extype, Page, Errormsg, StackTrace, CompanyID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Error_LogAsync(string Extype, string Page, string Errormsg, string StackTrace, string CompanyID, string LoggedInUserID, object userState) {
            if ((this.Error_LogOperationCompleted == null)) {
                this.Error_LogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnError_LogOperationCompleted);
            }
            this.InvokeAsync("Error_Log", new object[] {
                        Extype,
                        Page,
                        Errormsg,
                        StackTrace,
                        CompanyID,
                        LoggedInUserID}, this.Error_LogOperationCompleted, userState);
        }
        
        private void OnError_LogOperationCompleted(object arg) {
            if ((this.Error_LogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Error_LogCompleted(this, new Error_LogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Asset_DropDown", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Asset_DropDown(int UserID, int CompanyID) {
            object[] results = this.Invoke("Fetch_Asset_DropDown", new object[] {
                        UserID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Asset_DropDownAsync(int UserID, int CompanyID) {
            this.Fetch_Asset_DropDownAsync(UserID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_Asset_DropDownAsync(int UserID, int CompanyID, object userState) {
            if ((this.Fetch_Asset_DropDownOperationCompleted == null)) {
                this.Fetch_Asset_DropDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Asset_DropDownOperationCompleted);
            }
            this.InvokeAsync("Fetch_Asset_DropDown", new object[] {
                        UserID,
                        CompanyID}, this.Fetch_Asset_DropDownOperationCompleted, userState);
        }
        
        private void OnFetch_Asset_DropDownOperationCompleted(object arg) {
            if ((this.Fetch_Asset_DropDownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Asset_DropDownCompleted(this, new Fetch_Asset_DropDownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Asset_Vendor_DropDown", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Asset_Vendor_DropDown(string VendorPrefix, int UserID) {
            object[] results = this.Invoke("Fetch_Asset_Vendor_DropDown", new object[] {
                        VendorPrefix,
                        UserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Asset_Vendor_DropDownAsync(string VendorPrefix, int UserID) {
            this.Fetch_Asset_Vendor_DropDownAsync(VendorPrefix, UserID, null);
        }
        
        /// <remarks/>
        public void Fetch_Asset_Vendor_DropDownAsync(string VendorPrefix, int UserID, object userState) {
            if ((this.Fetch_Asset_Vendor_DropDownOperationCompleted == null)) {
                this.Fetch_Asset_Vendor_DropDownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Asset_Vendor_DropDownOperationCompleted);
            }
            this.InvokeAsync("Fetch_Asset_Vendor_DropDown", new object[] {
                        VendorPrefix,
                        UserID}, this.Fetch_Asset_Vendor_DropDownOperationCompleted, userState);
        }
        
        private void OnFetch_Asset_Vendor_DropDownOperationCompleted(object arg) {
            if ((this.Fetch_Asset_Vendor_DropDownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Asset_Vendor_DropDownCompleted(this, new Fetch_Asset_Vendor_DropDownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASSET_Insert_AssetType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ASSET_Insert_AssetType(string LoggedInUserID, int companyID, string AssetType) {
            object[] results = this.Invoke("ASSET_Insert_AssetType", new object[] {
                        LoggedInUserID,
                        companyID,
                        AssetType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ASSET_Insert_AssetTypeAsync(string LoggedInUserID, int companyID, string AssetType) {
            this.ASSET_Insert_AssetTypeAsync(LoggedInUserID, companyID, AssetType, null);
        }
        
        /// <remarks/>
        public void ASSET_Insert_AssetTypeAsync(string LoggedInUserID, int companyID, string AssetType, object userState) {
            if ((this.ASSET_Insert_AssetTypeOperationCompleted == null)) {
                this.ASSET_Insert_AssetTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnASSET_Insert_AssetTypeOperationCompleted);
            }
            this.InvokeAsync("ASSET_Insert_AssetType", new object[] {
                        LoggedInUserID,
                        companyID,
                        AssetType}, this.ASSET_Insert_AssetTypeOperationCompleted, userState);
        }
        
        private void OnASSET_Insert_AssetTypeOperationCompleted(object arg) {
            if ((this.ASSET_Insert_AssetTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASSET_Insert_AssetTypeCompleted(this, new ASSET_Insert_AssetTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASSET_Insert_AssetCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ASSET_Insert_AssetCategory(string LoggedInUserID, int companyID, int AssetTypeID, string AssetCategory) {
            object[] results = this.Invoke("ASSET_Insert_AssetCategory", new object[] {
                        LoggedInUserID,
                        companyID,
                        AssetTypeID,
                        AssetCategory});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ASSET_Insert_AssetCategoryAsync(string LoggedInUserID, int companyID, int AssetTypeID, string AssetCategory) {
            this.ASSET_Insert_AssetCategoryAsync(LoggedInUserID, companyID, AssetTypeID, AssetCategory, null);
        }
        
        /// <remarks/>
        public void ASSET_Insert_AssetCategoryAsync(string LoggedInUserID, int companyID, int AssetTypeID, string AssetCategory, object userState) {
            if ((this.ASSET_Insert_AssetCategoryOperationCompleted == null)) {
                this.ASSET_Insert_AssetCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnASSET_Insert_AssetCategoryOperationCompleted);
            }
            this.InvokeAsync("ASSET_Insert_AssetCategory", new object[] {
                        LoggedInUserID,
                        companyID,
                        AssetTypeID,
                        AssetCategory}, this.ASSET_Insert_AssetCategoryOperationCompleted, userState);
        }
        
        private void OnASSET_Insert_AssetCategoryOperationCompleted(object arg) {
            if ((this.ASSET_Insert_AssetCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASSET_Insert_AssetCategoryCompleted(this, new ASSET_Insert_AssetCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ASSET_INSERT_GRNL_MASTER", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ASSET_INSERT_GRNL_MASTER(string LoggedInUserID, string MasterType, string Dept_Value, string LocationXmlValue, string VendorXmlValue) {
            object[] results = this.Invoke("ASSET_INSERT_GRNL_MASTER", new object[] {
                        LoggedInUserID,
                        MasterType,
                        Dept_Value,
                        LocationXmlValue,
                        VendorXmlValue});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ASSET_INSERT_GRNL_MASTERAsync(string LoggedInUserID, string MasterType, string Dept_Value, string LocationXmlValue, string VendorXmlValue) {
            this.ASSET_INSERT_GRNL_MASTERAsync(LoggedInUserID, MasterType, Dept_Value, LocationXmlValue, VendorXmlValue, null);
        }
        
        /// <remarks/>
        public void ASSET_INSERT_GRNL_MASTERAsync(string LoggedInUserID, string MasterType, string Dept_Value, string LocationXmlValue, string VendorXmlValue, object userState) {
            if ((this.ASSET_INSERT_GRNL_MASTEROperationCompleted == null)) {
                this.ASSET_INSERT_GRNL_MASTEROperationCompleted = new System.Threading.SendOrPostCallback(this.OnASSET_INSERT_GRNL_MASTEROperationCompleted);
            }
            this.InvokeAsync("ASSET_INSERT_GRNL_MASTER", new object[] {
                        LoggedInUserID,
                        MasterType,
                        Dept_Value,
                        LocationXmlValue,
                        VendorXmlValue}, this.ASSET_INSERT_GRNL_MASTEROperationCompleted, userState);
        }
        
        private void OnASSET_INSERT_GRNL_MASTEROperationCompleted(object arg) {
            if ((this.ASSET_INSERT_GRNL_MASTERCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ASSET_INSERT_GRNL_MASTERCompleted(this, new ASSET_INSERT_GRNL_MASTERCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MyAsset", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MyAsset(string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_MyAsset", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MyAssetAsync(string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_MyAssetAsync(LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_MyAssetAsync(string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_MyAssetOperationCompleted == null)) {
                this.Fetch_MyAssetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MyAssetOperationCompleted);
            }
            this.InvokeAsync("Fetch_MyAsset", new object[] {
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_MyAssetOperationCompleted, userState);
        }
        
        private void OnFetch_MyAssetOperationCompleted(object arg) {
            if ((this.Fetch_MyAssetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MyAssetCompleted(this, new Fetch_MyAssetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_ASSET_REQUEST_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_ASSET_REQUEST_Details(string LoggedInUserID, int TransactionID) {
            object[] results = this.Invoke("Fetch_ASSET_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        TransactionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_ASSET_REQUEST_DetailsAsync(string LoggedInUserID, int TransactionID) {
            this.Fetch_ASSET_REQUEST_DetailsAsync(LoggedInUserID, TransactionID, null);
        }
        
        /// <remarks/>
        public void Fetch_ASSET_REQUEST_DetailsAsync(string LoggedInUserID, int TransactionID, object userState) {
            if ((this.Fetch_ASSET_REQUEST_DetailsOperationCompleted == null)) {
                this.Fetch_ASSET_REQUEST_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_ASSET_REQUEST_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_ASSET_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        TransactionID}, this.Fetch_ASSET_REQUEST_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_ASSET_REQUEST_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_ASSET_REQUEST_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_ASSET_REQUEST_DetailsCompleted(this, new Fetch_ASSET_REQUEST_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INSERT_ASSET_REQUEST_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet INSERT_ASSET_REQUEST_Details(string LoggedInUserID, string AssetXml, string AssetAmcXml, string AssetServiceXml) {
            object[] results = this.Invoke("INSERT_ASSET_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        AssetXml,
                        AssetAmcXml,
                        AssetServiceXml});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void INSERT_ASSET_REQUEST_DetailsAsync(string LoggedInUserID, string AssetXml, string AssetAmcXml, string AssetServiceXml) {
            this.INSERT_ASSET_REQUEST_DetailsAsync(LoggedInUserID, AssetXml, AssetAmcXml, AssetServiceXml, null);
        }
        
        /// <remarks/>
        public void INSERT_ASSET_REQUEST_DetailsAsync(string LoggedInUserID, string AssetXml, string AssetAmcXml, string AssetServiceXml, object userState) {
            if ((this.INSERT_ASSET_REQUEST_DetailsOperationCompleted == null)) {
                this.INSERT_ASSET_REQUEST_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINSERT_ASSET_REQUEST_DetailsOperationCompleted);
            }
            this.InvokeAsync("INSERT_ASSET_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        AssetXml,
                        AssetAmcXml,
                        AssetServiceXml}, this.INSERT_ASSET_REQUEST_DetailsOperationCompleted, userState);
        }
        
        private void OnINSERT_ASSET_REQUEST_DetailsOperationCompleted(object arg) {
            if ((this.INSERT_ASSET_REQUEST_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INSERT_ASSET_REQUEST_DetailsCompleted(this, new INSERT_ASSET_REQUEST_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INSERT_ASSET_CUSTOMFIELD_REQUEST_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet INSERT_ASSET_CUSTOMFIELD_REQUEST_Details(string LoggedInUserID, string AssetCustomField, int AssetId) {
            object[] results = this.Invoke("INSERT_ASSET_CUSTOMFIELD_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        AssetCustomField,
                        AssetId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsAsync(string LoggedInUserID, string AssetCustomField, int AssetId) {
            this.INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsAsync(LoggedInUserID, AssetCustomField, AssetId, null);
        }
        
        /// <remarks/>
        public void INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsAsync(string LoggedInUserID, string AssetCustomField, int AssetId, object userState) {
            if ((this.INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsOperationCompleted == null)) {
                this.INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsOperationCompleted);
            }
            this.InvokeAsync("INSERT_ASSET_CUSTOMFIELD_REQUEST_Details", new object[] {
                        LoggedInUserID,
                        AssetCustomField,
                        AssetId}, this.INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsOperationCompleted, userState);
        }
        
        private void OnINSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsOperationCompleted(object arg) {
            if ((this.INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompleted(this, new INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Dashboard_Admin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Dashboard_Admin(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate) {
            object[] results = this.Invoke("Fetch_Dashboard_Admin", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        Fromdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Dashboard_AdminAsync(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate) {
            this.Fetch_Dashboard_AdminAsync(CompanyID, LoggedInUserID, Fromdate, ToDate, null);
        }
        
        /// <remarks/>
        public void Fetch_Dashboard_AdminAsync(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate, object userState) {
            if ((this.Fetch_Dashboard_AdminOperationCompleted == null)) {
                this.Fetch_Dashboard_AdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Dashboard_AdminOperationCompleted);
            }
            this.InvokeAsync("Fetch_Dashboard_Admin", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        Fromdate,
                        ToDate}, this.Fetch_Dashboard_AdminOperationCompleted, userState);
        }
        
        private void OnFetch_Dashboard_AdminOperationCompleted(object arg) {
            if ((this.Fetch_Dashboard_AdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Dashboard_AdminCompleted(this, new Fetch_Dashboard_AdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Feedback_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Feedback_Details(int Company_ID, string Feedback_No, int Event_ID, int User_ID) {
            object[] results = this.Invoke("Fetch_Feedback_Details", new object[] {
                        Company_ID,
                        Feedback_No,
                        Event_ID,
                        User_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Feedback_DetailsAsync(int Company_ID, string Feedback_No, int Event_ID, int User_ID) {
            this.Fetch_Feedback_DetailsAsync(Company_ID, Feedback_No, Event_ID, User_ID, null);
        }
        
        /// <remarks/>
        public void Fetch_Feedback_DetailsAsync(int Company_ID, string Feedback_No, int Event_ID, int User_ID, object userState) {
            if ((this.Fetch_Feedback_DetailsOperationCompleted == null)) {
                this.Fetch_Feedback_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Feedback_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_Feedback_Details", new object[] {
                        Company_ID,
                        Feedback_No,
                        Event_ID,
                        User_ID}, this.Fetch_Feedback_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_Feedback_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_Feedback_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Feedback_DetailsCompleted(this, new Fetch_Feedback_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Dashboard_Employee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Dashboard_Employee(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate) {
            object[] results = this.Invoke("Fetch_Dashboard_Employee", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        Fromdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Dashboard_EmployeeAsync(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate) {
            this.Fetch_Dashboard_EmployeeAsync(CompanyID, LoggedInUserID, Fromdate, ToDate, null);
        }
        
        /// <remarks/>
        public void Fetch_Dashboard_EmployeeAsync(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate, object userState) {
            if ((this.Fetch_Dashboard_EmployeeOperationCompleted == null)) {
                this.Fetch_Dashboard_EmployeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Dashboard_EmployeeOperationCompleted);
            }
            this.InvokeAsync("Fetch_Dashboard_Employee", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        Fromdate,
                        ToDate}, this.Fetch_Dashboard_EmployeeOperationCompleted, userState);
        }
        
        private void OnFetch_Dashboard_EmployeeOperationCompleted(object arg) {
            if ((this.Fetch_Dashboard_EmployeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Dashboard_EmployeeCompleted(this, new Fetch_Dashboard_EmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Dashboard_Retailer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Dashboard_Retailer(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate) {
            object[] results = this.Invoke("Fetch_Dashboard_Retailer", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        Fromdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Dashboard_RetailerAsync(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate) {
            this.Fetch_Dashboard_RetailerAsync(CompanyID, LoggedInUserID, Fromdate, ToDate, null);
        }
        
        /// <remarks/>
        public void Fetch_Dashboard_RetailerAsync(int CompanyID, string LoggedInUserID, string Fromdate, string ToDate, object userState) {
            if ((this.Fetch_Dashboard_RetailerOperationCompleted == null)) {
                this.Fetch_Dashboard_RetailerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Dashboard_RetailerOperationCompleted);
            }
            this.InvokeAsync("Fetch_Dashboard_Retailer", new object[] {
                        CompanyID,
                        LoggedInUserID,
                        Fromdate,
                        ToDate}, this.Fetch_Dashboard_RetailerOperationCompleted, userState);
        }
        
        private void OnFetch_Dashboard_RetailerOperationCompleted(object arg) {
            if ((this.Fetch_Dashboard_RetailerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Dashboard_RetailerCompleted(this, new Fetch_Dashboard_RetailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_License_Module_list", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_License_Module_list(string Module_ID_String) {
            object[] results = this.Invoke("Fetch_License_Module_list", new object[] {
                        Module_ID_String});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_License_Module_listAsync(string Module_ID_String) {
            this.Fetch_License_Module_listAsync(Module_ID_String, null);
        }
        
        /// <remarks/>
        public void Fetch_License_Module_listAsync(string Module_ID_String, object userState) {
            if ((this.Fetch_License_Module_listOperationCompleted == null)) {
                this.Fetch_License_Module_listOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_License_Module_listOperationCompleted);
            }
            this.InvokeAsync("Fetch_License_Module_list", new object[] {
                        Module_ID_String}, this.Fetch_License_Module_listOperationCompleted, userState);
        }
        
        private void OnFetch_License_Module_listOperationCompleted(object arg) {
            if ((this.Fetch_License_Module_listCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_License_Module_listCompleted(this, new Fetch_License_Module_listCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SUPPORT_Fetch_Comments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SUPPORT_Fetch_Comments(int Request_ID) {
            object[] results = this.Invoke("SUPPORT_Fetch_Comments", new object[] {
                        Request_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SUPPORT_Fetch_CommentsAsync(int Request_ID) {
            this.SUPPORT_Fetch_CommentsAsync(Request_ID, null);
        }
        
        /// <remarks/>
        public void SUPPORT_Fetch_CommentsAsync(int Request_ID, object userState) {
            if ((this.SUPPORT_Fetch_CommentsOperationCompleted == null)) {
                this.SUPPORT_Fetch_CommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUPPORT_Fetch_CommentsOperationCompleted);
            }
            this.InvokeAsync("SUPPORT_Fetch_Comments", new object[] {
                        Request_ID}, this.SUPPORT_Fetch_CommentsOperationCompleted, userState);
        }
        
        private void OnSUPPORT_Fetch_CommentsOperationCompleted(object arg) {
            if ((this.SUPPORT_Fetch_CommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUPPORT_Fetch_CommentsCompleted(this, new SUPPORT_Fetch_CommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SUPPORT_Save_Comment_Client", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SUPPORT_Save_Comment_Client(int Request_ID, string Comment, string LoggedInUserID) {
            object[] results = this.Invoke("SUPPORT_Save_Comment_Client", new object[] {
                        Request_ID,
                        Comment,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SUPPORT_Save_Comment_ClientAsync(int Request_ID, string Comment, string LoggedInUserID) {
            this.SUPPORT_Save_Comment_ClientAsync(Request_ID, Comment, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void SUPPORT_Save_Comment_ClientAsync(int Request_ID, string Comment, string LoggedInUserID, object userState) {
            if ((this.SUPPORT_Save_Comment_ClientOperationCompleted == null)) {
                this.SUPPORT_Save_Comment_ClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUPPORT_Save_Comment_ClientOperationCompleted);
            }
            this.InvokeAsync("SUPPORT_Save_Comment_Client", new object[] {
                        Request_ID,
                        Comment,
                        LoggedInUserID}, this.SUPPORT_Save_Comment_ClientOperationCompleted, userState);
        }
        
        private void OnSUPPORT_Save_Comment_ClientOperationCompleted(object arg) {
            if ((this.SUPPORT_Save_Comment_ClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUPPORT_Save_Comment_ClientCompleted(this, new SUPPORT_Save_Comment_ClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SUPPORT_View_Request_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SUPPORT_View_Request_Details(int Request_ID, int Company_ID, string LoggedInUserID) {
            object[] results = this.Invoke("SUPPORT_View_Request_Details", new object[] {
                        Request_ID,
                        Company_ID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SUPPORT_View_Request_DetailsAsync(int Request_ID, int Company_ID, string LoggedInUserID) {
            this.SUPPORT_View_Request_DetailsAsync(Request_ID, Company_ID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void SUPPORT_View_Request_DetailsAsync(int Request_ID, int Company_ID, string LoggedInUserID, object userState) {
            if ((this.SUPPORT_View_Request_DetailsOperationCompleted == null)) {
                this.SUPPORT_View_Request_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUPPORT_View_Request_DetailsOperationCompleted);
            }
            this.InvokeAsync("SUPPORT_View_Request_Details", new object[] {
                        Request_ID,
                        Company_ID,
                        LoggedInUserID}, this.SUPPORT_View_Request_DetailsOperationCompleted, userState);
        }
        
        private void OnSUPPORT_View_Request_DetailsOperationCompleted(object arg) {
            if ((this.SUPPORT_View_Request_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUPPORT_View_Request_DetailsCompleted(this, new SUPPORT_View_Request_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SUPPORT_Save_Request", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SUPPORT_Save_Request(int Company_ID, string Request_Type, int Module_ID, string Description, string LoggedInUserID) {
            object[] results = this.Invoke("SUPPORT_Save_Request", new object[] {
                        Company_ID,
                        Request_Type,
                        Module_ID,
                        Description,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SUPPORT_Save_RequestAsync(int Company_ID, string Request_Type, int Module_ID, string Description, string LoggedInUserID) {
            this.SUPPORT_Save_RequestAsync(Company_ID, Request_Type, Module_ID, Description, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void SUPPORT_Save_RequestAsync(int Company_ID, string Request_Type, int Module_ID, string Description, string LoggedInUserID, object userState) {
            if ((this.SUPPORT_Save_RequestOperationCompleted == null)) {
                this.SUPPORT_Save_RequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUPPORT_Save_RequestOperationCompleted);
            }
            this.InvokeAsync("SUPPORT_Save_Request", new object[] {
                        Company_ID,
                        Request_Type,
                        Module_ID,
                        Description,
                        LoggedInUserID}, this.SUPPORT_Save_RequestOperationCompleted, userState);
        }
        
        private void OnSUPPORT_Save_RequestOperationCompleted(object arg) {
            if ((this.SUPPORT_Save_RequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUPPORT_Save_RequestCompleted(this, new SUPPORT_Save_RequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SUPPORT_Fetch_Requests", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SUPPORT_Fetch_Requests(string From_Date, string To_Date, int Company_ID, string LoggedInUserID, string Role_Name) {
            object[] results = this.Invoke("SUPPORT_Fetch_Requests", new object[] {
                        From_Date,
                        To_Date,
                        Company_ID,
                        LoggedInUserID,
                        Role_Name});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SUPPORT_Fetch_RequestsAsync(string From_Date, string To_Date, int Company_ID, string LoggedInUserID, string Role_Name) {
            this.SUPPORT_Fetch_RequestsAsync(From_Date, To_Date, Company_ID, LoggedInUserID, Role_Name, null);
        }
        
        /// <remarks/>
        public void SUPPORT_Fetch_RequestsAsync(string From_Date, string To_Date, int Company_ID, string LoggedInUserID, string Role_Name, object userState) {
            if ((this.SUPPORT_Fetch_RequestsOperationCompleted == null)) {
                this.SUPPORT_Fetch_RequestsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUPPORT_Fetch_RequestsOperationCompleted);
            }
            this.InvokeAsync("SUPPORT_Fetch_Requests", new object[] {
                        From_Date,
                        To_Date,
                        Company_ID,
                        LoggedInUserID,
                        Role_Name}, this.SUPPORT_Fetch_RequestsOperationCompleted, userState);
        }
        
        private void OnSUPPORT_Fetch_RequestsOperationCompleted(object arg) {
            if ((this.SUPPORT_Fetch_RequestsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUPPORT_Fetch_RequestsCompleted(this, new SUPPORT_Fetch_RequestsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INV_ItemStock_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet INV_ItemStock_CRUD(int Stock_ID, int Item_ID, string Opening_Stock, string Optimum_Value, string ReOrder_Value, string Base_Value, int Department_ID, int Current_Stock, int Company_ID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("INV_ItemStock_CRUD", new object[] {
                        Stock_ID,
                        Item_ID,
                        Opening_Stock,
                        Optimum_Value,
                        ReOrder_Value,
                        Base_Value,
                        Department_ID,
                        Current_Stock,
                        Company_ID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void INV_ItemStock_CRUDAsync(int Stock_ID, int Item_ID, string Opening_Stock, string Optimum_Value, string ReOrder_Value, string Base_Value, int Department_ID, int Current_Stock, int Company_ID, string LoggedInUserID, string Action) {
            this.INV_ItemStock_CRUDAsync(Stock_ID, Item_ID, Opening_Stock, Optimum_Value, ReOrder_Value, Base_Value, Department_ID, Current_Stock, Company_ID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void INV_ItemStock_CRUDAsync(int Stock_ID, int Item_ID, string Opening_Stock, string Optimum_Value, string ReOrder_Value, string Base_Value, int Department_ID, int Current_Stock, int Company_ID, string LoggedInUserID, string Action, object userState) {
            if ((this.INV_ItemStock_CRUDOperationCompleted == null)) {
                this.INV_ItemStock_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINV_ItemStock_CRUDOperationCompleted);
            }
            this.InvokeAsync("INV_ItemStock_CRUD", new object[] {
                        Stock_ID,
                        Item_ID,
                        Opening_Stock,
                        Optimum_Value,
                        ReOrder_Value,
                        Base_Value,
                        Department_ID,
                        Current_Stock,
                        Company_ID,
                        LoggedInUserID,
                        Action}, this.INV_ItemStock_CRUDOperationCompleted, userState);
        }
        
        private void OnINV_ItemStock_CRUDOperationCompleted(object arg) {
            if ((this.INV_ItemStock_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INV_ItemStock_CRUDCompleted(this, new INV_ItemStock_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INV_Fetch_Items_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet INV_Fetch_Items_List(int CompanyID) {
            object[] results = this.Invoke("INV_Fetch_Items_List", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void INV_Fetch_Items_ListAsync(int CompanyID) {
            this.INV_Fetch_Items_ListAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void INV_Fetch_Items_ListAsync(int CompanyID, object userState) {
            if ((this.INV_Fetch_Items_ListOperationCompleted == null)) {
                this.INV_Fetch_Items_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINV_Fetch_Items_ListOperationCompleted);
            }
            this.InvokeAsync("INV_Fetch_Items_List", new object[] {
                        CompanyID}, this.INV_Fetch_Items_ListOperationCompleted, userState);
        }
        
        private void OnINV_Fetch_Items_ListOperationCompleted(object arg) {
            if ((this.INV_Fetch_Items_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INV_Fetch_Items_ListCompleted(this, new INV_Fetch_Items_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LMS_Vendor_Cost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LMS_Vendor_Cost(int Cost_ID, int Vendor_ID, int Item_ID, decimal Cost, string Valid_From, string Valid_To, string LoggedInUserID, string Action, int CompanyID) {
            object[] results = this.Invoke("LMS_Vendor_Cost", new object[] {
                        Cost_ID,
                        Vendor_ID,
                        Item_ID,
                        Cost,
                        Valid_From,
                        Valid_To,
                        LoggedInUserID,
                        Action,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LMS_Vendor_CostAsync(int Cost_ID, int Vendor_ID, int Item_ID, decimal Cost, string Valid_From, string Valid_To, string LoggedInUserID, string Action, int CompanyID) {
            this.LMS_Vendor_CostAsync(Cost_ID, Vendor_ID, Item_ID, Cost, Valid_From, Valid_To, LoggedInUserID, Action, CompanyID, null);
        }
        
        /// <remarks/>
        public void LMS_Vendor_CostAsync(int Cost_ID, int Vendor_ID, int Item_ID, decimal Cost, string Valid_From, string Valid_To, string LoggedInUserID, string Action, int CompanyID, object userState) {
            if ((this.LMS_Vendor_CostOperationCompleted == null)) {
                this.LMS_Vendor_CostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMS_Vendor_CostOperationCompleted);
            }
            this.InvokeAsync("LMS_Vendor_Cost", new object[] {
                        Cost_ID,
                        Vendor_ID,
                        Item_ID,
                        Cost,
                        Valid_From,
                        Valid_To,
                        LoggedInUserID,
                        Action,
                        CompanyID}, this.LMS_Vendor_CostOperationCompleted, userState);
        }
        
        private void OnLMS_Vendor_CostOperationCompleted(object arg) {
            if ((this.LMS_Vendor_CostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMS_Vendor_CostCompleted(this, new LMS_Vendor_CostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LMS_Fetch_Department_Transactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LMS_Fetch_Department_Transactions(string Start_Date, string End_Date, int CompanyID, int Dept_ID) {
            object[] results = this.Invoke("LMS_Fetch_Department_Transactions", new object[] {
                        Start_Date,
                        End_Date,
                        CompanyID,
                        Dept_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LMS_Fetch_Department_TransactionsAsync(string Start_Date, string End_Date, int CompanyID, int Dept_ID) {
            this.LMS_Fetch_Department_TransactionsAsync(Start_Date, End_Date, CompanyID, Dept_ID, null);
        }
        
        /// <remarks/>
        public void LMS_Fetch_Department_TransactionsAsync(string Start_Date, string End_Date, int CompanyID, int Dept_ID, object userState) {
            if ((this.LMS_Fetch_Department_TransactionsOperationCompleted == null)) {
                this.LMS_Fetch_Department_TransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMS_Fetch_Department_TransactionsOperationCompleted);
            }
            this.InvokeAsync("LMS_Fetch_Department_Transactions", new object[] {
                        Start_Date,
                        End_Date,
                        CompanyID,
                        Dept_ID}, this.LMS_Fetch_Department_TransactionsOperationCompleted, userState);
        }
        
        private void OnLMS_Fetch_Department_TransactionsOperationCompleted(object arg) {
            if ((this.LMS_Fetch_Department_TransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMS_Fetch_Department_TransactionsCompleted(this, new LMS_Fetch_Department_TransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LMS_Category_Mst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LMS_Category_Mst(int Category_ID, string Category_Desc, int Company_ID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("LMS_Category_Mst", new object[] {
                        Category_ID,
                        Category_Desc,
                        Company_ID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LMS_Category_MstAsync(int Category_ID, string Category_Desc, int Company_ID, string LoggedInUserID, string Action) {
            this.LMS_Category_MstAsync(Category_ID, Category_Desc, Company_ID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void LMS_Category_MstAsync(int Category_ID, string Category_Desc, int Company_ID, string LoggedInUserID, string Action, object userState) {
            if ((this.LMS_Category_MstOperationCompleted == null)) {
                this.LMS_Category_MstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMS_Category_MstOperationCompleted);
            }
            this.InvokeAsync("LMS_Category_Mst", new object[] {
                        Category_ID,
                        Category_Desc,
                        Company_ID,
                        LoggedInUserID,
                        Action}, this.LMS_Category_MstOperationCompleted, userState);
        }
        
        private void OnLMS_Category_MstOperationCompleted(object arg) {
            if ((this.LMS_Category_MstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMS_Category_MstCompleted(this, new LMS_Category_MstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LMS_SubCategory_Mst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LMS_SubCategory_Mst(int SubCategory_ID, string SubCategory_Desc, int Category_ID, int Company_ID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("LMS_SubCategory_Mst", new object[] {
                        SubCategory_ID,
                        SubCategory_Desc,
                        Category_ID,
                        Company_ID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LMS_SubCategory_MstAsync(int SubCategory_ID, string SubCategory_Desc, int Category_ID, int Company_ID, string LoggedInUserID, string Action) {
            this.LMS_SubCategory_MstAsync(SubCategory_ID, SubCategory_Desc, Category_ID, Company_ID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void LMS_SubCategory_MstAsync(int SubCategory_ID, string SubCategory_Desc, int Category_ID, int Company_ID, string LoggedInUserID, string Action, object userState) {
            if ((this.LMS_SubCategory_MstOperationCompleted == null)) {
                this.LMS_SubCategory_MstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMS_SubCategory_MstOperationCompleted);
            }
            this.InvokeAsync("LMS_SubCategory_Mst", new object[] {
                        SubCategory_ID,
                        SubCategory_Desc,
                        Category_ID,
                        Company_ID,
                        LoggedInUserID,
                        Action}, this.LMS_SubCategory_MstOperationCompleted, userState);
        }
        
        private void OnLMS_SubCategory_MstOperationCompleted(object arg) {
            if ((this.LMS_SubCategory_MstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMS_SubCategory_MstCompleted(this, new LMS_SubCategory_MstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LMS_Fetch_Vendor_Transactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LMS_Fetch_Vendor_Transactions(string Start_Date, string End_Date, int CompanyID, int Vendor_ID) {
            object[] results = this.Invoke("LMS_Fetch_Vendor_Transactions", new object[] {
                        Start_Date,
                        End_Date,
                        CompanyID,
                        Vendor_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LMS_Fetch_Vendor_TransactionsAsync(string Start_Date, string End_Date, int CompanyID, int Vendor_ID) {
            this.LMS_Fetch_Vendor_TransactionsAsync(Start_Date, End_Date, CompanyID, Vendor_ID, null);
        }
        
        /// <remarks/>
        public void LMS_Fetch_Vendor_TransactionsAsync(string Start_Date, string End_Date, int CompanyID, int Vendor_ID, object userState) {
            if ((this.LMS_Fetch_Vendor_TransactionsOperationCompleted == null)) {
                this.LMS_Fetch_Vendor_TransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMS_Fetch_Vendor_TransactionsOperationCompleted);
            }
            this.InvokeAsync("LMS_Fetch_Vendor_Transactions", new object[] {
                        Start_Date,
                        End_Date,
                        CompanyID,
                        Vendor_ID}, this.LMS_Fetch_Vendor_TransactionsOperationCompleted, userState);
        }
        
        private void OnLMS_Fetch_Vendor_TransactionsOperationCompleted(object arg) {
            if ((this.LMS_Fetch_Vendor_TransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMS_Fetch_Vendor_TransactionsCompleted(this, new LMS_Fetch_Vendor_TransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_LMS_ItemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_LMS_ItemList(int DepartmentID, int CompanyID) {
            object[] results = this.Invoke("Fetch_LMS_ItemList", new object[] {
                        DepartmentID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LMS_ItemListAsync(int DepartmentID, int CompanyID) {
            this.Fetch_LMS_ItemListAsync(DepartmentID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_LMS_ItemListAsync(int DepartmentID, int CompanyID, object userState) {
            if ((this.Fetch_LMS_ItemListOperationCompleted == null)) {
                this.Fetch_LMS_ItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LMS_ItemListOperationCompleted);
            }
            this.InvokeAsync("Fetch_LMS_ItemList", new object[] {
                        DepartmentID,
                        CompanyID}, this.Fetch_LMS_ItemListOperationCompleted, userState);
        }
        
        private void OnFetch_LMS_ItemListOperationCompleted(object arg) {
            if ((this.Fetch_LMS_ItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LMS_ItemListCompleted(this, new Fetch_LMS_ItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_LMS_ItemDetails_Dept_Transaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_LMS_ItemDetails_Dept_Transaction(int DepartmentID, int CompanyID, string ItemIDs) {
            object[] results = this.Invoke("Fetch_LMS_ItemDetails_Dept_Transaction", new object[] {
                        DepartmentID,
                        CompanyID,
                        ItemIDs});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LMS_ItemDetails_Dept_TransactionAsync(int DepartmentID, int CompanyID, string ItemIDs) {
            this.Fetch_LMS_ItemDetails_Dept_TransactionAsync(DepartmentID, CompanyID, ItemIDs, null);
        }
        
        /// <remarks/>
        public void Fetch_LMS_ItemDetails_Dept_TransactionAsync(int DepartmentID, int CompanyID, string ItemIDs, object userState) {
            if ((this.Fetch_LMS_ItemDetails_Dept_TransactionOperationCompleted == null)) {
                this.Fetch_LMS_ItemDetails_Dept_TransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LMS_ItemDetails_Dept_TransactionOperationCompleted);
            }
            this.InvokeAsync("Fetch_LMS_ItemDetails_Dept_Transaction", new object[] {
                        DepartmentID,
                        CompanyID,
                        ItemIDs}, this.Fetch_LMS_ItemDetails_Dept_TransactionOperationCompleted, userState);
        }
        
        private void OnFetch_LMS_ItemDetails_Dept_TransactionOperationCompleted(object arg) {
            if ((this.Fetch_LMS_ItemDetails_Dept_TransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LMS_ItemDetails_Dept_TransactionCompleted(this, new Fetch_LMS_ItemDetails_Dept_TransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LMS_Save_Department_Transaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LMS_Save_Department_Transaction(string Dept_ExecutiveName, string Dept_ExecutiveContactNo, int DepartmentID, string TransactionData, int CompanyID, string LoggedInUserID) {
            object[] results = this.Invoke("LMS_Save_Department_Transaction", new object[] {
                        Dept_ExecutiveName,
                        Dept_ExecutiveContactNo,
                        DepartmentID,
                        TransactionData,
                        CompanyID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LMS_Save_Department_TransactionAsync(string Dept_ExecutiveName, string Dept_ExecutiveContactNo, int DepartmentID, string TransactionData, int CompanyID, string LoggedInUserID) {
            this.LMS_Save_Department_TransactionAsync(Dept_ExecutiveName, Dept_ExecutiveContactNo, DepartmentID, TransactionData, CompanyID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void LMS_Save_Department_TransactionAsync(string Dept_ExecutiveName, string Dept_ExecutiveContactNo, int DepartmentID, string TransactionData, int CompanyID, string LoggedInUserID, object userState) {
            if ((this.LMS_Save_Department_TransactionOperationCompleted == null)) {
                this.LMS_Save_Department_TransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMS_Save_Department_TransactionOperationCompleted);
            }
            this.InvokeAsync("LMS_Save_Department_Transaction", new object[] {
                        Dept_ExecutiveName,
                        Dept_ExecutiveContactNo,
                        DepartmentID,
                        TransactionData,
                        CompanyID,
                        LoggedInUserID}, this.LMS_Save_Department_TransactionOperationCompleted, userState);
        }
        
        private void OnLMS_Save_Department_TransactionOperationCompleted(object arg) {
            if ((this.LMS_Save_Department_TransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMS_Save_Department_TransactionCompleted(this, new LMS_Save_Department_TransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LMS_Save_Vendor_Transaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LMS_Save_Vendor_Transaction(int VendorID, int DepartmentID, string TransactionData, int CompanyID, string LoggedInUserID) {
            object[] results = this.Invoke("LMS_Save_Vendor_Transaction", new object[] {
                        VendorID,
                        DepartmentID,
                        TransactionData,
                        CompanyID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LMS_Save_Vendor_TransactionAsync(int VendorID, int DepartmentID, string TransactionData, int CompanyID, string LoggedInUserID) {
            this.LMS_Save_Vendor_TransactionAsync(VendorID, DepartmentID, TransactionData, CompanyID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void LMS_Save_Vendor_TransactionAsync(int VendorID, int DepartmentID, string TransactionData, int CompanyID, string LoggedInUserID, object userState) {
            if ((this.LMS_Save_Vendor_TransactionOperationCompleted == null)) {
                this.LMS_Save_Vendor_TransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLMS_Save_Vendor_TransactionOperationCompleted);
            }
            this.InvokeAsync("LMS_Save_Vendor_Transaction", new object[] {
                        VendorID,
                        DepartmentID,
                        TransactionData,
                        CompanyID,
                        LoggedInUserID}, this.LMS_Save_Vendor_TransactionOperationCompleted, userState);
        }
        
        private void OnLMS_Save_Vendor_TransactionOperationCompleted(object arg) {
            if ((this.LMS_Save_Vendor_TransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LMS_Save_Vendor_TransactionCompleted(this, new LMS_Save_Vendor_TransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_LMS_Dept_Transaction_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_LMS_Dept_Transaction_Details(int Dept_TransID) {
            object[] results = this.Invoke("Fetch_LMS_Dept_Transaction_Details", new object[] {
                        Dept_TransID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LMS_Dept_Transaction_DetailsAsync(int Dept_TransID) {
            this.Fetch_LMS_Dept_Transaction_DetailsAsync(Dept_TransID, null);
        }
        
        /// <remarks/>
        public void Fetch_LMS_Dept_Transaction_DetailsAsync(int Dept_TransID, object userState) {
            if ((this.Fetch_LMS_Dept_Transaction_DetailsOperationCompleted == null)) {
                this.Fetch_LMS_Dept_Transaction_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LMS_Dept_Transaction_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_LMS_Dept_Transaction_Details", new object[] {
                        Dept_TransID}, this.Fetch_LMS_Dept_Transaction_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_LMS_Dept_Transaction_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_LMS_Dept_Transaction_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LMS_Dept_Transaction_DetailsCompleted(this, new Fetch_LMS_Dept_Transaction_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_LMS_ItemDetails_Vendor_Transaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_LMS_ItemDetails_Vendor_Transaction(int DepartmentID, int CompanyID, string ItemIDs) {
            object[] results = this.Invoke("Fetch_LMS_ItemDetails_Vendor_Transaction", new object[] {
                        DepartmentID,
                        CompanyID,
                        ItemIDs});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LMS_ItemDetails_Vendor_TransactionAsync(int DepartmentID, int CompanyID, string ItemIDs) {
            this.Fetch_LMS_ItemDetails_Vendor_TransactionAsync(DepartmentID, CompanyID, ItemIDs, null);
        }
        
        /// <remarks/>
        public void Fetch_LMS_ItemDetails_Vendor_TransactionAsync(int DepartmentID, int CompanyID, string ItemIDs, object userState) {
            if ((this.Fetch_LMS_ItemDetails_Vendor_TransactionOperationCompleted == null)) {
                this.Fetch_LMS_ItemDetails_Vendor_TransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LMS_ItemDetails_Vendor_TransactionOperationCompleted);
            }
            this.InvokeAsync("Fetch_LMS_ItemDetails_Vendor_Transaction", new object[] {
                        DepartmentID,
                        CompanyID,
                        ItemIDs}, this.Fetch_LMS_ItemDetails_Vendor_TransactionOperationCompleted, userState);
        }
        
        private void OnFetch_LMS_ItemDetails_Vendor_TransactionOperationCompleted(object arg) {
            if ((this.Fetch_LMS_ItemDetails_Vendor_TransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LMS_ItemDetails_Vendor_TransactionCompleted(this, new Fetch_LMS_ItemDetails_Vendor_TransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_LMS_Vendor_List", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_LMS_Vendor_List(int CompanyID) {
            object[] results = this.Invoke("Fetch_LMS_Vendor_List", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LMS_Vendor_ListAsync(int CompanyID) {
            this.Fetch_LMS_Vendor_ListAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_LMS_Vendor_ListAsync(int CompanyID, object userState) {
            if ((this.Fetch_LMS_Vendor_ListOperationCompleted == null)) {
                this.Fetch_LMS_Vendor_ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LMS_Vendor_ListOperationCompleted);
            }
            this.InvokeAsync("Fetch_LMS_Vendor_List", new object[] {
                        CompanyID}, this.Fetch_LMS_Vendor_ListOperationCompleted, userState);
        }
        
        private void OnFetch_LMS_Vendor_ListOperationCompleted(object arg) {
            if ((this.Fetch_LMS_Vendor_ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LMS_Vendor_ListCompleted(this, new Fetch_LMS_Vendor_ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_LMS_Vendor_Transaction_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_LMS_Vendor_Transaction_Details(int Vendor_TransID) {
            object[] results = this.Invoke("Fetch_LMS_Vendor_Transaction_Details", new object[] {
                        Vendor_TransID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LMS_Vendor_Transaction_DetailsAsync(int Vendor_TransID) {
            this.Fetch_LMS_Vendor_Transaction_DetailsAsync(Vendor_TransID, null);
        }
        
        /// <remarks/>
        public void Fetch_LMS_Vendor_Transaction_DetailsAsync(int Vendor_TransID, object userState) {
            if ((this.Fetch_LMS_Vendor_Transaction_DetailsOperationCompleted == null)) {
                this.Fetch_LMS_Vendor_Transaction_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LMS_Vendor_Transaction_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_LMS_Vendor_Transaction_Details", new object[] {
                        Vendor_TransID}, this.Fetch_LMS_Vendor_Transaction_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_LMS_Vendor_Transaction_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_LMS_Vendor_Transaction_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LMS_Vendor_Transaction_DetailsCompleted(this, new Fetch_LMS_Vendor_Transaction_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Invoices", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Invoices(int Company_ID) {
            object[] results = this.Invoke("Fetch_Invoices", new object[] {
                        Company_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_InvoicesAsync(int Company_ID) {
            this.Fetch_InvoicesAsync(Company_ID, null);
        }
        
        /// <remarks/>
        public void Fetch_InvoicesAsync(int Company_ID, object userState) {
            if ((this.Fetch_InvoicesOperationCompleted == null)) {
                this.Fetch_InvoicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_InvoicesOperationCompleted);
            }
            this.InvokeAsync("Fetch_Invoices", new object[] {
                        Company_ID}, this.Fetch_InvoicesOperationCompleted, userState);
        }
        
        private void OnFetch_InvoicesOperationCompleted(object arg) {
            if ((this.Fetch_InvoicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_InvoicesCompleted(this, new Fetch_InvoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MenuMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet MenuMaster_CRUD(int Menu_ID, string Menu_Desc, string Parent_Menu_Id, string Toot_Tip, string Menu_Url, string Module_Menu_Id, string Is_Deleted, string Action) {
            object[] results = this.Invoke("MenuMaster_CRUD", new object[] {
                        Menu_ID,
                        Menu_Desc,
                        Parent_Menu_Id,
                        Toot_Tip,
                        Menu_Url,
                        Module_Menu_Id,
                        Is_Deleted,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void MenuMaster_CRUDAsync(int Menu_ID, string Menu_Desc, string Parent_Menu_Id, string Toot_Tip, string Menu_Url, string Module_Menu_Id, string Is_Deleted, string Action) {
            this.MenuMaster_CRUDAsync(Menu_ID, Menu_Desc, Parent_Menu_Id, Toot_Tip, Menu_Url, Module_Menu_Id, Is_Deleted, Action, null);
        }
        
        /// <remarks/>
        public void MenuMaster_CRUDAsync(int Menu_ID, string Menu_Desc, string Parent_Menu_Id, string Toot_Tip, string Menu_Url, string Module_Menu_Id, string Is_Deleted, string Action, object userState) {
            if ((this.MenuMaster_CRUDOperationCompleted == null)) {
                this.MenuMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMenuMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("MenuMaster_CRUD", new object[] {
                        Menu_ID,
                        Menu_Desc,
                        Parent_Menu_Id,
                        Toot_Tip,
                        Menu_Url,
                        Module_Menu_Id,
                        Is_Deleted,
                        Action}, this.MenuMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnMenuMaster_CRUDOperationCompleted(object arg) {
            if ((this.MenuMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MenuMaster_CRUDCompleted(this, new MenuMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CustomReports_RU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CustomReports_RU(int Report_ID, string Report_Name, string Report_Desc, int Company_ID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("CustomReports_RU", new object[] {
                        Report_ID,
                        Report_Name,
                        Report_Desc,
                        Company_ID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CustomReports_RUAsync(int Report_ID, string Report_Name, string Report_Desc, int Company_ID, string LoggedInUserID, string Action) {
            this.CustomReports_RUAsync(Report_ID, Report_Name, Report_Desc, Company_ID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void CustomReports_RUAsync(int Report_ID, string Report_Name, string Report_Desc, int Company_ID, string LoggedInUserID, string Action, object userState) {
            if ((this.CustomReports_RUOperationCompleted == null)) {
                this.CustomReports_RUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomReports_RUOperationCompleted);
            }
            this.InvokeAsync("CustomReports_RU", new object[] {
                        Report_ID,
                        Report_Name,
                        Report_Desc,
                        Company_ID,
                        LoggedInUserID,
                        Action}, this.CustomReports_RUOperationCompleted, userState);
        }
        
        private void OnCustomReports_RUOperationCompleted(object arg) {
            if ((this.CustomReports_RUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomReports_RUCompleted(this, new CustomReports_RUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserTypeMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UserTypeMaster_CRUD(int User_Type_ID, string User_Type_Desc, int CompanyID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("UserTypeMaster_CRUD", new object[] {
                        User_Type_ID,
                        User_Type_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UserTypeMaster_CRUDAsync(int User_Type_ID, string User_Type_Desc, int CompanyID, string LoggedInUserID, string Action) {
            this.UserTypeMaster_CRUDAsync(User_Type_ID, User_Type_Desc, CompanyID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void UserTypeMaster_CRUDAsync(int User_Type_ID, string User_Type_Desc, int CompanyID, string LoggedInUserID, string Action, object userState) {
            if ((this.UserTypeMaster_CRUDOperationCompleted == null)) {
                this.UserTypeMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserTypeMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("UserTypeMaster_CRUD", new object[] {
                        User_Type_ID,
                        User_Type_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Action}, this.UserTypeMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnUserTypeMaster_CRUDOperationCompleted(object arg) {
            if ((this.UserTypeMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserTypeMaster_CRUDCompleted(this, new UserTypeMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DepartmentMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DepartmentMaster_CRUD(int Department_ID, string Dept_Desc, int CompanyID, string LoggedInUserID, string Is_Deleted, string Action) {
            object[] results = this.Invoke("DepartmentMaster_CRUD", new object[] {
                        Department_ID,
                        Dept_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Is_Deleted,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DepartmentMaster_CRUDAsync(int Department_ID, string Dept_Desc, int CompanyID, string LoggedInUserID, string Is_Deleted, string Action) {
            this.DepartmentMaster_CRUDAsync(Department_ID, Dept_Desc, CompanyID, LoggedInUserID, Is_Deleted, Action, null);
        }
        
        /// <remarks/>
        public void DepartmentMaster_CRUDAsync(int Department_ID, string Dept_Desc, int CompanyID, string LoggedInUserID, string Is_Deleted, string Action, object userState) {
            if ((this.DepartmentMaster_CRUDOperationCompleted == null)) {
                this.DepartmentMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDepartmentMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("DepartmentMaster_CRUD", new object[] {
                        Department_ID,
                        Dept_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Is_Deleted,
                        Action}, this.DepartmentMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnDepartmentMaster_CRUDOperationCompleted(object arg) {
            if ((this.DepartmentMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DepartmentMaster_CRUDCompleted(this, new DepartmentMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Zone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Zone() {
            object[] results = this.Invoke("Fetch_Zone", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_ZoneAsync() {
            this.Fetch_ZoneAsync(null);
        }
        
        /// <remarks/>
        public void Fetch_ZoneAsync(object userState) {
            if ((this.Fetch_ZoneOperationCompleted == null)) {
                this.Fetch_ZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_ZoneOperationCompleted);
            }
            this.InvokeAsync("Fetch_Zone", new object[0], this.Fetch_ZoneOperationCompleted, userState);
        }
        
        private void OnFetch_ZoneOperationCompleted(object arg) {
            if ((this.Fetch_ZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_ZoneCompleted(this, new Fetch_ZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Location", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Location(int ZoneID) {
            object[] results = this.Invoke("Fetch_Location", new object[] {
                        ZoneID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LocationAsync(int ZoneID) {
            this.Fetch_LocationAsync(ZoneID, null);
        }
        
        /// <remarks/>
        public void Fetch_LocationAsync(int ZoneID, object userState) {
            if ((this.Fetch_LocationOperationCompleted == null)) {
                this.Fetch_LocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LocationOperationCompleted);
            }
            this.InvokeAsync("Fetch_Location", new object[] {
                        ZoneID}, this.Fetch_LocationOperationCompleted, userState);
        }
        
        private void OnFetch_LocationOperationCompleted(object arg) {
            if ((this.Fetch_LocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LocationCompleted(this, new Fetch_LocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Sub_Location", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Sub_Location(int Loc_ID) {
            object[] results = this.Invoke("Fetch_Sub_Location", new object[] {
                        Loc_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Sub_LocationAsync(int Loc_ID) {
            this.Fetch_Sub_LocationAsync(Loc_ID, null);
        }
        
        /// <remarks/>
        public void Fetch_Sub_LocationAsync(int Loc_ID, object userState) {
            if ((this.Fetch_Sub_LocationOperationCompleted == null)) {
                this.Fetch_Sub_LocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Sub_LocationOperationCompleted);
            }
            this.InvokeAsync("Fetch_Sub_Location", new object[] {
                        Loc_ID}, this.Fetch_Sub_LocationOperationCompleted, userState);
        }
        
        private void OnFetch_Sub_LocationOperationCompleted(object arg) {
            if ((this.Fetch_Sub_LocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Sub_LocationCompleted(this, new Fetch_Sub_LocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Department", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Department(int CompanyID) {
            object[] results = this.Invoke("Fetch_Department", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_DepartmentAsync(int CompanyID) {
            this.Fetch_DepartmentAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_DepartmentAsync(int CompanyID, object userState) {
            if ((this.Fetch_DepartmentOperationCompleted == null)) {
                this.Fetch_DepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_DepartmentOperationCompleted);
            }
            this.InvokeAsync("Fetch_Department", new object[] {
                        CompanyID}, this.Fetch_DepartmentOperationCompleted, userState);
        }
        
        private void OnFetch_DepartmentOperationCompleted(object arg) {
            if ((this.Fetch_DepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_DepartmentCompleted(this, new Fetch_DepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_User_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_User_Type(int CompanyId) {
            object[] results = this.Invoke("Fetch_User_Type", new object[] {
                        CompanyId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_User_TypeAsync(int CompanyId) {
            this.Fetch_User_TypeAsync(CompanyId, null);
        }
        
        /// <remarks/>
        public void Fetch_User_TypeAsync(int CompanyId, object userState) {
            if ((this.Fetch_User_TypeOperationCompleted == null)) {
                this.Fetch_User_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_User_TypeOperationCompleted);
            }
            this.InvokeAsync("Fetch_User_Type", new object[] {
                        CompanyId}, this.Fetch_User_TypeOperationCompleted, userState);
        }
        
        private void OnFetch_User_TypeOperationCompleted(object arg) {
            if ((this.Fetch_User_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_User_TypeCompleted(this, new Fetch_User_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UserMaster_CRUD(
                    int User_ID, 
                    string User_Code, 
                    string F_name, 
                    string L_Name, 
                    string User_Mobile, 
                    string User_Email, 
                    string User_MobileAlter, 
                    string User_Landline, 
                    string User_Designation, 
                    int User_Type_ID, 
                    int Zone_ID, 
                    int Loc_ID, 
                    int SubLoc_Id, 
                    int Department_Id, 
                    string Login_Id, 
                    string Password, 
                    int Is_Approver, 
                    int Is_GobalApprover, 
                    int Approver_ID, 
                    int RoleID, 
                    string ProfilePhoto_FilePath, 
                    string Sign_FilePath, 
                    int CompanyID, 
                    int Is_Email_Verified, 
                    string LoggedInUserID, 
                    string Action) {
            object[] results = this.Invoke("UserMaster_CRUD", new object[] {
                        User_ID,
                        User_Code,
                        F_name,
                        L_Name,
                        User_Mobile,
                        User_Email,
                        User_MobileAlter,
                        User_Landline,
                        User_Designation,
                        User_Type_ID,
                        Zone_ID,
                        Loc_ID,
                        SubLoc_Id,
                        Department_Id,
                        Login_Id,
                        Password,
                        Is_Approver,
                        Is_GobalApprover,
                        Approver_ID,
                        RoleID,
                        ProfilePhoto_FilePath,
                        Sign_FilePath,
                        CompanyID,
                        Is_Email_Verified,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UserMaster_CRUDAsync(
                    int User_ID, 
                    string User_Code, 
                    string F_name, 
                    string L_Name, 
                    string User_Mobile, 
                    string User_Email, 
                    string User_MobileAlter, 
                    string User_Landline, 
                    string User_Designation, 
                    int User_Type_ID, 
                    int Zone_ID, 
                    int Loc_ID, 
                    int SubLoc_Id, 
                    int Department_Id, 
                    string Login_Id, 
                    string Password, 
                    int Is_Approver, 
                    int Is_GobalApprover, 
                    int Approver_ID, 
                    int RoleID, 
                    string ProfilePhoto_FilePath, 
                    string Sign_FilePath, 
                    int CompanyID, 
                    int Is_Email_Verified, 
                    string LoggedInUserID, 
                    string Action) {
            this.UserMaster_CRUDAsync(User_ID, User_Code, F_name, L_Name, User_Mobile, User_Email, User_MobileAlter, User_Landline, User_Designation, User_Type_ID, Zone_ID, Loc_ID, SubLoc_Id, Department_Id, Login_Id, Password, Is_Approver, Is_GobalApprover, Approver_ID, RoleID, ProfilePhoto_FilePath, Sign_FilePath, CompanyID, Is_Email_Verified, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void UserMaster_CRUDAsync(
                    int User_ID, 
                    string User_Code, 
                    string F_name, 
                    string L_Name, 
                    string User_Mobile, 
                    string User_Email, 
                    string User_MobileAlter, 
                    string User_Landline, 
                    string User_Designation, 
                    int User_Type_ID, 
                    int Zone_ID, 
                    int Loc_ID, 
                    int SubLoc_Id, 
                    int Department_Id, 
                    string Login_Id, 
                    string Password, 
                    int Is_Approver, 
                    int Is_GobalApprover, 
                    int Approver_ID, 
                    int RoleID, 
                    string ProfilePhoto_FilePath, 
                    string Sign_FilePath, 
                    int CompanyID, 
                    int Is_Email_Verified, 
                    string LoggedInUserID, 
                    string Action, 
                    object userState) {
            if ((this.UserMaster_CRUDOperationCompleted == null)) {
                this.UserMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("UserMaster_CRUD", new object[] {
                        User_ID,
                        User_Code,
                        F_name,
                        L_Name,
                        User_Mobile,
                        User_Email,
                        User_MobileAlter,
                        User_Landline,
                        User_Designation,
                        User_Type_ID,
                        Zone_ID,
                        Loc_ID,
                        SubLoc_Id,
                        Department_Id,
                        Login_Id,
                        Password,
                        Is_Approver,
                        Is_GobalApprover,
                        Approver_ID,
                        RoleID,
                        ProfilePhoto_FilePath,
                        Sign_FilePath,
                        CompanyID,
                        Is_Email_Verified,
                        LoggedInUserID,
                        Action}, this.UserMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnUserMaster_CRUDOperationCompleted(object arg) {
            if ((this.UserMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserMaster_CRUDCompleted(this, new UserMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Email_Verification_Mail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Email_Verification_Mail(string EmailID, string OTP) {
            object[] results = this.Invoke("Email_Verification_Mail", new object[] {
                        EmailID,
                        OTP});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Email_Verification_MailAsync(string EmailID, string OTP) {
            this.Email_Verification_MailAsync(EmailID, OTP, null);
        }
        
        /// <remarks/>
        public void Email_Verification_MailAsync(string EmailID, string OTP, object userState) {
            if ((this.Email_Verification_MailOperationCompleted == null)) {
                this.Email_Verification_MailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmail_Verification_MailOperationCompleted);
            }
            this.InvokeAsync("Email_Verification_Mail", new object[] {
                        EmailID,
                        OTP}, this.Email_Verification_MailOperationCompleted, userState);
        }
        
        private void OnEmail_Verification_MailOperationCompleted(object arg) {
            if ((this.Email_Verification_MailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Email_Verification_MailCompleted(this, new Email_Verification_MailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginUser(string UserId, string strPassword, string UserType, int CompanyID) {
            object[] results = this.Invoke("LoginUser", new object[] {
                        UserId,
                        strPassword,
                        UserType,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginUserAsync(string UserId, string strPassword, string UserType, int CompanyID) {
            this.LoginUserAsync(UserId, strPassword, UserType, CompanyID, null);
        }
        
        /// <remarks/>
        public void LoginUserAsync(string UserId, string strPassword, string UserType, int CompanyID, object userState) {
            if ((this.LoginUserOperationCompleted == null)) {
                this.LoginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginUserOperationCompleted);
            }
            this.InvokeAsync("LoginUser", new object[] {
                        UserId,
                        strPassword,
                        UserType,
                        CompanyID}, this.LoginUserOperationCompleted, userState);
        }
        
        private void OnLoginUserOperationCompleted(object arg) {
            if ((this.LoginUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PriorityMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet PriorityMaster_CRUD(int Priority_ID, string Priority_Desc, int CompanyID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("PriorityMaster_CRUD", new object[] {
                        Priority_ID,
                        Priority_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void PriorityMaster_CRUDAsync(int Priority_ID, string Priority_Desc, int CompanyID, string LoggedInUserID, string Action) {
            this.PriorityMaster_CRUDAsync(Priority_ID, Priority_Desc, CompanyID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void PriorityMaster_CRUDAsync(int Priority_ID, string Priority_Desc, int CompanyID, string LoggedInUserID, string Action, object userState) {
            if ((this.PriorityMaster_CRUDOperationCompleted == null)) {
                this.PriorityMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPriorityMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("PriorityMaster_CRUD", new object[] {
                        Priority_ID,
                        Priority_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Action}, this.PriorityMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnPriorityMaster_CRUDOperationCompleted(object arg) {
            if ((this.PriorityMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PriorityMaster_CRUDCompleted(this, new PriorityMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FrequencyMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FrequencyMaster_CRUD(int Frquency_Id, string Frquency_Desc, int CompanyID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("FrequencyMaster_CRUD", new object[] {
                        Frquency_Id,
                        Frquency_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FrequencyMaster_CRUDAsync(int Frquency_Id, string Frquency_Desc, int CompanyID, string LoggedInUserID, string Action) {
            this.FrequencyMaster_CRUDAsync(Frquency_Id, Frquency_Desc, CompanyID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void FrequencyMaster_CRUDAsync(int Frquency_Id, string Frquency_Desc, int CompanyID, string LoggedInUserID, string Action, object userState) {
            if ((this.FrequencyMaster_CRUDOperationCompleted == null)) {
                this.FrequencyMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFrequencyMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("FrequencyMaster_CRUD", new object[] {
                        Frquency_Id,
                        Frquency_Desc,
                        CompanyID,
                        LoggedInUserID,
                        Action}, this.FrequencyMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnFrequencyMaster_CRUDOperationCompleted(object arg) {
            if ((this.FrequencyMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FrequencyMaster_CRUDCompleted(this, new FrequencyMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ZoneMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ZoneMaster_CRUD(int ZoneID, int CompanyID, string ZoneCode, string ZoneDesc, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("ZoneMaster_CRUD", new object[] {
                        ZoneID,
                        CompanyID,
                        ZoneCode,
                        ZoneDesc,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ZoneMaster_CRUDAsync(int ZoneID, int CompanyID, string ZoneCode, string ZoneDesc, string LoggedInUserID, string Action) {
            this.ZoneMaster_CRUDAsync(ZoneID, CompanyID, ZoneCode, ZoneDesc, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void ZoneMaster_CRUDAsync(int ZoneID, int CompanyID, string ZoneCode, string ZoneDesc, string LoggedInUserID, string Action, object userState) {
            if ((this.ZoneMaster_CRUDOperationCompleted == null)) {
                this.ZoneMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZoneMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("ZoneMaster_CRUD", new object[] {
                        ZoneID,
                        CompanyID,
                        ZoneCode,
                        ZoneDesc,
                        LoggedInUserID,
                        Action}, this.ZoneMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnZoneMaster_CRUDOperationCompleted(object arg) {
            if ((this.ZoneMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ZoneMaster_CRUDCompleted(this, new ZoneMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LocationMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LocationMaster_CRUD(int LocID, string Zone, string LocCode, string LocDesc, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("LocationMaster_CRUD", new object[] {
                        LocID,
                        Zone,
                        LocCode,
                        LocDesc,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LocationMaster_CRUDAsync(int LocID, string Zone, string LocCode, string LocDesc, string LoggedInUserID, string Action) {
            this.LocationMaster_CRUDAsync(LocID, Zone, LocCode, LocDesc, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void LocationMaster_CRUDAsync(int LocID, string Zone, string LocCode, string LocDesc, string LoggedInUserID, string Action, object userState) {
            if ((this.LocationMaster_CRUDOperationCompleted == null)) {
                this.LocationMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLocationMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("LocationMaster_CRUD", new object[] {
                        LocID,
                        Zone,
                        LocCode,
                        LocDesc,
                        LoggedInUserID,
                        Action}, this.LocationMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnLocationMaster_CRUDOperationCompleted(object arg) {
            if ((this.LocationMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LocationMaster_CRUDCompleted(this, new LocationMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INV_ItemMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet INV_ItemMaster_CRUD(int Item_ID, string Item_Desc, int Category_ID, int SubCategory_ID, int Company_ID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("INV_ItemMaster_CRUD", new object[] {
                        Item_ID,
                        Item_Desc,
                        Category_ID,
                        SubCategory_ID,
                        Company_ID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void INV_ItemMaster_CRUDAsync(int Item_ID, string Item_Desc, int Category_ID, int SubCategory_ID, int Company_ID, string LoggedInUserID, string Action) {
            this.INV_ItemMaster_CRUDAsync(Item_ID, Item_Desc, Category_ID, SubCategory_ID, Company_ID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void INV_ItemMaster_CRUDAsync(int Item_ID, string Item_Desc, int Category_ID, int SubCategory_ID, int Company_ID, string LoggedInUserID, string Action, object userState) {
            if ((this.INV_ItemMaster_CRUDOperationCompleted == null)) {
                this.INV_ItemMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnINV_ItemMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("INV_ItemMaster_CRUD", new object[] {
                        Item_ID,
                        Item_Desc,
                        Category_ID,
                        SubCategory_ID,
                        Company_ID,
                        LoggedInUserID,
                        Action}, this.INV_ItemMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnINV_ItemMaster_CRUDOperationCompleted(object arg) {
            if ((this.INV_ItemMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.INV_ItemMaster_CRUDCompleted(this, new INV_ItemMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubLocationMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SubLocationMaster_CRUD(int SubLocID, string LocName, string Zone, string SubLocCode, string SubLocDesc, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("SubLocationMaster_CRUD", new object[] {
                        SubLocID,
                        LocName,
                        Zone,
                        SubLocCode,
                        SubLocDesc,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SubLocationMaster_CRUDAsync(int SubLocID, string LocName, string Zone, string SubLocCode, string SubLocDesc, string LoggedInUserID, string Action) {
            this.SubLocationMaster_CRUDAsync(SubLocID, LocName, Zone, SubLocCode, SubLocDesc, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void SubLocationMaster_CRUDAsync(int SubLocID, string LocName, string Zone, string SubLocCode, string SubLocDesc, string LoggedInUserID, string Action, object userState) {
            if ((this.SubLocationMaster_CRUDOperationCompleted == null)) {
                this.SubLocationMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubLocationMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("SubLocationMaster_CRUD", new object[] {
                        SubLocID,
                        LocName,
                        Zone,
                        SubLocCode,
                        SubLocDesc,
                        LoggedInUserID,
                        Action}, this.SubLocationMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnSubLocationMaster_CRUDOperationCompleted(object arg) {
            if ((this.SubLocationMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubLocationMaster_CRUDCompleted(this, new SubLocationMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserGroupMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UserGroupMaster_CRUD(int Grp_Id, string Grp_Desc, string User_ID, int CompanyID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("UserGroupMaster_CRUD", new object[] {
                        Grp_Id,
                        Grp_Desc,
                        User_ID,
                        CompanyID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UserGroupMaster_CRUDAsync(int Grp_Id, string Grp_Desc, string User_ID, int CompanyID, string LoggedInUserID, string Action) {
            this.UserGroupMaster_CRUDAsync(Grp_Id, Grp_Desc, User_ID, CompanyID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void UserGroupMaster_CRUDAsync(int Grp_Id, string Grp_Desc, string User_ID, int CompanyID, string LoggedInUserID, string Action, object userState) {
            if ((this.UserGroupMaster_CRUDOperationCompleted == null)) {
                this.UserGroupMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGroupMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("UserGroupMaster_CRUD", new object[] {
                        Grp_Id,
                        Grp_Desc,
                        User_ID,
                        CompanyID,
                        LoggedInUserID,
                        Action}, this.UserGroupMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnUserGroupMaster_CRUDOperationCompleted(object arg) {
            if ((this.UserGroupMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGroupMaster_CRUDCompleted(this, new UserGroupMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FetchUserGrp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet FetchUserGrp(int GroupID, int CompanyID) {
            object[] results = this.Invoke("FetchUserGrp", new object[] {
                        GroupID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void FetchUserGrpAsync(int GroupID, int CompanyID) {
            this.FetchUserGrpAsync(GroupID, CompanyID, null);
        }
        
        /// <remarks/>
        public void FetchUserGrpAsync(int GroupID, int CompanyID, object userState) {
            if ((this.FetchUserGrpOperationCompleted == null)) {
                this.FetchUserGrpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchUserGrpOperationCompleted);
            }
            this.InvokeAsync("FetchUserGrp", new object[] {
                        GroupID,
                        CompanyID}, this.FetchUserGrpOperationCompleted, userState);
        }
        
        private void OnFetchUserGrpOperationCompleted(object arg) {
            if ((this.FetchUserGrpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchUserGrpCompleted(this, new FetchUserGrpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_CategorySubCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_CategorySubCategory(int CategoryID, int CompanyID) {
            object[] results = this.Invoke("Fetch_CategorySubCategory", new object[] {
                        CategoryID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_CategorySubCategoryAsync(int CategoryID, int CompanyID) {
            this.Fetch_CategorySubCategoryAsync(CategoryID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_CategorySubCategoryAsync(int CategoryID, int CompanyID, object userState) {
            if ((this.Fetch_CategorySubCategoryOperationCompleted == null)) {
                this.Fetch_CategorySubCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_CategorySubCategoryOperationCompleted);
            }
            this.InvokeAsync("Fetch_CategorySubCategory", new object[] {
                        CategoryID,
                        CompanyID}, this.Fetch_CategorySubCategoryOperationCompleted, userState);
        }
        
        private void OnFetch_CategorySubCategoryOperationCompleted(object arg) {
            if ((this.Fetch_CategorySubCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_CategorySubCategoryCompleted(this, new Fetch_CategorySubCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WorkflowMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet WorkflowMaster_CRUD(int WorkflowID, string WorkflowDesc, int ZoneID, int CategoryID, int SubCategoryID, string xmlWorkflow, int CompanyID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("WorkflowMaster_CRUD", new object[] {
                        WorkflowID,
                        WorkflowDesc,
                        ZoneID,
                        CategoryID,
                        SubCategoryID,
                        xmlWorkflow,
                        CompanyID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void WorkflowMaster_CRUDAsync(int WorkflowID, string WorkflowDesc, int ZoneID, int CategoryID, int SubCategoryID, string xmlWorkflow, int CompanyID, string LoggedInUserID, string Action) {
            this.WorkflowMaster_CRUDAsync(WorkflowID, WorkflowDesc, ZoneID, CategoryID, SubCategoryID, xmlWorkflow, CompanyID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void WorkflowMaster_CRUDAsync(int WorkflowID, string WorkflowDesc, int ZoneID, int CategoryID, int SubCategoryID, string xmlWorkflow, int CompanyID, string LoggedInUserID, string Action, object userState) {
            if ((this.WorkflowMaster_CRUDOperationCompleted == null)) {
                this.WorkflowMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkflowMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("WorkflowMaster_CRUD", new object[] {
                        WorkflowID,
                        WorkflowDesc,
                        ZoneID,
                        CategoryID,
                        SubCategoryID,
                        xmlWorkflow,
                        CompanyID,
                        LoggedInUserID,
                        Action}, this.WorkflowMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnWorkflowMaster_CRUDOperationCompleted(object arg) {
            if ((this.WorkflowMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkflowMaster_CRUDCompleted(this, new WorkflowMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_User_UserGroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_User_UserGroupList(int CompanyID) {
            object[] results = this.Invoke("Fetch_User_UserGroupList", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_User_UserGroupListAsync(int CompanyID) {
            this.Fetch_User_UserGroupListAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_User_UserGroupListAsync(int CompanyID, object userState) {
            if ((this.Fetch_User_UserGroupListOperationCompleted == null)) {
                this.Fetch_User_UserGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_User_UserGroupListOperationCompleted);
            }
            this.InvokeAsync("Fetch_User_UserGroupList", new object[] {
                        CompanyID}, this.Fetch_User_UserGroupListOperationCompleted, userState);
        }
        
        private void OnFetch_User_UserGroupListOperationCompleted(object arg) {
            if ((this.Fetch_User_UserGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_User_UserGroupListCompleted(this, new Fetch_User_UserGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CategoryMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CategoryMaster_CRUD(int CompanyID, int Category_ID, string Category_Desc, int DepartmentID, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("CategoryMaster_CRUD", new object[] {
                        CompanyID,
                        Category_ID,
                        Category_Desc,
                        DepartmentID,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CategoryMaster_CRUDAsync(int CompanyID, int Category_ID, string Category_Desc, int DepartmentID, string LoggedInUserID, string Action) {
            this.CategoryMaster_CRUDAsync(CompanyID, Category_ID, Category_Desc, DepartmentID, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void CategoryMaster_CRUDAsync(int CompanyID, int Category_ID, string Category_Desc, int DepartmentID, string LoggedInUserID, string Action, object userState) {
            if ((this.CategoryMaster_CRUDOperationCompleted == null)) {
                this.CategoryMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCategoryMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("CategoryMaster_CRUD", new object[] {
                        CompanyID,
                        Category_ID,
                        Category_Desc,
                        DepartmentID,
                        LoggedInUserID,
                        Action}, this.CategoryMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnCategoryMaster_CRUDOperationCompleted(object arg) {
            if ((this.CategoryMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CategoryMaster_CRUDCompleted(this, new CategoryMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetailerPunch_CR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RetailerPunch_CR(string LoggedInUserID, string Punch_Type, int CompanyID, string Action) {
            object[] results = this.Invoke("RetailerPunch_CR", new object[] {
                        LoggedInUserID,
                        Punch_Type,
                        CompanyID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void RetailerPunch_CRAsync(string LoggedInUserID, string Punch_Type, int CompanyID, string Action) {
            this.RetailerPunch_CRAsync(LoggedInUserID, Punch_Type, CompanyID, Action, null);
        }
        
        /// <remarks/>
        public void RetailerPunch_CRAsync(string LoggedInUserID, string Punch_Type, int CompanyID, string Action, object userState) {
            if ((this.RetailerPunch_CROperationCompleted == null)) {
                this.RetailerPunch_CROperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetailerPunch_CROperationCompleted);
            }
            this.InvokeAsync("RetailerPunch_CR", new object[] {
                        LoggedInUserID,
                        Punch_Type,
                        CompanyID,
                        Action}, this.RetailerPunch_CROperationCompleted, userState);
        }
        
        private void OnRetailerPunch_CROperationCompleted(object arg) {
            if ((this.RetailerPunch_CRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetailerPunch_CRCompleted(this, new RetailerPunch_CRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_CRUD_Vendor_Mst", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_CRUD_Vendor_Mst(int Vendor_ID, string Vendor_Name, string Vendor_Desc, string Vendor_Address, string Vendor_Contact1, string Vendor_Contact2, string Vendor_Email, string Vendor_Reg_ID, string Vendor_GSTIN, string Vendor_PAN, string Vendor_Bank_Details, string LoggedInUserID, int CompanyID, string Action) {
            object[] results = this.Invoke("Fetch_CRUD_Vendor_Mst", new object[] {
                        Vendor_ID,
                        Vendor_Name,
                        Vendor_Desc,
                        Vendor_Address,
                        Vendor_Contact1,
                        Vendor_Contact2,
                        Vendor_Email,
                        Vendor_Reg_ID,
                        Vendor_GSTIN,
                        Vendor_PAN,
                        Vendor_Bank_Details,
                        LoggedInUserID,
                        CompanyID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_CRUD_Vendor_MstAsync(int Vendor_ID, string Vendor_Name, string Vendor_Desc, string Vendor_Address, string Vendor_Contact1, string Vendor_Contact2, string Vendor_Email, string Vendor_Reg_ID, string Vendor_GSTIN, string Vendor_PAN, string Vendor_Bank_Details, string LoggedInUserID, int CompanyID, string Action) {
            this.Fetch_CRUD_Vendor_MstAsync(Vendor_ID, Vendor_Name, Vendor_Desc, Vendor_Address, Vendor_Contact1, Vendor_Contact2, Vendor_Email, Vendor_Reg_ID, Vendor_GSTIN, Vendor_PAN, Vendor_Bank_Details, LoggedInUserID, CompanyID, Action, null);
        }
        
        /// <remarks/>
        public void Fetch_CRUD_Vendor_MstAsync(int Vendor_ID, string Vendor_Name, string Vendor_Desc, string Vendor_Address, string Vendor_Contact1, string Vendor_Contact2, string Vendor_Email, string Vendor_Reg_ID, string Vendor_GSTIN, string Vendor_PAN, string Vendor_Bank_Details, string LoggedInUserID, int CompanyID, string Action, object userState) {
            if ((this.Fetch_CRUD_Vendor_MstOperationCompleted == null)) {
                this.Fetch_CRUD_Vendor_MstOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_CRUD_Vendor_MstOperationCompleted);
            }
            this.InvokeAsync("Fetch_CRUD_Vendor_Mst", new object[] {
                        Vendor_ID,
                        Vendor_Name,
                        Vendor_Desc,
                        Vendor_Address,
                        Vendor_Contact1,
                        Vendor_Contact2,
                        Vendor_Email,
                        Vendor_Reg_ID,
                        Vendor_GSTIN,
                        Vendor_PAN,
                        Vendor_Bank_Details,
                        LoggedInUserID,
                        CompanyID,
                        Action}, this.Fetch_CRUD_Vendor_MstOperationCompleted, userState);
        }
        
        private void OnFetch_CRUD_Vendor_MstOperationCompleted(object arg) {
            if ((this.Fetch_CRUD_Vendor_MstCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_CRUD_Vendor_MstCompleted(this, new Fetch_CRUD_Vendor_MstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubCategoryMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SubCategoryMaster_CRUD(int CompanyID, int SubcategoryID, string SubCategoryDesc, int CategoryID, int Priority_ID, int Approval_Required, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("SubCategoryMaster_CRUD", new object[] {
                        CompanyID,
                        SubcategoryID,
                        SubCategoryDesc,
                        CategoryID,
                        Priority_ID,
                        Approval_Required,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SubCategoryMaster_CRUDAsync(int CompanyID, int SubcategoryID, string SubCategoryDesc, int CategoryID, int Priority_ID, int Approval_Required, string LoggedInUserID, string Action) {
            this.SubCategoryMaster_CRUDAsync(CompanyID, SubcategoryID, SubCategoryDesc, CategoryID, Priority_ID, Approval_Required, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void SubCategoryMaster_CRUDAsync(int CompanyID, int SubcategoryID, string SubCategoryDesc, int CategoryID, int Priority_ID, int Approval_Required, string LoggedInUserID, string Action, object userState) {
            if ((this.SubCategoryMaster_CRUDOperationCompleted == null)) {
                this.SubCategoryMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubCategoryMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("SubCategoryMaster_CRUD", new object[] {
                        CompanyID,
                        SubcategoryID,
                        SubCategoryDesc,
                        CategoryID,
                        Priority_ID,
                        Approval_Required,
                        LoggedInUserID,
                        Action}, this.SubCategoryMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnSubCategoryMaster_CRUDOperationCompleted(object arg) {
            if ((this.SubCategoryMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubCategoryMaster_CRUDCompleted(this, new SubCategoryMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BindLocationDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BindLocationDetails(int ZoneID, int LocationID) {
            object[] results = this.Invoke("BindLocationDetails", new object[] {
                        ZoneID,
                        LocationID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BindLocationDetailsAsync(int ZoneID, int LocationID) {
            this.BindLocationDetailsAsync(ZoneID, LocationID, null);
        }
        
        /// <remarks/>
        public void BindLocationDetailsAsync(int ZoneID, int LocationID, object userState) {
            if ((this.BindLocationDetailsOperationCompleted == null)) {
                this.BindLocationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBindLocationDetailsOperationCompleted);
            }
            this.InvokeAsync("BindLocationDetails", new object[] {
                        ZoneID,
                        LocationID}, this.BindLocationDetailsOperationCompleted, userState);
        }
        
        private void OnBindLocationDetailsOperationCompleted(object arg) {
            if ((this.BindLocationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BindLocationDetailsCompleted(this, new BindLocationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_LocationTree", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_LocationTree(int CompanyID) {
            object[] results = this.Invoke("Fetch_LocationTree", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_LocationTreeAsync(int CompanyID) {
            this.Fetch_LocationTreeAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_LocationTreeAsync(int CompanyID, object userState) {
            if ((this.Fetch_LocationTreeOperationCompleted == null)) {
                this.Fetch_LocationTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_LocationTreeOperationCompleted);
            }
            this.InvokeAsync("Fetch_LocationTree", new object[] {
                        CompanyID}, this.Fetch_LocationTreeOperationCompleted, userState);
        }
        
        private void OnFetch_LocationTreeOperationCompleted(object arg) {
            if ((this.Fetch_LocationTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_LocationTreeCompleted(this, new Fetch_LocationTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Ticket_Workflow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Ticket_Workflow(int CompanyID, int CategoryID, int SubCategoryID, string TicketPrefix, string LoggedInUserID) {
            object[] results = this.Invoke("Fetch_Ticket_Workflow", new object[] {
                        CompanyID,
                        CategoryID,
                        SubCategoryID,
                        TicketPrefix,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Ticket_WorkflowAsync(int CompanyID, int CategoryID, int SubCategoryID, string TicketPrefix, string LoggedInUserID) {
            this.Fetch_Ticket_WorkflowAsync(CompanyID, CategoryID, SubCategoryID, TicketPrefix, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Fetch_Ticket_WorkflowAsync(int CompanyID, int CategoryID, int SubCategoryID, string TicketPrefix, string LoggedInUserID, object userState) {
            if ((this.Fetch_Ticket_WorkflowOperationCompleted == null)) {
                this.Fetch_Ticket_WorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Ticket_WorkflowOperationCompleted);
            }
            this.InvokeAsync("Fetch_Ticket_Workflow", new object[] {
                        CompanyID,
                        CategoryID,
                        SubCategoryID,
                        TicketPrefix,
                        LoggedInUserID}, this.Fetch_Ticket_WorkflowOperationCompleted, userState);
        }
        
        private void OnFetch_Ticket_WorkflowOperationCompleted(object arg) {
            if ((this.Fetch_Ticket_WorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Ticket_WorkflowCompleted(this, new Fetch_Ticket_WorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_Ticket_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_Ticket_Details(string TicketCode, int CompanyID, int LocationID, int CategoryID, int SubCategoryID, string TicketMessage, string list_Images, string CustomFields_XML, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("Insert_Ticket_Details", new object[] {
                        TicketCode,
                        CompanyID,
                        LocationID,
                        CategoryID,
                        SubCategoryID,
                        TicketMessage,
                        list_Images,
                        CustomFields_XML,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_Ticket_DetailsAsync(string TicketCode, int CompanyID, int LocationID, int CategoryID, int SubCategoryID, string TicketMessage, string list_Images, string CustomFields_XML, string LoggedInUserID, string strAction) {
            this.Insert_Ticket_DetailsAsync(TicketCode, CompanyID, LocationID, CategoryID, SubCategoryID, TicketMessage, list_Images, CustomFields_XML, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void Insert_Ticket_DetailsAsync(string TicketCode, int CompanyID, int LocationID, int CategoryID, int SubCategoryID, string TicketMessage, string list_Images, string CustomFields_XML, string LoggedInUserID, string strAction, object userState) {
            if ((this.Insert_Ticket_DetailsOperationCompleted == null)) {
                this.Insert_Ticket_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Ticket_DetailsOperationCompleted);
            }
            this.InvokeAsync("Insert_Ticket_Details", new object[] {
                        TicketCode,
                        CompanyID,
                        LocationID,
                        CategoryID,
                        SubCategoryID,
                        TicketMessage,
                        list_Images,
                        CustomFields_XML,
                        LoggedInUserID,
                        strAction}, this.Insert_Ticket_DetailsOperationCompleted, userState);
        }
        
        private void OnInsert_Ticket_DetailsOperationCompleted(object arg) {
            if ((this.Insert_Ticket_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Ticket_DetailsCompleted(this, new Insert_Ticket_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Ticket_MyActionable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Ticket_MyActionable(int TicketID, int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            object[] results = this.Invoke("Fetch_Ticket_MyActionable", new object[] {
                        TicketID,
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Ticket_MyActionableAsync(int TicketID, int CompanyID, string LoggedInUserID, string From_Date, string To_Date) {
            this.Fetch_Ticket_MyActionableAsync(TicketID, CompanyID, LoggedInUserID, From_Date, To_Date, null);
        }
        
        /// <remarks/>
        public void Fetch_Ticket_MyActionableAsync(int TicketID, int CompanyID, string LoggedInUserID, string From_Date, string To_Date, object userState) {
            if ((this.Fetch_Ticket_MyActionableOperationCompleted == null)) {
                this.Fetch_Ticket_MyActionableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Ticket_MyActionableOperationCompleted);
            }
            this.InvokeAsync("Fetch_Ticket_MyActionable", new object[] {
                        TicketID,
                        CompanyID,
                        LoggedInUserID,
                        From_Date,
                        To_Date}, this.Fetch_Ticket_MyActionableOperationCompleted, userState);
        }
        
        private void OnFetch_Ticket_MyActionableOperationCompleted(object arg) {
            if ((this.Fetch_Ticket_MyActionableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Ticket_MyActionableCompleted(this, new Fetch_Ticket_MyActionableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_Ticket_MyActionable_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_Ticket_MyActionable_Details(int TicketID, int CompanyID, string LoggedInUserID) {
            object[] results = this.Invoke("Fetch_Ticket_MyActionable_Details", new object[] {
                        TicketID,
                        CompanyID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_Ticket_MyActionable_DetailsAsync(int TicketID, int CompanyID, string LoggedInUserID) {
            this.Fetch_Ticket_MyActionable_DetailsAsync(TicketID, CompanyID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Fetch_Ticket_MyActionable_DetailsAsync(int TicketID, int CompanyID, string LoggedInUserID, object userState) {
            if ((this.Fetch_Ticket_MyActionable_DetailsOperationCompleted == null)) {
                this.Fetch_Ticket_MyActionable_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_Ticket_MyActionable_DetailsOperationCompleted);
            }
            this.InvokeAsync("Fetch_Ticket_MyActionable_Details", new object[] {
                        TicketID,
                        CompanyID,
                        LoggedInUserID}, this.Fetch_Ticket_MyActionable_DetailsOperationCompleted, userState);
        }
        
        private void OnFetch_Ticket_MyActionable_DetailsOperationCompleted(object arg) {
            if ((this.Fetch_Ticket_MyActionable_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_Ticket_MyActionable_DetailsCompleted(this, new Fetch_Ticket_MyActionable_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accept_Ticket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Accept_Ticket(int TicketID, string LoggedInUserID) {
            object[] results = this.Invoke("Accept_Ticket", new object[] {
                        TicketID,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Accept_TicketAsync(int TicketID, string LoggedInUserID) {
            this.Accept_TicketAsync(TicketID, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Accept_TicketAsync(int TicketID, string LoggedInUserID, object userState) {
            if ((this.Accept_TicketOperationCompleted == null)) {
                this.Accept_TicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccept_TicketOperationCompleted);
            }
            this.InvokeAsync("Accept_Ticket", new object[] {
                        TicketID,
                        LoggedInUserID}, this.Accept_TicketOperationCompleted, userState);
        }
        
        private void OnAccept_TicketOperationCompleted(object arg) {
            if ((this.Accept_TicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accept_TicketCompleted(this, new Accept_TicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_CTT_Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_CTT_Report(string TicketStatus, string ActionStatus, string From_Date, string To_Date, int CompanyID) {
            object[] results = this.Invoke("Fetch_CTT_Report", new object[] {
                        TicketStatus,
                        ActionStatus,
                        From_Date,
                        To_Date,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_CTT_ReportAsync(string TicketStatus, string ActionStatus, string From_Date, string To_Date, int CompanyID) {
            this.Fetch_CTT_ReportAsync(TicketStatus, ActionStatus, From_Date, To_Date, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_CTT_ReportAsync(string TicketStatus, string ActionStatus, string From_Date, string To_Date, int CompanyID, object userState) {
            if ((this.Fetch_CTT_ReportOperationCompleted == null)) {
                this.Fetch_CTT_ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_CTT_ReportOperationCompleted);
            }
            this.InvokeAsync("Fetch_CTT_Report", new object[] {
                        TicketStatus,
                        ActionStatus,
                        From_Date,
                        To_Date,
                        CompanyID}, this.Fetch_CTT_ReportOperationCompleted, userState);
        }
        
        private void OnFetch_CTT_ReportOperationCompleted(object arg) {
            if ((this.Fetch_CTT_ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_CTT_ReportCompleted(this, new Fetch_CTT_ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bind_Ticket_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Bind_Ticket_Details(int TicketID, int CompanyID) {
            object[] results = this.Invoke("Bind_Ticket_Details", new object[] {
                        TicketID,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Bind_Ticket_DetailsAsync(int TicketID, int CompanyID) {
            this.Bind_Ticket_DetailsAsync(TicketID, CompanyID, null);
        }
        
        /// <remarks/>
        public void Bind_Ticket_DetailsAsync(int TicketID, int CompanyID, object userState) {
            if ((this.Bind_Ticket_DetailsOperationCompleted == null)) {
                this.Bind_Ticket_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBind_Ticket_DetailsOperationCompleted);
            }
            this.InvokeAsync("Bind_Ticket_Details", new object[] {
                        TicketID,
                        CompanyID}, this.Bind_Ticket_DetailsOperationCompleted, userState);
        }
        
        private void OnBind_Ticket_DetailsOperationCompleted(object arg) {
            if ((this.Bind_Ticket_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Bind_Ticket_DetailsCompleted(this, new Bind_Ticket_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_ChartData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_ChartData(string fromDate, string toDate, int CompanyID) {
            object[] results = this.Invoke("Get_ChartData", new object[] {
                        fromDate,
                        toDate,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ChartDataAsync(string fromDate, string toDate, int CompanyID) {
            this.Get_ChartDataAsync(fromDate, toDate, CompanyID, null);
        }
        
        /// <remarks/>
        public void Get_ChartDataAsync(string fromDate, string toDate, int CompanyID, object userState) {
            if ((this.Get_ChartDataOperationCompleted == null)) {
                this.Get_ChartDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ChartDataOperationCompleted);
            }
            this.InvokeAsync("Get_ChartData", new object[] {
                        fromDate,
                        toDate,
                        CompanyID}, this.Get_ChartDataOperationCompleted, userState);
        }
        
        private void OnGet_ChartDataOperationCompleted(object arg) {
            if ((this.Get_ChartDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ChartDataCompleted(this, new Get_ChartDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Employee_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Employee_CRUD(string firstName, string lastName, string email, long phone, string EmpID, string LoggedInUserID, string role, string Username, string Password, string actionType) {
            object[] results = this.Invoke("Employee_CRUD", new object[] {
                        firstName,
                        lastName,
                        email,
                        phone,
                        EmpID,
                        LoggedInUserID,
                        role,
                        Username,
                        Password,
                        actionType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Employee_CRUDAsync(string firstName, string lastName, string email, long phone, string EmpID, string LoggedInUserID, string role, string Username, string Password, string actionType) {
            this.Employee_CRUDAsync(firstName, lastName, email, phone, EmpID, LoggedInUserID, role, Username, Password, actionType, null);
        }
        
        /// <remarks/>
        public void Employee_CRUDAsync(string firstName, string lastName, string email, long phone, string EmpID, string LoggedInUserID, string role, string Username, string Password, string actionType, object userState) {
            if ((this.Employee_CRUDOperationCompleted == null)) {
                this.Employee_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmployee_CRUDOperationCompleted);
            }
            this.InvokeAsync("Employee_CRUD", new object[] {
                        firstName,
                        lastName,
                        email,
                        phone,
                        EmpID,
                        LoggedInUserID,
                        role,
                        Username,
                        Password,
                        actionType}, this.Employee_CRUDOperationCompleted, userState);
        }
        
        private void OnEmployee_CRUDOperationCompleted(object arg) {
            if ((this.Employee_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Employee_CRUDCompleted(this, new Employee_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChangePassword(string UserName, string strPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        UserName,
                        strPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string UserName, string strPassword) {
            this.ChangePasswordAsync(UserName, strPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string UserName, string strPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        UserName,
                        strPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/fetchStore", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet fetchStore() {
            object[] results = this.Invoke("fetchStore", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void fetchStoreAsync() {
            this.fetchStoreAsync(null);
        }
        
        /// <remarks/>
        public void fetchStoreAsync(object userState) {
            if ((this.fetchStoreOperationCompleted == null)) {
                this.fetchStoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfetchStoreOperationCompleted);
            }
            this.InvokeAsync("fetchStore", new object[0], this.fetchStoreOperationCompleted, userState);
        }
        
        private void OnfetchStoreOperationCompleted(object arg) {
            if ((this.fetchStoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.fetchStoreCompleted(this, new fetchStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Retailer_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Retailer_CRUD(string storeName, string Store_No, string firstName, string lastName, string email, long phone, int RetailerID, string Username, string Password, int LocationID, int CompanyID, string LoggedInUserID, string actionType) {
            object[] results = this.Invoke("Retailer_CRUD", new object[] {
                        storeName,
                        Store_No,
                        firstName,
                        lastName,
                        email,
                        phone,
                        RetailerID,
                        Username,
                        Password,
                        LocationID,
                        CompanyID,
                        LoggedInUserID,
                        actionType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Retailer_CRUDAsync(string storeName, string Store_No, string firstName, string lastName, string email, long phone, int RetailerID, string Username, string Password, int LocationID, int CompanyID, string LoggedInUserID, string actionType) {
            this.Retailer_CRUDAsync(storeName, Store_No, firstName, lastName, email, phone, RetailerID, Username, Password, LocationID, CompanyID, LoggedInUserID, actionType, null);
        }
        
        /// <remarks/>
        public void Retailer_CRUDAsync(string storeName, string Store_No, string firstName, string lastName, string email, long phone, int RetailerID, string Username, string Password, int LocationID, int CompanyID, string LoggedInUserID, string actionType, object userState) {
            if ((this.Retailer_CRUDOperationCompleted == null)) {
                this.Retailer_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetailer_CRUDOperationCompleted);
            }
            this.InvokeAsync("Retailer_CRUD", new object[] {
                        storeName,
                        Store_No,
                        firstName,
                        lastName,
                        email,
                        phone,
                        RetailerID,
                        Username,
                        Password,
                        LocationID,
                        CompanyID,
                        LoggedInUserID,
                        actionType}, this.Retailer_CRUDOperationCompleted, userState);
        }
        
        private void OnRetailer_CRUDOperationCompleted(object arg) {
            if ((this.Retailer_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Retailer_CRUDCompleted(this, new Retailer_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Event_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Event_Insert(string eventName, string locationName, string startDateTime, string endDateTime, string CustomerQuestion, string CustQuesType, string QuesFor, int EventID, string EventMode, string LoggedInUserID, string option1, string option2, string option3, string option4, int CompanyID) {
            object[] results = this.Invoke("Event_Insert", new object[] {
                        eventName,
                        locationName,
                        startDateTime,
                        endDateTime,
                        CustomerQuestion,
                        CustQuesType,
                        QuesFor,
                        EventID,
                        EventMode,
                        LoggedInUserID,
                        option1,
                        option2,
                        option3,
                        option4,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Event_InsertAsync(string eventName, string locationName, string startDateTime, string endDateTime, string CustomerQuestion, string CustQuesType, string QuesFor, int EventID, string EventMode, string LoggedInUserID, string option1, string option2, string option3, string option4, int CompanyID) {
            this.Event_InsertAsync(eventName, locationName, startDateTime, endDateTime, CustomerQuestion, CustQuesType, QuesFor, EventID, EventMode, LoggedInUserID, option1, option2, option3, option4, CompanyID, null);
        }
        
        /// <remarks/>
        public void Event_InsertAsync(
                    string eventName, 
                    string locationName, 
                    string startDateTime, 
                    string endDateTime, 
                    string CustomerQuestion, 
                    string CustQuesType, 
                    string QuesFor, 
                    int EventID, 
                    string EventMode, 
                    string LoggedInUserID, 
                    string option1, 
                    string option2, 
                    string option3, 
                    string option4, 
                    int CompanyID, 
                    object userState) {
            if ((this.Event_InsertOperationCompleted == null)) {
                this.Event_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEvent_InsertOperationCompleted);
            }
            this.InvokeAsync("Event_Insert", new object[] {
                        eventName,
                        locationName,
                        startDateTime,
                        endDateTime,
                        CustomerQuestion,
                        CustQuesType,
                        QuesFor,
                        EventID,
                        EventMode,
                        LoggedInUserID,
                        option1,
                        option2,
                        option3,
                        option4,
                        CompanyID}, this.Event_InsertOperationCompleted, userState);
        }
        
        private void OnEvent_InsertOperationCompleted(object arg) {
            if ((this.Event_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Event_InsertCompleted(this, new Event_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EventDetails_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EventDetails_CRUD(int EventID, int CompanyID, string actionType) {
            object[] results = this.Invoke("EventDetails_CRUD", new object[] {
                        EventID,
                        CompanyID,
                        actionType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EventDetails_CRUDAsync(int EventID, int CompanyID, string actionType) {
            this.EventDetails_CRUDAsync(EventID, CompanyID, actionType, null);
        }
        
        /// <remarks/>
        public void EventDetails_CRUDAsync(int EventID, int CompanyID, string actionType, object userState) {
            if ((this.EventDetails_CRUDOperationCompleted == null)) {
                this.EventDetails_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEventDetails_CRUDOperationCompleted);
            }
            this.InvokeAsync("EventDetails_CRUD", new object[] {
                        EventID,
                        CompanyID,
                        actionType}, this.EventDetails_CRUDOperationCompleted, userState);
        }
        
        private void OnEventDetails_CRUDOperationCompleted(object arg) {
            if ((this.EventDetails_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EventDetails_CRUDCompleted(this, new EventDetails_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/bindEventDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet bindEventDetails(int CompanyID, int EventID) {
            object[] results = this.Invoke("bindEventDetails", new object[] {
                        CompanyID,
                        EventID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void bindEventDetailsAsync(int CompanyID, int EventID) {
            this.bindEventDetailsAsync(CompanyID, EventID, null);
        }
        
        /// <remarks/>
        public void bindEventDetailsAsync(int CompanyID, int EventID, object userState) {
            if ((this.bindEventDetailsOperationCompleted == null)) {
                this.bindEventDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbindEventDetailsOperationCompleted);
            }
            this.InvokeAsync("bindEventDetails", new object[] {
                        CompanyID,
                        EventID}, this.bindEventDetailsOperationCompleted, userState);
        }
        
        private void OnbindEventDetailsOperationCompleted(object arg) {
            if ((this.bindEventDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bindEventDetailsCompleted(this, new bindEventDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Insert_FeedbackForm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_FeedbackForm(int CompanyID, int EventID, string strFname, string strLname, string strPhoneno, string strGender, string strEmailID, string FeedbackData, string FeedbackNo, string LoggedInUserID) {
            object[] results = this.Invoke("Insert_FeedbackForm", new object[] {
                        CompanyID,
                        EventID,
                        strFname,
                        strLname,
                        strPhoneno,
                        strGender,
                        strEmailID,
                        FeedbackData,
                        FeedbackNo,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_FeedbackFormAsync(int CompanyID, int EventID, string strFname, string strLname, string strPhoneno, string strGender, string strEmailID, string FeedbackData, string FeedbackNo, string LoggedInUserID) {
            this.Insert_FeedbackFormAsync(CompanyID, EventID, strFname, strLname, strPhoneno, strGender, strEmailID, FeedbackData, FeedbackNo, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Insert_FeedbackFormAsync(int CompanyID, int EventID, string strFname, string strLname, string strPhoneno, string strGender, string strEmailID, string FeedbackData, string FeedbackNo, string LoggedInUserID, object userState) {
            if ((this.Insert_FeedbackFormOperationCompleted == null)) {
                this.Insert_FeedbackFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_FeedbackFormOperationCompleted);
            }
            this.InvokeAsync("Insert_FeedbackForm", new object[] {
                        CompanyID,
                        EventID,
                        strFname,
                        strLname,
                        strPhoneno,
                        strGender,
                        strEmailID,
                        FeedbackData,
                        FeedbackNo,
                        LoggedInUserID}, this.Insert_FeedbackFormOperationCompleted, userState);
        }
        
        private void OnInsert_FeedbackFormOperationCompleted(object arg) {
            if ((this.Insert_FeedbackFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_FeedbackFormCompleted(this, new Insert_FeedbackFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CustomerDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_CustomerDetails(int Company_ID) {
            object[] results = this.Invoke("Get_CustomerDetails", new object[] {
                        Company_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CustomerDetailsAsync(int Company_ID) {
            this.Get_CustomerDetailsAsync(Company_ID, null);
        }
        
        /// <remarks/>
        public void Get_CustomerDetailsAsync(int Company_ID, object userState) {
            if ((this.Get_CustomerDetailsOperationCompleted == null)) {
                this.Get_CustomerDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CustomerDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_CustomerDetails", new object[] {
                        Company_ID}, this.Get_CustomerDetailsOperationCompleted, userState);
        }
        
        private void OnGet_CustomerDetailsOperationCompleted(object arg) {
            if ((this.Get_CustomerDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CustomerDetailsCompleted(this, new Get_CustomerDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_EventQuestions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_EventQuestions(int EventID) {
            object[] results = this.Invoke("Get_EventQuestions", new object[] {
                        EventID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_EventQuestionsAsync(int EventID) {
            this.Get_EventQuestionsAsync(EventID, null);
        }
        
        /// <remarks/>
        public void Get_EventQuestionsAsync(int EventID, object userState) {
            if ((this.Get_EventQuestionsOperationCompleted == null)) {
                this.Get_EventQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_EventQuestionsOperationCompleted);
            }
            this.InvokeAsync("Get_EventQuestions", new object[] {
                        EventID}, this.Get_EventQuestionsOperationCompleted, userState);
        }
        
        private void OnGet_EventQuestionsOperationCompleted(object arg) {
            if ((this.Get_EventQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_EventQuestionsCompleted(this, new Get_EventQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Event_QuestionIU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Event_QuestionIU(int EventID, string CustomerQuestion, string AnswerType, string opt1, string opt2, string opt3, string opt4, string LoggedInUserID, int QuestionID, string ActionType) {
            object[] results = this.Invoke("Event_QuestionIU", new object[] {
                        EventID,
                        CustomerQuestion,
                        AnswerType,
                        opt1,
                        opt2,
                        opt3,
                        opt4,
                        LoggedInUserID,
                        QuestionID,
                        ActionType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Event_QuestionIUAsync(int EventID, string CustomerQuestion, string AnswerType, string opt1, string opt2, string opt3, string opt4, string LoggedInUserID, int QuestionID, string ActionType) {
            this.Event_QuestionIUAsync(EventID, CustomerQuestion, AnswerType, opt1, opt2, opt3, opt4, LoggedInUserID, QuestionID, ActionType, null);
        }
        
        /// <remarks/>
        public void Event_QuestionIUAsync(int EventID, string CustomerQuestion, string AnswerType, string opt1, string opt2, string opt3, string opt4, string LoggedInUserID, int QuestionID, string ActionType, object userState) {
            if ((this.Event_QuestionIUOperationCompleted == null)) {
                this.Event_QuestionIUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEvent_QuestionIUOperationCompleted);
            }
            this.InvokeAsync("Event_QuestionIU", new object[] {
                        EventID,
                        CustomerQuestion,
                        AnswerType,
                        opt1,
                        opt2,
                        opt3,
                        opt4,
                        LoggedInUserID,
                        QuestionID,
                        ActionType}, this.Event_QuestionIUOperationCompleted, userState);
        }
        
        private void OnEvent_QuestionIUOperationCompleted(object arg) {
            if ((this.Event_QuestionIUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Event_QuestionIUCompleted(this, new Event_QuestionIUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MIS_Report", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MIS_Report(string EventID, string From_Date, string To_Date, int CompanyID) {
            object[] results = this.Invoke("Fetch_MIS_Report", new object[] {
                        EventID,
                        From_Date,
                        To_Date,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MIS_ReportAsync(string EventID, string From_Date, string To_Date, int CompanyID) {
            this.Fetch_MIS_ReportAsync(EventID, From_Date, To_Date, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_MIS_ReportAsync(string EventID, string From_Date, string To_Date, int CompanyID, object userState) {
            if ((this.Fetch_MIS_ReportOperationCompleted == null)) {
                this.Fetch_MIS_ReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MIS_ReportOperationCompleted);
            }
            this.InvokeAsync("Fetch_MIS_Report", new object[] {
                        EventID,
                        From_Date,
                        To_Date,
                        CompanyID}, this.Fetch_MIS_ReportOperationCompleted, userState);
        }
        
        private void OnFetch_MIS_ReportOperationCompleted(object arg) {
            if ((this.Fetch_MIS_ReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MIS_ReportCompleted(this, new Fetch_MIS_ReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Event_Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Event_Update(int EventID, string EventName, string Location, string QuesFor, string EventMode, string startDate, string endDate, string LoggedInUserID, string ActionType) {
            object[] results = this.Invoke("Event_Update", new object[] {
                        EventID,
                        EventName,
                        Location,
                        QuesFor,
                        EventMode,
                        startDate,
                        endDate,
                        LoggedInUserID,
                        ActionType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Event_UpdateAsync(int EventID, string EventName, string Location, string QuesFor, string EventMode, string startDate, string endDate, string LoggedInUserID, string ActionType) {
            this.Event_UpdateAsync(EventID, EventName, Location, QuesFor, EventMode, startDate, endDate, LoggedInUserID, ActionType, null);
        }
        
        /// <remarks/>
        public void Event_UpdateAsync(int EventID, string EventName, string Location, string QuesFor, string EventMode, string startDate, string endDate, string LoggedInUserID, string ActionType, object userState) {
            if ((this.Event_UpdateOperationCompleted == null)) {
                this.Event_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEvent_UpdateOperationCompleted);
            }
            this.InvokeAsync("Event_Update", new object[] {
                        EventID,
                        EventName,
                        Location,
                        QuesFor,
                        EventMode,
                        startDate,
                        endDate,
                        LoggedInUserID,
                        ActionType}, this.Event_UpdateOperationCompleted, userState);
        }
        
        private void OnEvent_UpdateOperationCompleted(object arg) {
            if ((this.Event_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Event_UpdateCompleted(this, new Event_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEventList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEventList(int CompanyID, string EventFor) {
            object[] results = this.Invoke("GetEventList", new object[] {
                        CompanyID,
                        EventFor});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventListAsync(int CompanyID, string EventFor) {
            this.GetEventListAsync(CompanyID, EventFor, null);
        }
        
        /// <remarks/>
        public void GetEventListAsync(int CompanyID, string EventFor, object userState) {
            if ((this.GetEventListOperationCompleted == null)) {
                this.GetEventListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventListOperationCompleted);
            }
            this.InvokeAsync("GetEventList", new object[] {
                        CompanyID,
                        EventFor}, this.GetEventListOperationCompleted, userState);
        }
        
        private void OnGetEventListOperationCompleted(object arg) {
            if ((this.GetEventListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventListCompleted(this, new GetEventListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fetch_MIS_Report_Excel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Fetch_MIS_Report_Excel(string EventID, string From_Date, string To_Date, int CompanyID) {
            object[] results = this.Invoke("Fetch_MIS_Report_Excel", new object[] {
                        EventID,
                        From_Date,
                        To_Date,
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Fetch_MIS_Report_ExcelAsync(string EventID, string From_Date, string To_Date, int CompanyID) {
            this.Fetch_MIS_Report_ExcelAsync(EventID, From_Date, To_Date, CompanyID, null);
        }
        
        /// <remarks/>
        public void Fetch_MIS_Report_ExcelAsync(string EventID, string From_Date, string To_Date, int CompanyID, object userState) {
            if ((this.Fetch_MIS_Report_ExcelOperationCompleted == null)) {
                this.Fetch_MIS_Report_ExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetch_MIS_Report_ExcelOperationCompleted);
            }
            this.InvokeAsync("Fetch_MIS_Report_Excel", new object[] {
                        EventID,
                        From_Date,
                        To_Date,
                        CompanyID}, this.Fetch_MIS_Report_ExcelOperationCompleted, userState);
        }
        
        private void OnFetch_MIS_Report_ExcelOperationCompleted(object arg) {
            if ((this.Fetch_MIS_Report_ExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Fetch_MIS_Report_ExcelCompleted(this, new Fetch_MIS_Report_ExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportRetailer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ImportRetailer(int CompanyID) {
            object[] results = this.Invoke("ImportRetailer", new object[] {
                        CompanyID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ImportRetailerAsync(int CompanyID) {
            this.ImportRetailerAsync(CompanyID, null);
        }
        
        /// <remarks/>
        public void ImportRetailerAsync(int CompanyID, object userState) {
            if ((this.ImportRetailerOperationCompleted == null)) {
                this.ImportRetailerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportRetailerOperationCompleted);
            }
            this.InvokeAsync("ImportRetailer", new object[] {
                        CompanyID}, this.ImportRetailerOperationCompleted, userState);
        }
        
        private void OnImportRetailerOperationCompleted(object arg) {
            if ((this.ImportRetailerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportRetailerCompleted(this, new ImportRetailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddChecklistMaster_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AddChecklistMaster_CRUD(
                    int ChecklistID, 
                    string ChecklistName, 
                    int DeptID, 
                    bool Chkapproval, 
                    bool ChkExpry, 
                    bool ChkSchedule, 
                    int ExpirytimeID, 
                    System.DateTime dtSchedule_Date, 
                    string StartTime, 
                    string EndTime, 
                    int CustFrequency, 
                    int Frquency_Id, 
                    int ZoneID, 
                    int LocationID, 
                    int SubLocationID, 
                    string strXmlChecklistPoint, 
                    string LoggedInUserID, 
                    string Action) {
            object[] results = this.Invoke("AddChecklistMaster_CRUD", new object[] {
                        ChecklistID,
                        ChecklistName,
                        DeptID,
                        Chkapproval,
                        ChkExpry,
                        ChkSchedule,
                        ExpirytimeID,
                        dtSchedule_Date,
                        StartTime,
                        EndTime,
                        CustFrequency,
                        Frquency_Id,
                        ZoneID,
                        LocationID,
                        SubLocationID,
                        strXmlChecklistPoint,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AddChecklistMaster_CRUDAsync(
                    int ChecklistID, 
                    string ChecklistName, 
                    int DeptID, 
                    bool Chkapproval, 
                    bool ChkExpry, 
                    bool ChkSchedule, 
                    int ExpirytimeID, 
                    System.DateTime dtSchedule_Date, 
                    string StartTime, 
                    string EndTime, 
                    int CustFrequency, 
                    int Frquency_Id, 
                    int ZoneID, 
                    int LocationID, 
                    int SubLocationID, 
                    string strXmlChecklistPoint, 
                    string LoggedInUserID, 
                    string Action) {
            this.AddChecklistMaster_CRUDAsync(ChecklistID, ChecklistName, DeptID, Chkapproval, ChkExpry, ChkSchedule, ExpirytimeID, dtSchedule_Date, StartTime, EndTime, CustFrequency, Frquency_Id, ZoneID, LocationID, SubLocationID, strXmlChecklistPoint, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void AddChecklistMaster_CRUDAsync(
                    int ChecklistID, 
                    string ChecklistName, 
                    int DeptID, 
                    bool Chkapproval, 
                    bool ChkExpry, 
                    bool ChkSchedule, 
                    int ExpirytimeID, 
                    System.DateTime dtSchedule_Date, 
                    string StartTime, 
                    string EndTime, 
                    int CustFrequency, 
                    int Frquency_Id, 
                    int ZoneID, 
                    int LocationID, 
                    int SubLocationID, 
                    string strXmlChecklistPoint, 
                    string LoggedInUserID, 
                    string Action, 
                    object userState) {
            if ((this.AddChecklistMaster_CRUDOperationCompleted == null)) {
                this.AddChecklistMaster_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddChecklistMaster_CRUDOperationCompleted);
            }
            this.InvokeAsync("AddChecklistMaster_CRUD", new object[] {
                        ChecklistID,
                        ChecklistName,
                        DeptID,
                        Chkapproval,
                        ChkExpry,
                        ChkSchedule,
                        ExpirytimeID,
                        dtSchedule_Date,
                        StartTime,
                        EndTime,
                        CustFrequency,
                        Frquency_Id,
                        ZoneID,
                        LocationID,
                        SubLocationID,
                        strXmlChecklistPoint,
                        LoggedInUserID,
                        Action}, this.AddChecklistMaster_CRUDOperationCompleted, userState);
        }
        
        private void OnAddChecklistMaster_CRUDOperationCompleted(object arg) {
            if ((this.AddChecklistMaster_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddChecklistMaster_CRUDCompleted(this, new AddChecklistMaster_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecklistPoint_CRUD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChecklistPoint_CRUD(int ChecklistID, int ChecklistPointID, string strChecklistPointDesc, string strChecklstAnstype, string LoggedInUserID, string Action) {
            object[] results = this.Invoke("ChecklistPoint_CRUD", new object[] {
                        ChecklistID,
                        ChecklistPointID,
                        strChecklistPointDesc,
                        strChecklstAnstype,
                        LoggedInUserID,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChecklistPoint_CRUDAsync(int ChecklistID, int ChecklistPointID, string strChecklistPointDesc, string strChecklstAnstype, string LoggedInUserID, string Action) {
            this.ChecklistPoint_CRUDAsync(ChecklistID, ChecklistPointID, strChecklistPointDesc, strChecklstAnstype, LoggedInUserID, Action, null);
        }
        
        /// <remarks/>
        public void ChecklistPoint_CRUDAsync(int ChecklistID, int ChecklistPointID, string strChecklistPointDesc, string strChecklstAnstype, string LoggedInUserID, string Action, object userState) {
            if ((this.ChecklistPoint_CRUDOperationCompleted == null)) {
                this.ChecklistPoint_CRUDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecklistPoint_CRUDOperationCompleted);
            }
            this.InvokeAsync("ChecklistPoint_CRUD", new object[] {
                        ChecklistID,
                        ChecklistPointID,
                        strChecklistPointDesc,
                        strChecklstAnstype,
                        LoggedInUserID,
                        Action}, this.ChecklistPoint_CRUDOperationCompleted, userState);
        }
        
        private void OnChecklistPoint_CRUDOperationCompleted(object arg) {
            if ((this.ChecklistPoint_CRUDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecklistPoint_CRUDCompleted(this, new ChecklistPoint_CRUDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChecklistRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ChecklistRequest(string ScheduleDate, int ZoneID, int LocationID, int SubLocationID, int DepartmentID, int ChecklistID, string StartTime, string TicketNumber, string LoggedInUserID, string strAction) {
            object[] results = this.Invoke("ChecklistRequest", new object[] {
                        ScheduleDate,
                        ZoneID,
                        LocationID,
                        SubLocationID,
                        DepartmentID,
                        ChecklistID,
                        StartTime,
                        TicketNumber,
                        LoggedInUserID,
                        strAction});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ChecklistRequestAsync(string ScheduleDate, int ZoneID, int LocationID, int SubLocationID, int DepartmentID, int ChecklistID, string StartTime, string TicketNumber, string LoggedInUserID, string strAction) {
            this.ChecklistRequestAsync(ScheduleDate, ZoneID, LocationID, SubLocationID, DepartmentID, ChecklistID, StartTime, TicketNumber, LoggedInUserID, strAction, null);
        }
        
        /// <remarks/>
        public void ChecklistRequestAsync(string ScheduleDate, int ZoneID, int LocationID, int SubLocationID, int DepartmentID, int ChecklistID, string StartTime, string TicketNumber, string LoggedInUserID, string strAction, object userState) {
            if ((this.ChecklistRequestOperationCompleted == null)) {
                this.ChecklistRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChecklistRequestOperationCompleted);
            }
            this.InvokeAsync("ChecklistRequest", new object[] {
                        ScheduleDate,
                        ZoneID,
                        LocationID,
                        SubLocationID,
                        DepartmentID,
                        ChecklistID,
                        StartTime,
                        TicketNumber,
                        LoggedInUserID,
                        strAction}, this.ChecklistRequestOperationCompleted, userState);
        }
        
        private void OnChecklistRequestOperationCompleted(object arg) {
            if ((this.ChecklistRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChecklistRequestCompleted(this, new ChecklistRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_ChecklistPoints", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Update_ChecklistPoints(string TicketNumber, string strXmlChecklist, string list_Images, string LoggedInUserID) {
            object[] results = this.Invoke("Update_ChecklistPoints", new object[] {
                        TicketNumber,
                        strXmlChecklist,
                        list_Images,
                        LoggedInUserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Update_ChecklistPointsAsync(string TicketNumber, string strXmlChecklist, string list_Images, string LoggedInUserID) {
            this.Update_ChecklistPointsAsync(TicketNumber, strXmlChecklist, list_Images, LoggedInUserID, null);
        }
        
        /// <remarks/>
        public void Update_ChecklistPointsAsync(string TicketNumber, string strXmlChecklist, string list_Images, string LoggedInUserID, object userState) {
            if ((this.Update_ChecklistPointsOperationCompleted == null)) {
                this.Update_ChecklistPointsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_ChecklistPointsOperationCompleted);
            }
            this.InvokeAsync("Update_ChecklistPoints", new object[] {
                        TicketNumber,
                        strXmlChecklist,
                        list_Images,
                        LoggedInUserID}, this.Update_ChecklistPointsOperationCompleted, userState);
        }
        
        private void OnUpdate_ChecklistPointsOperationCompleted(object arg) {
            if ((this.Update_ChecklistPointsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_ChecklistPointsCompleted(this, new Update_ChecklistPointsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UPDATE_ASSET_REQUEST_DetailsCompletedEventHandler(object sender, UPDATE_ASSET_REQUEST_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UPDATE_ASSET_REQUEST_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UPDATE_ASSET_REQUEST_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompletedEventHandler(object sender, INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INSERT_UPDATE_ASSET_AMC_REQUEST_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyAsset_ServiceCompletedEventHandler(object sender, Fetch_MyAsset_ServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyAsset_ServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyAsset_ServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CRUD_ASSET_SERVICE_REQUEST_DATACompletedEventHandler(object sender, CRUD_ASSET_SERVICE_REQUEST_DATACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CRUD_ASSET_SERVICE_REQUEST_DATACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CRUD_ASSET_SERVICE_REQUEST_DATACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Transaction_ListCompletedEventHandler(object sender, Fetch_Transaction_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Transaction_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Transaction_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_Inv_TransactionCompletedEventHandler(object sender, Delete_Inv_TransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_Inv_TransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_Inv_TransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Stock_ListCompletedEventHandler(object sender, Fetch_Stock_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Stock_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Stock_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_Inv_StockCompletedEventHandler(object sender, Delete_Inv_StockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_Inv_StockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_Inv_StockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_Inv_ItemCompletedEventHandler(object sender, Delete_Inv_ItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_Inv_ItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_Inv_ItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Stock_DetailCompletedEventHandler(object sender, Fetch_Stock_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Stock_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Stock_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Inv_Items_ListCompletedEventHandler(object sender, Fetch_Inv_Items_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Inv_Items_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Inv_Items_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Inv_Item_Stock_DdlCompletedEventHandler(object sender, Fetch_Inv_Item_Stock_DdlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Inv_Item_Stock_DdlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Inv_Item_Stock_DdlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Inv_Crud_Item_StockCompletedEventHandler(object sender, Fetch_Inv_Crud_Item_StockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Inv_Crud_Item_StockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Inv_Crud_Item_StockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Inv_Item_Stock_DataCompletedEventHandler(object sender, Fetch_Inv_Item_Stock_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Inv_Item_Stock_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Inv_Item_Stock_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Inv_Item_Purchase_ListCompletedEventHandler(object sender, Fetch_Inv_Item_Purchase_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Inv_Item_Purchase_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Inv_Item_Purchase_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_Inv_PurchaseCompletedEventHandler(object sender, Delete_Inv_PurchaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_Inv_PurchaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_Inv_PurchaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Crud_Inv_PurchaseCompletedEventHandler(object sender, Crud_Inv_PurchaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Crud_Inv_PurchaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Crud_Inv_PurchaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Inv_Crud_ItemCompletedEventHandler(object sender, Fetch_Inv_Crud_ItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Inv_Crud_ItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Inv_Crud_ItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Tran_DetailCompletedEventHandler(object sender, Fetch_Tran_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Tran_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Tran_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Tran_Item_DetailCompletedEventHandler(object sender, Fetch_Tran_Item_DetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Tran_Item_DetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Tran_Item_DetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Crud_Inv_TransactionCompletedEventHandler(object sender, Crud_Inv_TransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Crud_Inv_TransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Crud_Inv_TransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Crud_Inv_Category_MstCompletedEventHandler(object sender, Crud_Inv_Category_MstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Crud_Inv_Category_MstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Crud_Inv_Category_MstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Crud_Inv_SubCategory_MstCompletedEventHandler(object sender, Crud_Inv_SubCategory_MstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Crud_Inv_SubCategory_MstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Crud_Inv_SubCategory_MstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Crud_Inv_Item_MstCompletedEventHandler(object sender, Crud_Inv_Item_MstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Crud_Inv_Item_MstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Crud_Inv_Item_MstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_My_Profile_DetailsCompletedEventHandler(object sender, Fetch_My_Profile_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_My_Profile_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_My_Profile_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_My_Profile_DetailsCompletedEventHandler(object sender, Update_My_Profile_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_My_Profile_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_My_Profile_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_Change_PasswordCompletedEventHandler(object sender, Update_Change_PasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_Change_PasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_Change_PasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Retailer_Escalation_CRUDCompletedEventHandler(object sender, Retailer_Escalation_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retailer_Escalation_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retailer_Escalation_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void My_Profile_Email_VerificationCompletedEventHandler(object sender, My_Profile_Email_VerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class My_Profile_Email_VerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal My_Profile_Email_VerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_User_ProfilePicCompletedEventHandler(object sender, Update_User_ProfilePicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_User_ProfilePicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_User_ProfilePicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Import_User_MasterCompletedEventHandler(object sender, Import_User_MasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_User_MasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Import_User_MasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Import_Checklist_MasterCompletedEventHandler(object sender, Import_Checklist_MasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_Checklist_MasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Import_Checklist_MasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Schedule_Checklist_CRUDCompletedEventHandler(object sender, Schedule_Checklist_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Schedule_Checklist_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Schedule_Checklist_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyChecklist_NEWCompletedEventHandler(object sender, Fetch_MyChecklist_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyChecklist_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyChecklist_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CRU_System_SettingCompletedEventHandler(object sender, CRU_System_SettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CRU_System_SettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CRU_System_SettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Custom_FieldsCompletedEventHandler(object sender, Fetch_Custom_FieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Custom_FieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Custom_FieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Asset_Custom_FieldsCompletedEventHandler(object sender, Fetch_Asset_Custom_FieldsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Asset_Custom_FieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Asset_Custom_FieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FetchUserEmailCompletedEventHandler(object sender, FetchUserEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchUserEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchUserEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ForgetPasswordSendOTPCompletedEventHandler(object sender, ForgetPasswordSendOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgetPasswordSendOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgetPasswordSendOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SiteMaster_CRUDCompletedEventHandler(object sender, SiteMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SiteMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SiteMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_statesCompletedEventHandler(object sender, Fetch_statesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_statesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_statesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_CityCompletedEventHandler(object sender, Fetch_CityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_CityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_CityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void INSERT_Electricity_CategoryCompletedEventHandler(object sender, INSERT_Electricity_CategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INSERT_Electricity_CategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INSERT_Electricity_CategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_WhatSappLogCompletedEventHandler(object sender, Insert_WhatSappLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_WhatSappLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_WhatSappLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Close_Ticket_DetailsCompletedEventHandler(object sender, Close_Ticket_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Close_Ticket_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Close_Ticket_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Store_AttendanceCompletedEventHandler(object sender, Fetch_Store_AttendanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Store_AttendanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Store_AttendanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Location_PopulateRootLevelCompletedEventHandler(object sender, Location_PopulateRootLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Location_PopulateRootLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Location_PopulateRootLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Location_PopulateSubLevelCompletedEventHandler(object sender, Location_PopulateSubLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Location_PopulateSubLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Location_PopulateSubLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Add_Update_Location_NodeCompletedEventHandler(object sender, Add_Update_Location_NodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Add_Update_Location_NodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Add_Update_Location_NodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FetchMenuCompletedEventHandler(object sender, FetchMenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RoleMaster_CRUDCompletedEventHandler(object sender, RoleMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RoleMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RoleMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Assigned_RoleCompletedEventHandler(object sender, Fetch_Assigned_RoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Assigned_RoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Assigned_RoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Role_MenuCompletedEventHandler(object sender, Fetch_Role_MenuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Role_MenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Role_MenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FETCH_Saved_Role_MENU_RightsCompletedEventHandler(object sender, FETCH_Saved_Role_MENU_RightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FETCH_Saved_Role_MENU_RightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FETCH_Saved_Role_MENU_RightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_RoleMenuRightsCompletedEventHandler(object sender, Insert_RoleMenuRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_RoleMenuRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_RoleMenuRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_Assigned_RoleCompletedEventHandler(object sender, Insert_Assigned_RoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_Assigned_RoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_Assigned_RoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_RoleListingCompletedEventHandler(object sender, Fetch_RoleListingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_RoleListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_RoleListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_GatePassConfigurationCompletedEventHandler(object sender, Insert_GatePassConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_GatePassConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_GatePassConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_GatePassConfigurationCompletedEventHandler(object sender, Fetch_GatePassConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_GatePassConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_GatePassConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_GatePassConfigurationCompletedEventHandler(object sender, Bind_GatePassConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_GatePassConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_GatePassConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GatePassHeader_CRUDCompletedEventHandler(object sender, GatePassHeader_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GatePassHeader_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GatePassHeader_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GatePassType_CRUDCompletedEventHandler(object sender, GatePassType_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GatePassType_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GatePassType_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GatePassTerm_CRUDCompletedEventHandler(object sender, GatePassTerm_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GatePassTerm_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GatePassTerm_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_GatePassConfigurationCompletedEventHandler(object sender, Update_GatePassConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_GatePassConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_GatePassConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_GatePassRequestDetailsCompletedEventHandler(object sender, Bind_GatePassRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_GatePassRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_GatePassRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_GatePassRequestCompletedEventHandler(object sender, Insert_GatePassRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_GatePassRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_GatePassRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyRequestGatePassCompletedEventHandler(object sender, Fetch_MyRequestGatePassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyRequestGatePassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyRequestGatePassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyActionableGatePassCompletedEventHandler(object sender, Fetch_MyActionableGatePassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyActionableGatePassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyActionableGatePassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_GatePassRequest_Approval_DetailsCompletedEventHandler(object sender, Fetch_GatePassRequest_Approval_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_GatePassRequest_Approval_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_GatePassRequest_Approval_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateAction_GatePassRequestCompletedEventHandler(object sender, UpdateAction_GatePassRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAction_GatePassRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAction_GatePassRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_GatePass_MISCompletedEventHandler(object sender, Fetch_GatePass_MISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_GatePass_MISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_GatePass_MISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GatePassConfiguration_Document_CRUDCompletedEventHandler(object sender, GatePassConfiguration_Document_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GatePassConfiguration_Document_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GatePassConfiguration_Document_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_WorkPermitConfigurationCompletedEventHandler(object sender, Insert_WorkPermitConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_WorkPermitConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_WorkPermitConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_AnswerCompletedEventHandler(object sender, Fetch_AnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_AnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_AnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_WorkPermitConfigurationCompletedEventHandler(object sender, Fetch_WorkPermitConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_WorkPermitConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_WorkPermitConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_WorkPermitConfigurationCompletedEventHandler(object sender, Bind_WorkPermitConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_WorkPermitConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_WorkPermitConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_WorkPermitRequestDetailsCompletedEventHandler(object sender, Bind_WorkPermitRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_WorkPermitRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_WorkPermitRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_WorkPermitRequestCompletedEventHandler(object sender, Insert_WorkPermitRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_WorkPermitRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_WorkPermitRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_WorkPermitRequestSavedDataCompletedEventHandler(object sender, Fetch_WorkPermitRequestSavedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_WorkPermitRequestSavedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_WorkPermitRequestSavedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_WorkPermitRequestCompletedEventHandler(object sender, Update_WorkPermitRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_WorkPermitRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_WorkPermitRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyRequestWorkPermitCompletedEventHandler(object sender, Fetch_MyRequestWorkPermitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyRequestWorkPermitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyRequestWorkPermitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyActionableWorkPermitCompletedEventHandler(object sender, Fetch_MyActionableWorkPermitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyActionableWorkPermitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyActionableWorkPermitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_DashboardCountCompletedEventHandler(object sender, Fetch_DashboardCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_DashboardCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_DashboardCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_GatePassConfigurationCompletedEventHandler(object sender, Delete_GatePassConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_GatePassConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_GatePassConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_WorkPermitConfigurationCompletedEventHandler(object sender, Update_WorkPermitConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_WorkPermitConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_WorkPermitConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_WorkPermitSavedConfigurationCompletedEventHandler(object sender, Bind_WorkPermitSavedConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_WorkPermitSavedConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_WorkPermitSavedConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_WorkPermit_MISCompletedEventHandler(object sender, Fetch_WorkPermit_MISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_WorkPermit_MISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_WorkPermit_MISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_WPConfigurationCompletedEventHandler(object sender, Delete_WPConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_WPConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_WPConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Chk_AnswerCompletedEventHandler(object sender, Fetch_Chk_AnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Chk_AnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Chk_AnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_ChecklistConfigurationCompletedEventHandler(object sender, Update_ChecklistConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_ChecklistConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_ChecklistConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_ChecklistConfigurationCompletedEventHandler(object sender, Insert_ChecklistConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_ChecklistConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_ChecklistConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_ChecklistConfigurationCompletedEventHandler(object sender, Bind_ChecklistConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_ChecklistConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_ChecklistConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyChecklistCompletedEventHandler(object sender, Fetch_MyChecklistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyChecklistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyChecklistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_CHKConfigurationCompletedEventHandler(object sender, Delete_CHKConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_CHKConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_CHKConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyChecklistReportListCompletedEventHandler(object sender, Fetch_MyChecklistReportListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyChecklistReportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyChecklistReportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_My_Department_ChecklistsCompletedEventHandler(object sender, Fetch_My_Department_ChecklistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_My_Department_ChecklistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_My_Department_ChecklistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyChecklistsCompletedEventHandler(object sender, Fetch_MyChecklistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyChecklistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyChecklistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Checklist_ReportCompletedEventHandler(object sender, Fetch_Checklist_ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Checklist_ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Checklist_ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Checklist_Consolidated_ReportCompletedEventHandler(object sender, Fetch_Checklist_Consolidated_ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Checklist_Consolidated_ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Checklist_Consolidated_ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Save_Checklist_ScheduleCompletedEventHandler(object sender, Save_Checklist_ScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_Checklist_ScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_Checklist_ScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Save_Checklist_Schedule_NEWCompletedEventHandler(object sender, Save_Checklist_Schedule_NEWCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_Checklist_Schedule_NEWCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_Checklist_Schedule_NEWCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_Update_VMSConfigurationCompletedEventHandler(object sender, Insert_Update_VMSConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_Update_VMSConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_Update_VMSConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_VMSConfigurationCompletedEventHandler(object sender, Fetch_VMSConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_VMSConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_VMSConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_VMSConfigurationCompletedEventHandler(object sender, Bind_VMSConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_VMSConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_VMSConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_VMSRequestListCompletedEventHandler(object sender, Fetch_VMSRequestListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_VMSRequestListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_VMSRequestListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_VMSRequestDetailsCompletedEventHandler(object sender, Bind_VMSRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_VMSRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_VMSRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_VMSRequestCompletedEventHandler(object sender, Insert_VMSRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_VMSRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_VMSRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_VMSFormURLCompletedEventHandler(object sender, Fetch_VMSFormURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_VMSFormURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_VMSFormURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_VMSConfigurationCompletedEventHandler(object sender, Delete_VMSConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_VMSConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_VMSConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_Update_CSMConfigurationCompletedEventHandler(object sender, Insert_Update_CSMConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_Update_CSMConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_Update_CSMConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_CSMConfigurationCompletedEventHandler(object sender, Fetch_CSMConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_CSMConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_CSMConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_CSMConfigurationCompletedEventHandler(object sender, Bind_CSMConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_CSMConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_CSMConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Delete_CSMConfigurationCompletedEventHandler(object sender, Delete_CSMConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_CSMConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_CSMConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_CSMRequestCompletedEventHandler(object sender, Insert_CSMRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_CSMRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_CSMRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_CSMRequestListCompletedEventHandler(object sender, Fetch_CSMRequestListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_CSMRequestListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_CSMRequestListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_CSMRequestDetailsCompletedEventHandler(object sender, Bind_CSMRequestDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_CSMRequestDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_CSMRequestDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_AnswerForAllCompletedEventHandler(object sender, Fetch_AnswerForAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_AnswerForAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_AnswerForAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_User_UserGroupListGPWPCompletedEventHandler(object sender, Fetch_User_UserGroupListGPWPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_User_UserGroupListGPWPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_User_UserGroupListGPWPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_CompanyCompletedEventHandler(object sender, Fetch_CompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_CompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_CompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Error_LogCompletedEventHandler(object sender, Error_LogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Error_LogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Error_LogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Asset_DropDownCompletedEventHandler(object sender, Fetch_Asset_DropDownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Asset_DropDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Asset_DropDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Asset_Vendor_DropDownCompletedEventHandler(object sender, Fetch_Asset_Vendor_DropDownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Asset_Vendor_DropDownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Asset_Vendor_DropDownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ASSET_Insert_AssetTypeCompletedEventHandler(object sender, ASSET_Insert_AssetTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASSET_Insert_AssetTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASSET_Insert_AssetTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ASSET_Insert_AssetCategoryCompletedEventHandler(object sender, ASSET_Insert_AssetCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASSET_Insert_AssetCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASSET_Insert_AssetCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ASSET_INSERT_GRNL_MASTERCompletedEventHandler(object sender, ASSET_INSERT_GRNL_MASTERCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ASSET_INSERT_GRNL_MASTERCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ASSET_INSERT_GRNL_MASTERCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MyAssetCompletedEventHandler(object sender, Fetch_MyAssetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MyAssetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MyAssetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_ASSET_REQUEST_DetailsCompletedEventHandler(object sender, Fetch_ASSET_REQUEST_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_ASSET_REQUEST_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_ASSET_REQUEST_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void INSERT_ASSET_REQUEST_DetailsCompletedEventHandler(object sender, INSERT_ASSET_REQUEST_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INSERT_ASSET_REQUEST_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INSERT_ASSET_REQUEST_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompletedEventHandler(object sender, INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INSERT_ASSET_CUSTOMFIELD_REQUEST_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Dashboard_AdminCompletedEventHandler(object sender, Fetch_Dashboard_AdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Dashboard_AdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Dashboard_AdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Feedback_DetailsCompletedEventHandler(object sender, Fetch_Feedback_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Feedback_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Feedback_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Dashboard_EmployeeCompletedEventHandler(object sender, Fetch_Dashboard_EmployeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Dashboard_EmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Dashboard_EmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Dashboard_RetailerCompletedEventHandler(object sender, Fetch_Dashboard_RetailerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Dashboard_RetailerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Dashboard_RetailerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_License_Module_listCompletedEventHandler(object sender, Fetch_License_Module_listCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_License_Module_listCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_License_Module_listCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SUPPORT_Fetch_CommentsCompletedEventHandler(object sender, SUPPORT_Fetch_CommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUPPORT_Fetch_CommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SUPPORT_Fetch_CommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SUPPORT_Save_Comment_ClientCompletedEventHandler(object sender, SUPPORT_Save_Comment_ClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUPPORT_Save_Comment_ClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SUPPORT_Save_Comment_ClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SUPPORT_View_Request_DetailsCompletedEventHandler(object sender, SUPPORT_View_Request_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUPPORT_View_Request_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SUPPORT_View_Request_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SUPPORT_Save_RequestCompletedEventHandler(object sender, SUPPORT_Save_RequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUPPORT_Save_RequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SUPPORT_Save_RequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SUPPORT_Fetch_RequestsCompletedEventHandler(object sender, SUPPORT_Fetch_RequestsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUPPORT_Fetch_RequestsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SUPPORT_Fetch_RequestsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void INV_ItemStock_CRUDCompletedEventHandler(object sender, INV_ItemStock_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INV_ItemStock_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INV_ItemStock_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void INV_Fetch_Items_ListCompletedEventHandler(object sender, INV_Fetch_Items_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INV_Fetch_Items_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INV_Fetch_Items_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LMS_Vendor_CostCompletedEventHandler(object sender, LMS_Vendor_CostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMS_Vendor_CostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMS_Vendor_CostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LMS_Fetch_Department_TransactionsCompletedEventHandler(object sender, LMS_Fetch_Department_TransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMS_Fetch_Department_TransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMS_Fetch_Department_TransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LMS_Category_MstCompletedEventHandler(object sender, LMS_Category_MstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMS_Category_MstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMS_Category_MstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LMS_SubCategory_MstCompletedEventHandler(object sender, LMS_SubCategory_MstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMS_SubCategory_MstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMS_SubCategory_MstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LMS_Fetch_Vendor_TransactionsCompletedEventHandler(object sender, LMS_Fetch_Vendor_TransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMS_Fetch_Vendor_TransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMS_Fetch_Vendor_TransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LMS_ItemListCompletedEventHandler(object sender, Fetch_LMS_ItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LMS_ItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LMS_ItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LMS_ItemDetails_Dept_TransactionCompletedEventHandler(object sender, Fetch_LMS_ItemDetails_Dept_TransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LMS_ItemDetails_Dept_TransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LMS_ItemDetails_Dept_TransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LMS_Save_Department_TransactionCompletedEventHandler(object sender, LMS_Save_Department_TransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMS_Save_Department_TransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMS_Save_Department_TransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LMS_Save_Vendor_TransactionCompletedEventHandler(object sender, LMS_Save_Vendor_TransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LMS_Save_Vendor_TransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LMS_Save_Vendor_TransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LMS_Dept_Transaction_DetailsCompletedEventHandler(object sender, Fetch_LMS_Dept_Transaction_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LMS_Dept_Transaction_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LMS_Dept_Transaction_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LMS_ItemDetails_Vendor_TransactionCompletedEventHandler(object sender, Fetch_LMS_ItemDetails_Vendor_TransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LMS_ItemDetails_Vendor_TransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LMS_ItemDetails_Vendor_TransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LMS_Vendor_ListCompletedEventHandler(object sender, Fetch_LMS_Vendor_ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LMS_Vendor_ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LMS_Vendor_ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LMS_Vendor_Transaction_DetailsCompletedEventHandler(object sender, Fetch_LMS_Vendor_Transaction_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LMS_Vendor_Transaction_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LMS_Vendor_Transaction_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_InvoicesCompletedEventHandler(object sender, Fetch_InvoicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_InvoicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_InvoicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MenuMaster_CRUDCompletedEventHandler(object sender, MenuMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MenuMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MenuMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CustomReports_RUCompletedEventHandler(object sender, CustomReports_RUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomReports_RUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomReports_RUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserTypeMaster_CRUDCompletedEventHandler(object sender, UserTypeMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserTypeMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserTypeMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DepartmentMaster_CRUDCompletedEventHandler(object sender, DepartmentMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DepartmentMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DepartmentMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_ZoneCompletedEventHandler(object sender, Fetch_ZoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_ZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_ZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LocationCompletedEventHandler(object sender, Fetch_LocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Sub_LocationCompletedEventHandler(object sender, Fetch_Sub_LocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Sub_LocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Sub_LocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_DepartmentCompletedEventHandler(object sender, Fetch_DepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_DepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_DepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_User_TypeCompletedEventHandler(object sender, Fetch_User_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_User_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_User_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserMaster_CRUDCompletedEventHandler(object sender, UserMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Email_Verification_MailCompletedEventHandler(object sender, Email_Verification_MailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Email_Verification_MailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Email_Verification_MailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginUserCompletedEventHandler(object sender, LoginUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PriorityMaster_CRUDCompletedEventHandler(object sender, PriorityMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PriorityMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PriorityMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FrequencyMaster_CRUDCompletedEventHandler(object sender, FrequencyMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FrequencyMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FrequencyMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ZoneMaster_CRUDCompletedEventHandler(object sender, ZoneMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ZoneMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ZoneMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LocationMaster_CRUDCompletedEventHandler(object sender, LocationMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LocationMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LocationMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void INV_ItemMaster_CRUDCompletedEventHandler(object sender, INV_ItemMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class INV_ItemMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal INV_ItemMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubLocationMaster_CRUDCompletedEventHandler(object sender, SubLocationMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubLocationMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubLocationMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserGroupMaster_CRUDCompletedEventHandler(object sender, UserGroupMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGroupMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGroupMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FetchUserGrpCompletedEventHandler(object sender, FetchUserGrpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchUserGrpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchUserGrpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_CategorySubCategoryCompletedEventHandler(object sender, Fetch_CategorySubCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_CategorySubCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_CategorySubCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void WorkflowMaster_CRUDCompletedEventHandler(object sender, WorkflowMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkflowMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkflowMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_User_UserGroupListCompletedEventHandler(object sender, Fetch_User_UserGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_User_UserGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_User_UserGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CategoryMaster_CRUDCompletedEventHandler(object sender, CategoryMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CategoryMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CategoryMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RetailerPunch_CRCompletedEventHandler(object sender, RetailerPunch_CRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetailerPunch_CRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetailerPunch_CRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_CRUD_Vendor_MstCompletedEventHandler(object sender, Fetch_CRUD_Vendor_MstCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_CRUD_Vendor_MstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_CRUD_Vendor_MstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SubCategoryMaster_CRUDCompletedEventHandler(object sender, SubCategoryMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubCategoryMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubCategoryMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void BindLocationDetailsCompletedEventHandler(object sender, BindLocationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BindLocationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BindLocationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_LocationTreeCompletedEventHandler(object sender, Fetch_LocationTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_LocationTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_LocationTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Ticket_WorkflowCompletedEventHandler(object sender, Fetch_Ticket_WorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Ticket_WorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Ticket_WorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_Ticket_DetailsCompletedEventHandler(object sender, Insert_Ticket_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_Ticket_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_Ticket_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Ticket_MyActionableCompletedEventHandler(object sender, Fetch_Ticket_MyActionableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Ticket_MyActionableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Ticket_MyActionableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_Ticket_MyActionable_DetailsCompletedEventHandler(object sender, Fetch_Ticket_MyActionable_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_Ticket_MyActionable_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_Ticket_MyActionable_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accept_TicketCompletedEventHandler(object sender, Accept_TicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accept_TicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accept_TicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_CTT_ReportCompletedEventHandler(object sender, Fetch_CTT_ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_CTT_ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_CTT_ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Bind_Ticket_DetailsCompletedEventHandler(object sender, Bind_Ticket_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Bind_Ticket_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Bind_Ticket_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Get_ChartDataCompletedEventHandler(object sender, Get_ChartDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ChartDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ChartDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Employee_CRUDCompletedEventHandler(object sender, Employee_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Employee_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Employee_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void fetchStoreCompletedEventHandler(object sender, fetchStoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class fetchStoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal fetchStoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Retailer_CRUDCompletedEventHandler(object sender, Retailer_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retailer_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Retailer_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Event_InsertCompletedEventHandler(object sender, Event_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Event_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Event_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EventDetails_CRUDCompletedEventHandler(object sender, EventDetails_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EventDetails_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EventDetails_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void bindEventDetailsCompletedEventHandler(object sender, bindEventDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bindEventDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bindEventDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Insert_FeedbackFormCompletedEventHandler(object sender, Insert_FeedbackFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_FeedbackFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_FeedbackFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Get_CustomerDetailsCompletedEventHandler(object sender, Get_CustomerDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Get_EventQuestionsCompletedEventHandler(object sender, Get_EventQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_EventQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_EventQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Event_QuestionIUCompletedEventHandler(object sender, Event_QuestionIUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Event_QuestionIUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Event_QuestionIUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MIS_ReportCompletedEventHandler(object sender, Fetch_MIS_ReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MIS_ReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MIS_ReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Event_UpdateCompletedEventHandler(object sender, Event_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Event_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Event_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEventListCompletedEventHandler(object sender, GetEventListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Fetch_MIS_Report_ExcelCompletedEventHandler(object sender, Fetch_MIS_Report_ExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fetch_MIS_Report_ExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Fetch_MIS_Report_ExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ImportRetailerCompletedEventHandler(object sender, ImportRetailerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportRetailerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportRetailerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddChecklistMaster_CRUDCompletedEventHandler(object sender, AddChecklistMaster_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddChecklistMaster_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddChecklistMaster_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChecklistPoint_CRUDCompletedEventHandler(object sender, ChecklistPoint_CRUDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecklistPoint_CRUDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecklistPoint_CRUDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChecklistRequestCompletedEventHandler(object sender, ChecklistRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChecklistRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChecklistRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Update_ChecklistPointsCompletedEventHandler(object sender, Update_ChecklistPointsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_ChecklistPointsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_ChecklistPointsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591