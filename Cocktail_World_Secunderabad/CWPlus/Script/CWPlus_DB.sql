update tbl_clientmaster set version = 3
GO

declare @tempMenu table
(
	[MenuId] [int] NOT NULL,
	[ParentMenuId] [int] NULL,
	[MenuDesc] [varchar](500)  NULL,
	[ToolTip] [varchar](500)  NULL,
	[Priority] [int] NULL,
	[Hide] [char](1)  NULL,
	[IsDisable] [varchar](10)  NULL
)
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (1,Null,'Master','Master',1,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (2,1,'Category','Category',3,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (3,1,'Supplier','Supplier',10,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (4,1,'Size','Size',4,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (6,1,'Categorytax','CategoryTax',6,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (7,1,'Brand','Brand',5,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (8,1,'Opening Stock','Opening Stock',6,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (9,1,'Permit Type','Permit Type',11,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (10,1,'Permit Holder','Permit Holder',12,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (12,1,'Assign Brand Code','Assign Brand Code',8,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (13,1,'User Menu Rights','User Menu Rights',18,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (14,1,'Cocktail','Cocktail',7,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (15,1,'Assign Cocktail Code','Assign Cocktail Code',9,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (16,Null,'Transaction','Transaction',18,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (17,16,'Purchase','Purchase',19,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (19,1,'License','License',2,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (20,1,'BillBook','BillBook',13,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (22,1,'InterfaceFileSetup','InterfaceFileSetup',14,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (23,16,'AutoBilling','AutoBilling',22,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (25,1,'consumption','consumption',16,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (26,Null,'Reports','Reports',26,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (27,26,'BrandList','BrandList',30,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (28,16,'Transfer','Transfer List',20,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (29,16,'Sale','Sale List',21,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (30,1,'Sub Category','Sub Category',15,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (31,Null,'Controls','Controls',31,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (32,31,'Parameter','Parameter',32,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (33,16,'Interface File','Interface File',23,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (34,58,'FLR3','FLR3',34,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (35,58,'FLR4','FLR4',35,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (36,58,'FLR6','FLR6',36,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (37,58,'Chatai','Chatai',37,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (38,26,'Purchase Report','Purchase',31,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (39,26,'Sale Report','Sale',32,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (40,31,'Department','Department',40,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (41,31,'Quick Variance','Quick Variance',41,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (42,16,'Quick Excise','Quick Excise',27,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (43,31,'Schedule Variance','Schedule Variance',43,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (44,31,'Merge Period','Merge Period',44,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (45,26,'Brand Code','Brand Code',33,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (46,26,'Cocktail Report','Cocktail Report',34,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (47,26,'Base Quantity','Base Quantity',35,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (48,26,'Cocktail Code','Cocktail Code',36,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (49,31,'Menu Engineering','Menu Engineering',49,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (50,16,'Wash Day','Wash Day',26,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (51,26,'Andhra Pradesh','Ap Report',28,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (52,26,'Karnataka','Banglore Report',29,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (53,1,'Import Master','Import Master',17,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (54,26,'Cocktail Sale','Cocktail Sale',37,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (55,51,'Form-7B(Daily)','Ap Report',55,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (56,58,'FLR1A','FLR1A',56,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (57,52,'Brandwise','BangloreReport',57,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (58,26,'Maharashtra','Maharashtra',27,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (59,58,'FLR9','FLR9',57,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (60,16,'LicenseTransactionDetails','LicenseTransactionDetails',28,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (61,16,'LicenseTransfer','LicenseTransfer',29,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (62,26,'Delhi','Delhi',30,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (63,62,'Brandwise(Daily)','Brandwise(Daily)',31,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (64,51,'Form R-6B(Daily)','Form R-6B(Daily)',62,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (65,26,'Transfer Report','Transfer Report',63,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (66,1,'General Setup','General Setup',64,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (67,31,'Manage Variance','Manage Variance',65,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (68,58,'BulkLiterReport','BulkLiterReport',67,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (69,26,'Brand Opening','Brand Opening',68,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (70,31,'Manage Controls','Manage Controls',66,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (71,1,'Assign MMS Code','Assign MMS Code',9,'1','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (72,26,'Optimum Quantity','Optimum Quantity',99,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (73,16,'Purchase Interface','Purchase Interface',24,'1','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (74,16,'Transfer Interface','Transfer Interface',25,'1','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (75,52,'Outlet Stock','Outlet Stock',26,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (76,52,'Monthly','Monthly',27,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (77,52,'Bulk Litre','Bulk Litre',28,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (78,26,'Non-moving','Non-moving',100,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (79,26,'Slow-moving','Slow-moving',100,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (80,26,'Cost valuation','Cost valuation',100,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (81,1,'One Day Permit','One Day Permit',32,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (82,16,'Assign One Day Permit','Assign One Day Permit',33,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (83,58,'FLR3 (Rack)','FLR3 (Rack)',34,'1','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (84,58,'FLR3 Chatai (Rack)','FLR3 Chatai (Rack)',35,'1','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (85,58,'FLR4 (Rack)','FLR4 (Rack)',36,'1','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (86,1,'Migration from CW2.0','Migration from CW2.0',37,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (87,26,'Cashmemo','Cashmemo',38,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (88,Null,'Eval Pack Reports','Eval Pack Reports',39,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (89,88,'DCC Report','DCC Report',40,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (90,88,'Void Discount Summary','Void DiscountSummary',41,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (91,88,'A&G Entertainment Summary','A&G Entertainment Summary',42,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (92,88,'Discount Summary Day Wise','Discount Summary Day Wise',43,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (93,88,'Beverage Reconciliation','Beverage Reconciliation',44,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (94,88,'Officer Meal','Officer Meal',45,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (95,88,'View Data','View Data',46,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (96,88,'Cost vs Sale','Cost vs Sale',47,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (97,88,'Food Cost Report','Food Cost Report',48,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (98,26,'Brandwise(Monthly)','Brandwise(Monthly)',49,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (99,26,'Consumption History','Consumption History',50,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (100,26,'Brand Summary','Brand Summary',51,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (101,26,'Punjab','Punjab',30,'0','')
Insert into @tempMenu(MenuId,ParentMenuId,MenuDesc,ToolTip,Priority,Hide,IsDisable) Values (102,101,'Brand Summary','Brand Summary',52,'0','')

declare @menuid int
set @menuid = 0

while(select count(menuid) from @tempMenu) > 0
begin
	select top 1 @menuid = menuid from @tempMenu
	
	if exists(select menuid from tbl_menu where menuid = @menuid)
	begin
		update m
		set m.ParentMenuId = t.ParentMenuId,
		m.MenuDesc = t.MenuDesc,
		m.ToolTip = t.ToolTip,  
		m.Priority = t.Priority,
		m.Hide = t.Hide,  
		m.IsDisable = t.IsDisable
		from @tempMenu t
		join tbl_menu m on m.menuid = t.menuid
		where m.menuid = @menuid
	end
	else
	begin
		insert into tbl_menu
		(MenuId, ParentMenuId, MenuDesc,ToolTip,  Priority,Hide,  IsDisable) 
		select 
		MenuId, ParentMenuId, MenuDesc,ToolTip,  Priority,Hide,  IsDisable 
		from @tempMenu where MenuId = @menuid
	end
	
	delete from @tempMenu where menuid = @menuid
end
GO

truncate table [Tbl_CocktailReport]
GO
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (1,'FLR3','Spr_FetchFlr3Report',34,'grpCocktailReport','FLR3Sub',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (2,'FLIVCatg','Spr_FetchFlr4Report',35,'grpChataiReportmodify','',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (3,'FLR6','SPR_fetchFLR6',36,'grpCocktailReport','FLR6Brief#FLR6Sub',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (4,'Chatai','Spr_FetchFlr3ChataiReport',37,'grpChataiReportmodify','',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (5,'Purchase','Spr_purchaseReport',38,'grpPurchaseReport','',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (6,'Sale','Spr_SaleReport',39,'grpSaleReport','',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (7,'apreport','Spr_APFetchBrandWiseMonthly',55,'grpApReport','',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (8,'banglorereport','Spr_BangaloreFetchBrandWiseMultiLicense',57,'grpApReport','',1,1,1,1,1,1)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (9,'DelhiReport','Spr_APFetchBrandWiseMonthly',63,'grpApReport','',1,1,1,1,1,0)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (10,'OutletReport','Spr_BangaloreFetchBrandWise',75,'grpApReport','',1,1,1,1,1,1)
Go
Insert into [Tbl_CocktailReport](ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine) Values (11,'ap6Breport','Spr_APFetchBrandWiseMonthly',64,'grpApReport','',1,1,1,1,1,0)
Go

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Tbl_MMSCode') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN

	CREATE TABLE [Tbl_MMSCode](
		[MMSCodeID] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
		[BrandID] [numeric](18, 0) NULL,
		[SizeID] [numeric](18, 0) NULL,
		[TypeID] [int] NULL,
		[LicenseID] [numeric](18, 0) NULL,
		[Brandcode] [numeric](18, 0) NULL,
		[Oprc] [varchar](50)  NULL,
		[DTC] [datetime] NULL,
		[DTM] [datetime] NULL,
		[oprm] [varchar](50)  NULL,
	 CONSTRAINT [PK_Tbl_MMSCode_1] PRIMARY KEY CLUSTERED 
	(
		[MMSCodeID] ASC
	)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
	) ON [PRIMARY]


	ALTER TABLE [Tbl_MMSCode]  WITH CHECK ADD  CONSTRAINT [FK_Tbl_MMSCode_Tbl_MMSCode] FOREIGN KEY([MMSCodeID])
	REFERENCES [Tbl_MMSCode] ([MMSCodeID])

	ALTER TABLE [Tbl_MMSCode] CHECK CONSTRAINT [FK_Tbl_MMSCode_Tbl_MMSCode]

End
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Tbl_InterfaceFilePurchaseSetup') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN

	CREATE TABLE [dbo].[Tbl_InterfaceFilePurchaseSetup](
		[FilePath] [varchar](500)  NULL,
		[BackupFilePath] [varchar](500)  NULL,
		[FilePrefix] [varchar](50)  NULL,
		[FileExtension] [varchar](50)  NULL,
		[Oprc] [varchar](100)  NULL,
		[Dtc] [datetime] NULL,
		[Oprm] [varchar](100)  NULL,
		[Dtm] [datetime] NULL
	) ON [PRIMARY]

End
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Tbl_InterfaceFileTransferSetUp') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN

	CREATE TABLE [Tbl_InterfaceFileTransferSetUp](
		[FilePath] [varchar](500)  NULL,
		[BackupFilePath] [varchar](500)  NULL,
		[FilePrefix] [varchar](50)  NULL,
		[FileExtension] [varchar](50)  NULL,
		[Oprc] [varchar](100)  NULL,
		[Dtc] [datetime] NULL,
		[Oprm] [varchar](100)  NULL,
		[Dtm] [datetime] NULL
	) ON [PRIMARY]

End
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Tbl_CatgPriceSequence') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN

	CREATE TABLE [Tbl_CatgPriceSequence](
		[CategoryID] [numeric](18, 0) NULL,
		[Bottle] [int] NULL,
		[Speg] [int] NULL,
		[Lpeg] [int] NULL,
		[Oprc] [varchar](100)  NULL,
		[Oprm] [varchar](100)  NULL,
		[Dtc] [datetime] NULL,
		[Dtm] [datetime] NULL
	)

END
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Tbl_CocktailAfterMigration') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN

	create table Tbl_CocktailAfterMigration
	(
		Licenseid numeric(18,0),
		Brandopeningid numeric(18,0),
		Qty numeric(18,0)
	)

END
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Tbl_OneDayPermitMst') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	CREATE TABLE [dbo].[Tbl_OneDayPermitMst](
		[OneDayPermitId] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
		[FromPermitNo] [int] NOT NULL,
		[ToPermitNo] [int] NOT NULL,
		[CurrentPermitNo] [int] NOT NULL,
		[Oprc] [varchar](100)  NOT NULL,
		[Dtc] [datetime] NOT NULL,
		[Oprm] [varchar](100) NULL,
		[Dtm] [datetime] NULL,
	 CONSTRAINT [PK_Tbl_OneDayPermitMst] PRIMARY KEY CLUSTERED 
	(
		[OneDayPermitId] ASC
	)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
	) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'MailSetup') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	Create Table MailSetup(
	
		SetupID int primary key,
		SmtpHost varchar(50),
		smtpuser varchar(100),
		smtppass varchar(50),
		smtpport int,
		usessl bit,
		smtpfrom varchar(100),
		smtpto varchar(500)
	)
	insert into MailSetup(SetupID,SmtpHost,smtpuser,smtppass,smtpport,usessl,smtpfrom,smtpto) 
	Values(1,'','','','','','','')

END
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[tbl_temReport]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
Drop table [dbo].[tbl_temReport]
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[tbl_temReport]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN

	CREATE TABLE [dbo].[tbl_temReport](
		[Brandid] [numeric](18, 0) NOT NULL,
		[categorydesc] [char](100)  NULL,
		[branddesc] [char](100)  NULL,
		[N_op1000] [numeric](18, 0) NULL,
		[D_op1000] [numeric](18, 0) NULL,
		[N_op500] [numeric](18, 0) NULL,
		[D_op500] [numeric](18, 0) NULL,
		[N_op750] [numeric](18, 0) NULL,
		[D_op750] [numeric](18, 0) NULL,
		[N_op650] [numeric](18, 0) NULL,
		[D_op650] [numeric](18, 0) NULL,
		[N_op375] [numeric](18, 0) NULL,
		[D_op375] [numeric](18, 0) NULL,
		[N_op330] [numeric](18, 0) NULL,
		[D_op330] [numeric](18, 0) NULL,
		[N_op325] [numeric](18, 0) NULL,
		[D_op325] [numeric](18, 0) NULL,
		[N_op180] [numeric](18, 0) NULL,
		[D_op180] [numeric](18, 0) NULL,
		[N_op60] [numeric](18, 0) NULL,
		[D_op60] [numeric](18, 0) NULL,
		[N_pur1000] [numeric](18, 0) NULL,
		[D_pur1000] [numeric](18, 0) NULL,
		[N_pur500] [numeric](18, 0) NULL,
		[D_pur500] [numeric](18, 0) NULL,
		[N_pur750] [numeric](18, 0) NULL,
		[D_pur750] [numeric](18, 0) NULL,
		[N_pur650] [numeric](18, 0) NULL,
		[D_pur650] [numeric](18, 0) NULL,
		[N_pur375] [numeric](18, 0) NULL,
		[D_pur375] [numeric](18, 0) NULL,
		[N_pur330] [numeric](18, 0) NULL,
		[D_pur330] [numeric](18, 0) NULL,
		[N_pur325] [numeric](18, 0) NULL,
		[D_pur325] [numeric](18, 0) NULL,
		[N_pur180] [numeric](18, 0) NULL,
		[D_pur180] [numeric](18, 0) NULL,
		[N_pur60] [numeric](18, 0) NULL,
		[D_pur60] [numeric](18, 0) NULL,
		[N_sal1000] [numeric](18, 0) NULL,
		[D_sal1000] [numeric](18, 0) NULL,
		[N_sal500] [numeric](18, 0) NULL,
		[D_sal500] [numeric](18, 0) NULL,
		[N_sal750] [numeric](18, 0) NULL,
		[D_sal750] [numeric](18, 0) NULL,
		[N_sal650] [numeric](18, 0) NULL,
		[D_sal650] [numeric](18, 0) NULL,
		[N_sal375] [numeric](18, 0) NULL,
		[D_sal375] [numeric](18, 0) NULL,
		[N_sal330] [numeric](18, 0) NULL,
		[D_sal330] [numeric](18, 0) NULL,
		[N_sal325] [numeric](18, 0) NULL,
		[D_sal325] [numeric](18, 0) NULL,
		[N_sal180] [numeric](18, 0) NULL,
		[D_sal180] [numeric](18, 0) NULL,
		[N_sal60] [numeric](18, 0) NULL,
		[D_sal60] [numeric](18, 0) NULL,
		[N_clo1000] [numeric](18, 0) NULL,
		[D_clo1000] [numeric](18, 0) NULL,
		[N_clo500] [numeric](18, 0) NULL,
		[D_clo500] [numeric](18, 0) NULL,
		[N_clo750] [numeric](18, 0) NULL,
		[D_clo750] [numeric](18, 0) NULL,
		[N_clo650] [numeric](18, 0) NULL,
		[D_clo650] [numeric](18, 0) NULL,
		[D_clo375] [numeric](18, 0) NULL,
		[N_clo375] [numeric](18, 0) NULL,
		[D_clo330] [numeric](18, 0) NULL,
		[N_clo330] [numeric](18, 0) NULL,
		[N_clo325] [numeric](18, 0) NULL,
		[D_clo325] [numeric](18, 0) NULL,
		[N_clo180] [numeric](18, 0) NULL,
		[D_clo180] [numeric](18, 0) NULL,
		[D_clo60] [numeric](18, 0) NULL,
		[N_clo60] [numeric](18, 0) NULL,
		[isblank] [bit] NULL CONSTRAINT [DF__tbl_temRe__isbla__0425A276]  DEFAULT ((1)),
		[fromdate] [datetime] NOT NULL,
		[tpno] [varchar](2000)  NULL,
	 CONSTRAINT [PK_tbl_temReport] PRIMARY KEY CLUSTERED 
	(
		[Brandid] ASC,
		[fromdate] ASC
	)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
	) ON [PRIMARY]


END
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[tbl_Report]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
Drop table [dbo].[tbl_Report]
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[tbl_Report]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	CREATE TABLE [dbo].[tbl_Report](
		[Brandid] [numeric](18, 0) NOT NULL,
		[categorydesc] [char](100)  NULL,
		[branddesc] [char](100)  NULL,
		[op1000] [varchar](1000)  NULL,
		[op500] [varchar](1000)  NULL,
		[op750] [varchar](1000)  NULL,
		[op650] [varchar](1000)  NULL,
		[op375] [varchar](1000)  NULL,
		[op330] [varchar](1000)  NULL,
		[op325] [varchar](1000)  NULL,
		[op180] [varchar](1000)  NULL,
		[op60] [varchar](1000)  NULL,
		[pur1000] [varchar](1000)  NULL,
		[pur500] [varchar](1000)  NULL,
		[pur750] [varchar](1000)  NULL,
		[pur650] [varchar](1000)  NULL,
		[pur375] [varchar](1000)  NULL,
		[pur330] [varchar](1000)  NULL,
		[pur325] [varchar](1000)  NULL,
		[pur180] [varchar](1000)  NULL,
		[pur60] [varchar](1000)  NULL,
		[sal1000] [varchar](1000)  NULL,
		[sal500] [varchar](1000)  NULL,
		[sal750] [varchar](1000)  NULL,
		[sal650] [varchar](1000)  NULL,
		[sal375] [varchar](1000)  NULL,
		[sal330] [varchar](1000)  NULL,
		[sal325] [varchar](1000)  NULL,
		[sal180] [varchar](1000)  NULL,
		[sal60] [varchar](1000)  NULL,
		[clo1000] [varchar](1000)  NULL,
		[clo500] [varchar](1000)  NULL,
		[clo750] [varchar](1000)  NULL,
		[clo650] [varchar](1000)  NULL,
		[clo375] [varchar](1000)  NULL,
		[clo330] [varchar](1000)  NULL,
		[clo325] [varchar](1000)  NULL,
		[clo180] [varchar](1000)  NULL,
		[clo60] [varchar](1000)  NULL,
		[fromdate] [datetime] NOT NULL,
		[tpno] [varchar](50)  NULL,
	 CONSTRAINT [PK_tbl_Report] PRIMARY KEY CLUSTERED 
	(
		[Brandid] ASC,
		[fromdate] ASC
	)WITH (PAD_INDEX  = OFF, IGNORE_DUP_KEY = OFF) ON [PRIMARY]
	) ON [PRIMARY]
END
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[tbl_flrIV]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
Drop table [dbo].[tbl_flrIV]
GO

IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[tbl_flrIV]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	CREATE TABLE [dbo].[tbl_flrIV](
		[category] [char](50)  NULL,
		[size] [char](50)  NULL,
		[particular] [int] NULL,
		[alias] [varchar](50)  NULL,
		[totalsize] [varchar](100)  NULL,
		[Licenseno] [varchar](50)  NULL,
		[Licensename] [char](50)  NULL,
		[reportsize] [varchar](100)  NULL,
		[iden] [numeric](36, 0) IDENTITY(1,1) NOT NULL,
		[ForDate] [datetime] NULL,
		[CategorySizeLinkID] [numeric](18, 0) NULL,
		[tpno] [varchar](50)  NULL
	) ON [PRIMARY]
END
GO


IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Tbl_GeneralSetUp]') AND TYPE = 'U')
Begin
	--Create Table GenSetUp
	CREATE TABLE [dbo].[Tbl_GeneralSetUp](
		[ControlID] [numeric](18, 0) IDENTITY(1,1) NOT NULL,
		[FLIVAddress] [bit] NOT NULL,
		[oprc] [varchar](50) NOT NULL,
		[oprm] [varchar](50) NULL,
		[dtc] [datetime] NOT NULL,
		[dtm] [datetime] NULL,
	 CONSTRAINT [PK_Tbl_GeneralSetUp] PRIMARY KEY CLUSTERED 
	(
		[ControlID] ASC
	)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
	) ON [PRIMARY]
	
	Insert into Tbl_GeneralSetUp (FLIVAddress, oprc, dtc) values (0, 'admin', getdate())
End
GO

if exists(select id from sysobjects where name = 'FK_Tbl_APBrandwise_tbl_BrandOpening')
begin
	alter table Tbl_APBrandwise drop constraint FK_Tbl_APBrandwise_tbl_BrandOpening
end

if exists(select id from sysobjects where name = 'FK_Tbl_APBrandwiseMonthly_tbl_BrandOpening')
begin
	alter table Tbl_APBrandwiseMonthly drop constraint FK_Tbl_APBrandwiseMonthly_tbl_BrandOpening
end

update tbl_menu set isdisable = '' where menuid <> 19
GO
update tbl_cocktailreport set reportname = 'banglorereport' where reportid = 8
GO



ALTER TABLE tbl_fifoRecords alter column TrnBatch varchar(50)
alter table Tbl_TransferDetailsMst alter column spegqty numeric(18,3)
alter table Tbl_TransferDetailsMst alter column bottleqty numeric(18,3)
alter table tbl_fifoRecords alter column sPegQty numeric(18,3)
alter table tbl_fifoRecords alter column BottleQty numeric(18,3)

alter table Tbl_FifoRecords alter column Noofbox numeric(18,2)
alter table Tbl_FifoRecords alter column TrnBox numeric(18,2)
alter table Tbl_Purchasedetail alter column Noofbox numeric(18,2)
alter table Tbl_TransferDetailsMst alter column Box varchar(10)

GO

if not exists(select * from sys.columns where Name = N'LicenseId' and Object_ID = Object_ID(N'Tbl_OneDayPermitMst'))    
begin
	alter table Tbl_OneDayPermitMst add LicenseId numeric(18, 0)
	
	ALTER TABLE [dbo].[Tbl_OneDayPermitMst]  WITH CHECK ADD  CONSTRAINT [FK_Tbl_OneDayPermitMst_Tbl_License] FOREIGN KEY([LicenseId])
	REFERENCES [dbo].[Tbl_License] ([LicenseID])
	
	ALTER TABLE [dbo].[Tbl_OneDayPermitMst] CHECK CONSTRAINT [FK_Tbl_OneDayPermitMst_Tbl_License]
end

if not exists(select * from sys.columns where Name = N'IsRack' and Object_ID = Object_ID(N'tbl_License'))    
begin
	alter table tbl_License add IsRack bit
end

if not exists(select * from sys.columns where Name = N'ForFL3ID' and Object_ID = Object_ID(N'tbl_License'))    
begin
	alter table tbl_License add ForFL3ID numeric(18,0)
end

if not exists(select * from sys.columns where Name = N'MasterUnitBottleRate' and Object_ID = Object_ID(N'tbl_salecocktaildetail'))    
begin
	alter table tbl_salecocktaildetail add MasterUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'PurchaseUnitBottleRate' and Object_ID = Object_ID(N'tbl_salecocktaildetail'))    
begin
	alter table tbl_salecocktaildetail add PurchaseUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'suppliercode' and Object_ID = Object_ID(N'tbl_supplier'))    
begin
	alter table tbl_supplier add suppliercode varchar(20)
end

if not exists(select * from sys.columns where Name = N'ReorderLevel' and Object_ID = Object_ID(N'tbl_BrandOpening'))    
begin
	alter table tbl_BrandOpening add ReorderLevel numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'OptimumLevel' and Object_ID = Object_ID(N'tbl_BrandOpening'))    
begin
	alter table tbl_BrandOpening add OptimumLevel numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'PermitHolderNumber' and Object_ID = Object_ID(N'tbl_salepermit'))    
begin
	alter table tbl_salepermit add PermitHolderNumber varchar(100)
end

if not exists(select * from sys.columns where Name = N'FLIII' and Object_ID = Object_ID(N'Tbl_APBrandwiseMonthly'))    
begin
	alter table Tbl_APBrandwiseMonthly add FLIII numeric(18,0)
end

if not exists(select * from sys.columns where Name = N'FLIV' and Object_ID = Object_ID(N'Tbl_APBrandwiseMonthly'))    
begin
	alter table Tbl_APBrandwiseMonthly add FLIV numeric(18,0)
end

if not exists(select * from sys.columns where Name = N'FLIII' and Object_ID = Object_ID(N'Tbl_APBrandwise'))    
begin
	alter table Tbl_APBrandwise add FLIII numeric(18,0)
end

if not exists(select * from sys.columns where Name = N'FLIV' and Object_ID = Object_ID(N'Tbl_APBrandwise'))    
begin
	alter table Tbl_APBrandwise add FLIV numeric(18,0)
end

if not exists(select * from sys.columns where Name = N'FLIVAddress' and Object_ID = Object_ID(N'Tbl_TransferHeadMst'))    
begin
	alter table Tbl_TransferHeadMst add FLIVAddress varchar(500)
end

if not exists(select * from sys.columns where Name = N'FIFORecordsId' and Object_ID = Object_ID(N'Tbl_TransferDetailsMst'))    
begin
    alter table Tbl_TransferDetailsMst add FIFORecordsId numeric(18,0)
end

if not exists(select * from sys.columns where Name = N'MasterUnitBottleRate' and Object_ID = Object_ID(N'tbl_brandopening'))    
begin
    alter table tbl_brandopening add MasterUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'MasterUnitBottleRate' and Object_ID = Object_ID(N'tbl_purchasedetail'))    
begin
    alter table tbl_purchasedetail add MasterUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'PurchaseUnitBottleRate' and Object_ID = Object_ID(N'tbl_purchasedetail'))    
begin
    alter table tbl_purchasedetail add PurchaseUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'MasterUnitBottleRate' and Object_ID = Object_ID(N'Tbl_TransferDetailsMst'))    
begin
    alter table Tbl_TransferDetailsMst add MasterUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'PurchaseUnitBottleRate' and Object_ID = Object_ID(N'Tbl_TransferDetailsMst'))    
begin
    alter table Tbl_TransferDetailsMst add PurchaseUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'MasterUnitBottleRate' and Object_ID = Object_ID(N'tbl_fiforecords'))    
begin
    alter table tbl_fiforecords add MasterUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'PurchaseUnitBottleRate' and Object_ID = Object_ID(N'tbl_fiforecords'))    
begin
    alter table tbl_fiforecords add PurchaseUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'MasterUnitBottleRate' and Object_ID = Object_ID(N'tbl_saledetail'))    
begin
    alter table tbl_saledetail add MasterUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'PurchaseUnitBottleRate' and Object_ID = Object_ID(N'tbl_saledetail'))    
begin
    alter table tbl_saledetail add PurchaseUnitBottleRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'MasterPurRate' and Object_ID = Object_ID(N'tbl_purchasedetail'))    
begin
    alter table tbl_purchasedetail add MasterPurRate numeric(14,2)
end

if not exists(select * from sys.columns where Name = N'CostType' and Object_ID = Object_ID(N'tbl_saledetail'))    
begin
    alter table tbl_saledetail add CostType char(1)
end

Truncate table [Tbl_Import_ExcelMaster]
GO

INSERT [dbo].[Tbl_Import_ExcelMaster] ([MasterDesc], [ExportProcName], [ProcName], [XmlAttr]) VALUES (N'Brand', N'SPR_IMPORT_ExportBrand', N'Spr_Import_Brand', N'Category,BrandDesc,ShortName,Strength,PurRatePeg,subcategory,Size,BoxQty,PurchaseRate')
INSERT [dbo].[Tbl_Import_ExcelMaster] ([MasterDesc], [ExportProcName], [ProcName], [XmlAttr]) VALUES (N'Supplier', N'Spr_ExportSupplier', N'Spr_Import_Supplier', N'SupplierName,Address,City,Pincode,Telephone,Email')
INSERT [dbo].[Tbl_Import_ExcelMaster] ([MasterDesc], [ExportProcName], [ProcName], [XmlAttr]) VALUES (N'Brand Opening', N'Spr_Import_BrandOpeningExport', N'Spr_Import_BrandOpening', N'Category,Brand,CategorySizeLinkID,Size,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo')
INSERT [dbo].[Tbl_Import_ExcelMaster] ([MasterDesc], [ExportProcName], [ProcName], [XmlAttr]) VALUES (N'BrandCode', N'Spr_Import_ExportBrandCode', N'Spr_Import_BrandCode', N'Category,Brand,Size,Speg,Bottle,lPeg')
INSERT [dbo].[Tbl_Import_ExcelMaster] ([MasterDesc], [ExportProcName], [ProcName], [XmlAttr]) VALUES (N'CocktailCode', N'Spr_Import_ExportCocktailCode', N'Spr_Import_CocktailCode', N'Cocktail,CocktailCode')
INSERT [dbo].[Tbl_Import_ExcelMaster] ([MasterDesc], [ExportProcName], [ProcName], [XmlAttr]) VALUES (N'Cocktail', N'Spr_Import_ExportCocktail', N'Spr_Import_Cocktail', N'COCKTAILNAME,BRAND,SIZE,QTY,RATE')
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Fun_CalcBottleforMigration]') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION [dbo].[Fun_CalcBottleforMigration]
GO

--This function is used to fetch no of bottles from no of spegs
CREATE Function [dbo].[Fun_CalcBottleforMigration](@noofpegs numeric(18,3), @CategorySizeLinkID numeric(18,0))  
Returns int
As
Begin
	declare @Speg int
	declare @noofbottle int
	set @noofbottle = 0
	declare @type char(1)
	declare @bottlesize int
	declare @NoOfSpeg int

	select @Speg = Speg, @type = StockIN, @bottlesize = ML, @NoOfSpeg = NoOfSpeg from tbl_categorysizelinkup where CategorySizeLinkID = @CategorySizeLinkID
	
	if lower(@type) = 'm'
	begin		
		set @noofbottle = @noofpegs / @bottlesize
	end
	else if lower(@type) = 'p'
	begin
		set @noofbottle = @noofpegs / @NoOfSpeg
	end
	else
	begin
		set @noofbottle = @noofpegs
	end
	return @noofbottle  
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Fun_CalcPegwithoutbottle]') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION [dbo].[Fun_CalcPegwithoutbottle]
GO

CREATE Function [dbo]. [Fun_CalcPegwithoutbottle] (@noofpegs numeric(18,0), @CategorySizeLinkID numeric(18,0))  
Returns numeric(18,0)
As
Begin
	declare @Speg int
	declare @noofbottle int
	set @noofbottle = 0
	declare @type char(1)
	declare @bottlesize int
	declare @PegSize numeric(18,0)
	declare @peg numeric(18,0)

	select @Speg = Speg, @type = StockIN, @bottlesize = ML, @PegSize = PegSize from tbl_categorysizelinkup where CategorySizeLinkID = @CategorySizeLinkID
	
	if lower(@type) <> 'm'		
	begin
		set @peg = @noofpegs % @Speg
	end
	else	
    begin
		set @noofpegs = @noofpegs % @bottlesize
		set @peg = @noofpegs/ @PegSize
	end

	return @peg  
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Fun_CalculateUnitsIntoML]') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION [dbo].[Fun_CalculateUnitsIntoML]
GO

CREATE Function [dbo].[Fun_CalculateUnitsIntoML](@units numeric(18,0), @CategorySizeLinkID numeric(18,0))
Returns numeric(18,0)
As
Begin
	
	declare @totalspges numeric(18,0)
	declare @bottlesize numeric(18,0)
	declare @PegSize int
	declare @type char(1)

	select @PegSize = PegSize, @bottlesize = ML, @type = StockIN from tbl_categorysizelinkup where CategorySizeLinkID = @CategorySizeLinkID
	
	if lower(@type) = 'm'
	begin
		set @totalspges = @units		
	end
	else if lower(@type) = 'p'
	begin
		set @totalspges = @units * @PegSize
	end 
	else
	begin
		set @totalspges = @units * @bottlesize
	end
	return @totalspges

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Fun_CalcBottleDecimal]') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION [dbo].[Fun_CalcBottleDecimal]
GO

--This function is used to fetch no of bottles from no of spegs
CREATE Function [dbo].[Fun_CalcBottleDecimal](@noofpegs numeric(18,3), @CategorySizeLinkID numeric(18,0))  
Returns numeric(18,3)
As
Begin
	declare @Speg int
	declare @noofbottle numeric(18,3)
	set @noofbottle = 0
	declare @type char(1)
	declare @bottlesize int
	declare @NoOfSpeg int

	select @Speg = Speg, @type = StockIN, @bottlesize = ML, @NoOfSpeg = NoOfSpeg from tbl_categorysizelinkup where CategorySizeLinkID = @CategorySizeLinkID
	
	if lower(@type) = 'm'
	begin		
		set @noofbottle = @noofpegs / @bottlesize
	end
	else if lower(@type) = 'p'
	begin
		set @noofbottle = @noofpegs / @NoOfSpeg
	end
	else
	begin
		set @noofbottle = @noofpegs
	end
	return @noofbottle  
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Fun_FetchPurchaseRate]') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION [dbo].[Fun_FetchPurchaseRate]
GO

--select * from tbl_saledetail
--This function is used to fetch purchase rate for sale saving
CREATE function [dbo].[Fun_FetchPurchaseRate](@type char(1), @brandopeningid numeric(18,0), @unitqty numeric(18,0), @ratetype char(1))
Returns numeric(14,2)
As
Begin

--	set @ratetype = 'M'
--	set @type = 'B'
--	set @brandopeningid = 1896
--	set @unitqty = 80


	declare @outrate numeric(14,2)
	set @outrate = 0


	if @ratetype = 'M'
	Begin

		select
		@outrate = 
		case @type
			when 'B' then det.PurchaseRate
			when 'L' then bh.PurRatePeg * 2
			else bh.PurRatePeg
		end
		from Tbl_BrandOpening bo
		join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
		join tbl_BrandHead bh on bh.brandid = bo.brandid and bh.categoryid = lnk.categoryid        
		join tbl_BrandDet det on det.brandid=bo.brandid and det.sizeid=lnk.sizeid 
		where bo.BrandOpeningID = @brandopeningid

	End
	Else
	begin
		
		Select
		@outrate = 
		case @type
			when 'B' then det.PurchaseTrnRate
			when 'L' then bh.PurchasePegRate * 2
			else bh.PurchasePegRate
		end	
		From Tbl_BrandOpening bo
		join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
		join tbl_BrandHead bh on bh.brandid = bo.brandid and bh.categoryid = lnk.categoryid        
		join tbl_BrandDet det on det.brandid=bo.brandid and det.sizeid=lnk.sizeid 
		where bo.BrandOpeningID = @brandopeningid

	end
	return @outrate
End
GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Fun_CheckTransferEditDelete') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION Fun_CheckTransferEditDelete
GO

CREATE Function Fun_CheckTransferEditDelete(@ID numeric(18,0), @type char(1))
returns bit
begin
	declare @tmpPurchaseDtl table
	(
		PurdetailID numeric(18,0),
		BrandOpeningID numeric(18,0),
		PurchaseUnitQty numeric(18,0),
		NonMovableQty numeric(18,0)
	)
	if upper(@type) = 'T'
	begin
		insert into @tmpPurchaseDtl
		(PurdetailID, BrandOpeningID, PurchaseUnitQty, NonMovableQty)
		Select TrnTranferDetailID, TrnforBrandOpeningID, UnitQty, NonMovableQty from TBL_FIFORecords
		where TrnTransferHeadID = @ID
	end
	else
	begin
		insert into @tmpPurchaseDtl
		(PurdetailID, BrandOpeningID, PurchaseUnitQty, NonMovableQty)
		Select PurdetailID, BrandOpeningID, UnitQty, NonMovableQty from TBL_FIFORecords
		where PurchaseId = @ID
	end	

	declare @PurchaseUnitQty numeric(18,0)
	declare @NonMovableQty numeric(18,0)
	declare @sale numeric(18,0)
	declare @IsValid bit
	declare @PurdetailID numeric(18,0)
	set @PurchaseUnitQty = 0
	set @NonMovableQty = 0
	set @sale = 0
	set @IsValid = 1
	set @PurdetailID = 0
	while(select count(PurdetailID) from @tmpPurchaseDtl) > 0
	begin
		select top 1 @PurdetailID = PurdetailID, @PurchaseUnitQty = PurchaseUnitQty, @NonMovableQty = NonMovableQty from @tmpPurchaseDtl order by PurdetailID
		set @sale = @NonMovableQty - @PurchaseUnitQty
		if @sale <> 0
		begin
			set @IsValid = 0
		end
		delete from @tmpPurchaseDtl where PurdetailID = @PurdetailID
	end
	return @IsValid
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Fun_GetConsumedBrand') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION Fun_GetConsumedBrand
GO

CREATE Function Fun_GetConsumedBrand(@ID numeric(18,0), @type char(1))
RETURNS @tmpConsumedBrand TABLE 
(
    brandopeningid numeric(18,0)
)
begin
	declare @tmpPurchaseDtl table
	(
		PurdetailID numeric(18,0),
		BrandOpeningID numeric(18,0),
		PurchaseUnitQty numeric(18,0),
		NonMovableQty numeric(18,0)
	)


	if upper(@type) = 'T'
	begin
		insert into @tmpPurchaseDtl
		(PurdetailID, BrandOpeningID, PurchaseUnitQty, NonMovableQty)
		Select TrnTranferDetailID, TrnforBrandOpeningID, UnitQty, NonMovableQty 
		from TBL_FIFORecords
		where TrnTransferHeadID = @ID
	end
	else
	begin
		insert into @tmpPurchaseDtl
		(PurdetailID, BrandOpeningID, PurchaseUnitQty, NonMovableQty)
		Select PurdetailID, BrandOpeningID, UnitQty, NonMovableQty 
		from TBL_FIFORecords
		where PurchaseID = @ID
	end


	declare @PurchaseUnitQty numeric(18,0)
	declare @NonMovableQty numeric(18,0)
	declare @BrandOpeningID numeric(18,0)
	declare @sale numeric(18,0)
	declare @IsValid bit
	declare @PurdetailID numeric(18,0)
	set @PurchaseUnitQty = 0
	set @NonMovableQty = 0
	set @sale = 0
	set @IsValid = 1
	set @PurdetailID = 0
	set @BrandOpeningID = 0

	while(select count(PurdetailID) from @tmpPurchaseDtl) > 0
	begin
		select top 1 @PurdetailID = PurdetailID, @PurchaseUnitQty = PurchaseUnitQty, @NonMovableQty = NonMovableQty, 
		@BrandOpeningID = BrandOpeningID
		from @tmpPurchaseDtl order by PurdetailID
		set @sale = @NonMovableQty - @PurchaseUnitQty
		if @sale <> 0
		begin
			insert into @tmpConsumedBrand (brandopeningid) values (@BrandOpeningID)
		end
		delete from @tmpPurchaseDtl where PurdetailID = @PurdetailID
	end
	return 
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_SaveMultipleLicense') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_SaveMultipleLicense
GO
CREATE Procedure  Spr_SaveMultipleLicense
@LicenseId numeric(18,0),
@XmlDoc xml,
@BrandOpening int,
@AssignBrandCode int,
@Cocktail int,
@CocktailCode int,
@Outbit  bit output,          
@Username varchar(100),            
@OutMsg  varchar(100) output  
as
begin

Declare @hdoc int            
Exec sp_xml_preparedocument @hDoc Output, @XmlDoc            
            
Declare @temp table            
(            
 LicenseID numeric(18,0)    
)           
            
insert into @temp            
(LicenseID)            
select             
LicenseID         
From OpenXML(@hDoc,'/Transaction/LicenseMaster/License') with                          
 (                          
   LicenseID numeric(18,0)              
 )            

--select * from @temp

Declare @tempLiceseid numeric(18,0)
set @tempLiceseid=0

	while(select count(LicenseID) from @temp)>0
	begin

		select top 1 @tempLiceseid = LicenseID from @temp order by LicenseID
		print(@tempLiceseid)

		-------ForBrandOpening
		if @BrandOpening<>0
		begin
		insert into tbl_brandopening
		(BrandID,LicenseID,CategorySizeLinkUpID,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo,PurchaseUnitQty,PurchaseUnitRate,Oprc,Dtc,NonMovingQty)
		Select
		bo1.BrandID,lnk2.licenseid,lnk2.CategorySizeLinkID,0,0,0,0,0,0,0,@Username,getdate(),0
		from tbl_categorysizelinkup lnk1
		join tbl_categorysizelinkup lnk2 on lnk1.CategoryID = lnk2.CategoryID and lnk1.sizeid = lnk2.sizeid and lnk1.licenseid = @LicenseId
		join tbl_brandopening bo1 on bo1.CategorySizeLinkUpID = lnk1.CategorySizeLinkID
		left outer join tbl_brandopening bo2 on bo2.CategorySizeLinkUpID = lnk2.CategorySizeLinkID 
		and bo2.licenseID=lnk2.licenseID and bo1.brandid=bo2.brandid 
		where bo2.brandid is null and lnk2.licenseid = @tempLiceseid
		order by bo1.brandid
		end
		-------ForBrandOpening

		
		-----For Assign BrandCode---

if @AssignBrandCode<>0
begin
insert into tbl_assignbrandcode
(BrandID,BrandCode,TypeID,CategorySizeLinkUpID,LicenseID,Oprc,Dtc,BrandOpeningID)
select 
code1.BrandID,code1.BrandCode,code1.TypeID,bo2.CategorySizeLinkUpID,lnk2.LicenseID,'admin',getdate(),bo2.BrandOpeningID
from tbl_categorysizelinkup lnk1
join tbl_categorysizelinkup lnk2 on lnk1.CategoryID = lnk2.CategoryID and lnk1.sizeid = lnk2.sizeid and lnk1.licenseid = @LicenseId
join tbl_brandopening bo1 on bo1.CategorySizeLinkUpID = lnk1.CategorySizeLinkID
join tbl_brandopening bo2 on bo2.CategorySizeLinkUpID = lnk2.CategorySizeLinkID and bo1.brandid = bo2.brandid and bo2.licenseid = lnk2.licenseid
join tbl_assignbrandcode code1 on code1.BrandOpeningID = bo1.BrandOpeningID
left outer join tbl_assignbrandcode code2 on code2.BrandOpeningID = bo2.BrandOpeningID and code1.BrandCode = code2.BrandCode and code1.TypeID = code2.TypeID
where code2.AssignBrandCodeID is null and bo2.licenseid = @tempLiceseid
end

		-----Assign BrandCode---
		

-----------For Cocktail ---
if @Cocktail<>0
begin

insert into tbl_cocktaildetail
(CocktailID,BrandOpeningId,Speg,CategorysizelinkID,Licenceid,Oprc,Dtc)
select 
c1.CocktailID,bo2.BrandOpeningId,det1.Speg,bo2.CategorySizeLinkUpID,bo2.LicenseID,'admin',getdate()
from tbl_categorysizelinkup lnk1
join tbl_categorysizelinkup lnk2 on lnk1.CategoryID = lnk2.CategoryID and lnk1.sizeid = lnk2.sizeid and lnk1.licenseid = @LicenseId
join tbl_brandopening bo1 on bo1.CategorySizeLinkUpID = lnk1.CategorySizeLinkID
join tbl_brandopening bo2 on bo2.CategorySizeLinkUpID = lnk2.CategorySizeLinkID and bo1.brandid = bo2.brandid and bo2.licenseid = lnk2.licenseid
join tbl_cocktaildetail det1 on det1.BrandOpeningID = bo1.BrandOpeningID
join tbl_cocktail c1 on c1.cocktailid = det1.cocktailid
left outer join tbl_cocktaildetail det2 on det2.BrandOpeningID = bo2.BrandOpeningID 
left outer join tbl_cocktail c2 on c2.cocktailid = det2.cocktailid
where det2.CocktaildetID is null and c2.cocktailid is null and bo2.licenseid = @tempLiceseid


insert into tbl_cocktailrate
(Rate,CocktailId,LicenseId,oprc,dtc)
select
r1.Rate,r1.CocktailId, @tempLiceseid,'admin',getdate() 
from tbl_cocktailrate r1
left outer join tbl_cocktailrate r2 on r1.CocktailId = r2.CocktailId  
and r2.licenseid = @tempLiceseid
where r1.licenseid = @LicenseId and r2.Cocktailrateid is null

end
----- Cocktail---

-----------For Cocktail Code---

if @CocktailCode<>0
begin
insert into tbl_assigncocktailcode 
(CocktailID,Cocktailcode,LicenseId,Oprc,Dtc)
select code1.CocktailID,code1.Cocktailcode,@tempLiceseid,'admin',getdate()
from tbl_assigncocktailcode code1 
left outer join tbl_assigncocktailcode code2 on code1.cocktailid=code2.cocktailid  and code2.licenseid = @tempLiceseid and code1.Cocktailcode = code2.Cocktailcode
where code1.licenseid = @LicenseId and code2.AssigncocktailcodeID is null 
end
-----------For Cocktail Code---


delete from @temp where LicenseID = @tempLiceseid  


	end




--select * from tbl_brandopening


	set @outbit = 0   
	 set @outmsg = 'Save Succesfully' 



End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchLicenseForTransferMaster') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchLicenseForTransferMaster
GO
CREATE procedure Spr_FetchLicenseForTransferMaster
@LicenseId numeric(18,0)  
as  
begin  
Select LicenseID,LicenseDesc from tbl_license where LicenseID not in(@LicenseId)  
End  
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchlicenseForTransfer]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchlicenseForTransfer]
GO

CREATE procedure [dbo].[Spr_fetchlicenseForTransfer]
@LicenseID numeric(18,0)              
as              
Begin
declare @IsRack bit
set @IsRack= 0
declare @ForFL3ID numeric( 18,0)
set @ForFL3ID= 0

	select @IsRack=IsRack,@ForFL3ID=ForFL3ID from tbl_license where LicenseID=@LicenseID  
	 if (@IsRack=1)
		begin
			select convert(varchar,fz.FreezDate,106) as FreezDate,l.LicenseID,l.LicenseDesc,l.LicenseNo,l.Add1,l.Add2,l.City,l.PinCode,l.Telephone,l.Email,l.Bst,l.Cst,l.store,convert(bit,1) as IsSelected from tbl_License l        
			left outer join tbl_freezMaster fz on fz.LicenseID=l.LicenseID and fz.IsActive = 1
			where l.LicenseID=@ForFL3ID
		end   
	else
		begin
			select convert(varchar,fz.FreezDate,106) as FreezDate,l.LicenseID,l.LicenseDesc,l.LicenseNo,l.Add1,l.Add2,l.City,l.PinCode,l.Telephone,l.Email,l.Bst,l.Cst,l.store,convert(bit,0) as IsSelected from tbl_License l        
			left outer join tbl_freezMaster fz on fz.LicenseID=l.LicenseID and fz.IsActive = 1
			where l.LicenseID<>@LicenseID  
		end  
	                
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchQCStep3ExcelData') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchQCStep3ExcelData
GO

--Tbl_ConsumptionMst            
--Tbl_ControlDetails            
--Tbl_ControlsHead            
--Tbl_ParameterMaster            
--Tbl_SaleDetail            
CREATE procedure Spr_FetchQCStep3ExcelData             
@LicenseID numeric(18,0),
@ControlHeadID numeric(18,0),                  
@FromDate DateTime,                
@ToDate DateTime            
as            
Begin            
            
            
Declare @Parametervar Numeric(18,0)            
set @Parametervar=0            
Declare @NetRevenue Numeric(18,0)            
set @NetRevenue=0            
            
 --select @Parametervar = isnull(parameterid,0) from Tbl_ParameterMaster where Behaviour='N'   
  
         
            
declare @less as numeric(18,0)            
set @less=0            
 select @less= Sum(Amount) from Tbl_ControlDetails where ControlHeadID=@ControlHeadID
  
--select @less as Less         
            
declare @grss as numeric(18,0)            
set @grss=0            
  select @grss= GrossRevenue from Tbl_ControlsHead where ControlHeadID=@ControlHeadID    
--Select @grss as LiquerSaleForThePeriod            
--Select @less as LessDiscount            
            
set @NetRevenue=@grss-@less            
--select @NetRevenue as NetSaleRevenue            
          
Declare @liquerSaleTable table          
(          
LiquerSaleForThePeriod numeric(14,2),          
LessDiscount numeric(14,2),          
NetSaleRevenue numeric(14,2)          
)          
insert into @liquerSaleTable(LiquerSaleForThePeriod,LessDiscount,NetSaleRevenue)values(@grss,@less,@NetRevenue)          
select * from @liquerSaleTable            
            
------Consumption Details            
             
--exec Spr_FetchQcStep1 @LicenseID,@FromDate,@ToDate,@TotalCost output,2            
            
declare @date smalldatetime                  
select @date = VarDate  from vw_fetchdistinctVariance where licenseid = @LicenseID order by VarDate desc                  
--sale quantity              
declare @temptable table                  
(               
 id numeric(18,0),                  
 BrandOpeningID numeric(18,0),                  
 MasterPurRate numeric(14,2),                  
 PurchaseRate numeric(14,2),                  
 Sale  numeric(18,0)              
)                  
insert into @temptable(id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale)                  
Select              
sd.BilldetailId    ,              
sd.brandopeningid,                  
sd.MasterPurRate,                  
sd.PurchaseRate,              
Case              
 when lower(lnk.StockIN) = 'm' then dbo.Fun_CalcunitsforML(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))              
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))              
End              
from tbl_saledetail sd                  
join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid                  
join tbl_SaleHead sh on sh.billid=sd.billid               
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID              
--where sh.billdate between @FromDate and @ToDate                 
where convert(smalldatetime,convert(varchar,sh.billdate,102))     
between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))    
              
--variance quantity              
declare @tempVariance table                  
(                  
 BrandOpeningID numeric(18,0),                  
 Variance numeric(18,0)                  
)              
insert into @tempVariance(BrandOpeningID, Variance)                  
Select                   
varn.brandopeningid,              
Case              
 when lower(lnk.StockIN) = 'm' then dbo.Fun_CalcunitsforML(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)*2))              
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)*2))              
end                  
from vw_FetchVarianceTable varn              
join tbl_brandopening bo on varn.brandopeningid = bo.brandopeningid                 
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID              
where varn.VarDate = @date and varn.licenseid = @LicenseID                  
              
--select * from @temptable                
--select * from @tempVariance              
              
               
declare @id numeric(18,0)              
declare @BrandOpeningID numeric(18,0)              
declare @variance numeric(18,0)              
            
while(select count(BrandOpeningID) from @tempVariance) > 0              
begin              
               
 declare @newidn numeric(18,0)              
 --declare @id numeric(18,0)              
 declare @sale numeric(18,0)              
              
 select top 1 @BrandOpeningID = BrandOpeningID, @variance = variance from @tempVariance order by BrandOpeningID              
              
 declare @tempBrandWhile table              
 (              
  newidn numeric(18,0) identity,              
  id numeric(18,0),                  
  BrandOpeningID numeric(18,0),                  
  MasterPurRate numeric(14,2),                  
  PurchaseRate numeric(14,2),                  
  Sale  numeric(18,0)              
 )                
 insert into @tempBrandWhile(id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale)              
 select id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale from @temptable where BrandOpeningID = @BrandOpeningID              
               
 while(select count(*) from @tempBrandWhile) > 0              
 begin              
  set @newidn = 0              
  set @id = 0              
set @sale = 0              
  select top 1 @newidn = newidn, @id = id from @tempBrandWhile order by newidn desc              
  if @variance <> 0              
  begin              
   select @sale = sale from @temptable where id = @id              
              
   update @temptable set Sale =               
   case              
    when @variance > sale then @variance - sale               
    else sale - @variance              
   end              
   where id = @id              
              
   select @variance =               
   case              
    when @variance > @sale then @variance - @sale               
    else @sale - @variance              
   end              
               
  end              
  delete from @tempBrandWhile where newidn = @newidn              
 end              
               
 delete from @tempVariance where BrandOpeningID = @BrandOpeningID              
end              
              
--select * from @temptable              
              
declare @tempconsumption table                  
(                  
 BrandOpeningID numeric(18,0),                   
 Consumption numeric(18,0),                  
 MasterPurRateCost numeric(14,2),                  
 PurchaseRateCost numeric(14,2)                  
)              
              
insert into @tempconsumption                  
(BrandOpeningID, Consumption, MasterPurRateCost, PurchaseRateCost)                
select              
temp.BrandOpeningID,              
sum(temp.Sale),              
temp.MasterPurRate*(sum(temp.Sale)),              
temp.PurchaseRate*(sum(temp.Sale))              
from @temptable temp              
group by temp.BrandOpeningID, temp.MasterPurRate, temp.PurchaseRate             
            
declare @tmptable table                                    
 (                        
  LicenseID numeric(18,0),                                 
  BrandID numeric(18,0),                        
  Brand varchar(50),                      
[Size] varchar(50),                      
  BQty numeric(18,0),              
SQty numeric(18,0),              
  Cost Numeric(18,0),                  
BrandOpeningID numeric(18,0),                  
MasterRate numeric(14,2)                  
                  
 )                    
 insert into @tmptable              
 (LicenseID,BrandID,Brand,[Size],BQty,SQty,Cost,BrandOpeningID,MasterRate)              
              
 select              
 csl.LicenseID,c.CategoryID,c.CategoryDesc as Brand,csl.Alias as [Size],                    
 dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),              
 dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),              
 sum(tc.PurchaseRateCost) as Cost,0,sum(MasterPurRateCost) as MasterRate                
 from @tempconsumption tc              
 join tbl_BrandOpening bo on bo.BrandOpeningID=tc.BrandOpeningID                          
 --join tbl_BrandHead bh on bh.BrandID=bo.BrandID                          
 join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID                   
 ----Shiva                  
 join Tbl_Category c on c.categoryID=csl.CategoryID              
 where csl.LicenseID=@LicenseID                          
 group by csl.LicenseID,c.CategoryID,c.CategoryDesc,csl.Alias,bo.CategorySizeLinkUpID,tc.PurchaseRateCost              
               
--  select tt.Brand as Category,tt.Cost from @tmptable tt join @tempconsumption tc on tt.BrandOpeningID=tc.BrandOpeningID            
--  group by tt.Brand,tc.PurchaseRateCost            
                
--select Brand as Category,cost from @tmptable          
          
Declare @TotalCost numeric(14,2)            
select @TotalCost=isnull(sum(Cost),0) from @tmptable          
                  
 --select @TotalCost as TotalCost             
--select @TotalCost as CostOfConsumption              
            
Declare @percentage numeric(14,2)            
set @percentage=(@TotalCost*100)/@NetRevenue            
--select @percentage as Percentage             
          
--------ENd Consumption Details            
            
declare @ConsuptionDetails table          
(          
Category varchar(100),          
Cost numeric(14,2),          
CostOfConsumption numeric(14,2),          
Percentage numeric(14,2)          
)          
insert into @ConsuptionDetails(Category,Cost,CostOfConsumption,Percentage)          
select Brand,cost,@TotalCost,@percentage from @tmptable           
          
select distinct Category,Cost, CostOfConsumption, Percentage from @ConsuptionDetails          
            
-----End COnsumption            
Declare @NonChargable numeric(14,2)            
            
select @NonChargable=sum(Amount) from tbl_ControlDetails cd where ControlHeadID=@ControlHeadID  

--select @NonChargable          
--join Tbl_ParameterMaster pm on cd.ParameterID=pm.ParameterID            
        
            
--Select @NonChargable as NonChargable          
          
Declare @NetCostOfConsumption numeric(14,2)            
            
set @NetCostOfConsumption=@TotalCost-@NonChargable          
--select @NetCostOfConsumption as NetCostOfConsumprion             
            
            
Declare @percentage2 numeric(18,0)            
set @percentage2=(@NetCostOfConsumption*100)/@NetRevenue            
--select @percentage2 as 'NetCostPercentage%'          
          
Declare @NonChargableTable as Table          
(          
ParameterName varchar(100),          
Amount numeric(14,2),          
Total numeric(14,2),          
NetCostofConsumption numeric(14,2),          
percentage numeric(14,2)          
)          
          
insert into @NonChargableTable(ParameterName,Amount,Total,NetCostofConsumption,percentage)          
select  pm.parameterName,cd.amount,@NonChargable,@NetCostOfConsumption,@percentage2 from tbl_ControlDetails cd             
join Tbl_ParameterMaster pm on cd.ParameterID=pm.ParameterID          
            
Select ParameterName,Amount,Total,NetCostofConsumption,percentage  from @NonChargableTable          
          
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveChangePassword]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveChangePassword]
GO

CREATE Procedure [dbo].[Spr_SaveChangePassword]
@UserID numeric(18,0),      
@CurrentPwd varchar(100),      
@NewPwd varchar(100),       
@Outbit  bit output,        
@UserName varchar(100),          
@OutMsg  varchar(100) output         
as      
Begin      
  Declare @Pwd varchar(100)
  set @Pwd = ''
  select @Pwd = password from Tbl_UserMaster where UserID=@UserID   

if @Pwd = ltrim(rtrim(@CurrentPwd))
	begin
		update Tbl_UserMaster set password=@NewPwd,
		Oprm = @UserName, dtm = getdate()      
		where UserID=@UserID      
		set @OutMsg = 'Password Updated Successfully'            
		set @Outbit = 1 
	end
else
	begin
		set @OutMsg = 'Current Password mismatch'            
		set @Outbit = 1 
	end
          
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchBrandCodeReport') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchBrandCodeReport
GO

Create Proc Spr_FetchBrandCodeReport  
@brandid numeric(18,0),
@LicenseID numeric(18,0),  
@BrandDesc varchar(100)
as  
begin  

declare @StrSelect varchar(max)    
 declare @StrWhere varchar(max)  

set @StrSelect=''
set @StrWhere=''

set @StrSelect='select c.CategoryDesc as Category,bh.BrandDesc as [Brand Name],lnk.Alias as [Size Alias],bo.brandid,  
case typeid  
when 1 then ''Bottle''  
when 2 then ''SPeg''  
when 3 then ''LPeg''  
else ''''  
end as [Code For],  
isnull(bc.BrandCode,'''') as BrandCode,  
lic.LicenseNo as FlLicNo,lic.LicenseDesc as FlLicName  
  into ##temp
from Tbl_BrandOpening bo  
join tbl_categorySizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID and bo.licenseid = lnk.licenseid  
join tbl_brandhead bh on bh.BrandID=bo.BrandID  
join tbl_category c on c.CategoryID=bh.CategoryID
join tbl_license lic on lic.licenseid=lnk.licenseid and  lic.Licenseid='+convert(varchar,@LicenseID)+'
left outer join tbl_assignbrandcode bc on bo.brandopeningid = bc.brandopeningid  
 where 1=1 '


if @brandid<>0     
    begin     
  set @StrWhere=@StrWhere+' and  bo.BrandID='+ convert(varchar,@brandid)    
    end   

if @BrandDesc <> ''                            
     Begin                            
     set @Strwhere=@strwhere + ' and  bc.BrandCode like ''%'+ltrim(rtrim(@BrandDesc))+'%'''                            
     End        

print (@strSelect + @StrWhere)                                              
exec  (@strSelect + @StrWhere)
  
--select * from ##temp

DECLARE @qry NVARCHAR(4000)
SET @qry =
'SELECT Category,[Brand Name],[Size Alias],SPeg,Bottle,LPeg,FlLicNo,FlLicName FROM
(SELECT Category,[Brand Name],[Size Alias],isnull(BrandCode,'''') as BrandCode,[Code For],FlLicNo,FlLicName
FROM ##temp)p
PIVOT (MIN(BrandCode) FOR [Code For] IN (SPeg,LPeg,Bottle)) AS Pvt'

-- Executing the query
EXEC(@qry)


drop table ##temp

end  

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'spr_fetchCocktailCodeReport') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE spr_fetchCocktailCodeReport
GO

create procedure spr_fetchCocktailCodeReport
@LicenseID numeric(18,0),
@CocktailID  numeric(18,0),
@CocktailCode varchar(50)
as  
begin  

declare @StrSelect varchar(max)    
 declare @StrWhere varchar(max)  

set @StrSelect=''
set @StrWhere=''

if @LicenseID=0
	begin  
	set @StrSelect='select c.CocktailName,cc.Cocktailcode from tbl_cocktail c  
	left outer join Tbl_AssignCocktailcode cc on cc.CocktailID=c.cocktailID
	 where 1=1 '
	
if @CocktailID<>0     
    begin     
  set @StrWhere=@StrWhere+' and  c.cocktailID='+ convert(varchar,@CocktailID)    
    end   

if @CocktailCode <> ''                            
     Begin                            
     set @Strwhere=@strwhere + ' and  cc.Cocktailcode like ''%'+ltrim(rtrim(@CocktailCode))+'%'''                            
     End        

	print (@strSelect + @StrWhere+ ' order by c.CocktailName')                                              
	exec  (@strSelect + @StrWhere+ ' order by c.CocktailName')
  
	end
Else
	begin
	set @StrSelect='select distinct c.CocktailName,cc.Cocktailcode from tbl_cocktail c  
	left outer join Tbl_AssignCocktailcode cc on cc.CocktailID=c.cocktailID  
	join Tbl_Cocktaildetail det on det.CocktailID=c.CocktailID
	where det.Licenceid='+convert(varchar,@LicenseID)
	if @CocktailID<>0     
    begin     
  set @StrWhere=@StrWhere+' and  c.cocktailID='+ convert(varchar,@CocktailID)    
    end   

if @CocktailCode <> ''                            
     Begin                            
     set @Strwhere=@strwhere + ' and  cc.Cocktailcode like ''%'+ltrim(rtrim(@CocktailCode))+'%'''                            
     End        

	print (@strSelect + @StrWhere+ ' order by c.CocktailName')                                              
	exec  (@strSelect + @StrWhere+ ' order by c.CocktailName')
	end  
	 
end  
Go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_WashDay]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_WashDay]
GO

CREATE procedure [dbo].[Spr_WashDay]
@LicenseID numeric(18,0),
@fromdate smalldatetime,
@todate smalldatetime,
@sale bit,
@purchase bit,
@transfer bit,
@outbit bit output,
@outmsg varchar(max) output
as
begin
declare @isvalid bit
set @isvalid = 1


declare @tmpFIFOBrand table
(
	FifoRecordsID numeric(18,0),
	BrandOpeningID numeric(18,0),
	Qty	numeric(18,0)
)

declare @tmpOPBrand table
(
	BrandOpeningID numeric(18,0),
	Qty	numeric(18,0)
)



declare @tmpFIFOCocktail table
(
	FifoRecordsID numeric(18,0),
	BrandOpeningID numeric(18,0),
	Qty	numeric(18,0)
)


declare @tmpOPCocktail table
(
	BrandOpeningID numeric(18,0),
	Qty	numeric(18,0)
)


declare @tmpBill table
(
	BillId numeric(18,0)
)

	if @sale = 1
	begin

		if exists (select FromDate,ToDate from Tbl_ControlsHead 
		where  convert(smalldatetime,convert(varchar,FromDate,102)) 
		between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102))
		and convert(smalldatetime,convert(varchar,ToDate,102)) 
		between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102))
		and LicenseID=@LicenseID)
		begin
			set @outmsg = 'cant not wash the sale used in controls'
			set @outbit = 0
			set @isvalid = 0 
		end


		if exists(select VarDate from tbl_Variance 
		where convert(smalldatetime,convert(varchar,VarDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) 
		and convert(smalldatetime,convert(varchar,@todate,102))
		and LicenseID=@LicenseID)
		begin
			set @outmsg = 'cant not wash the sale used in variance'
			set @outbit = 0 
			set @isvalid = 0
		end 

		if @isvalid = 1
		begin

			delete from @tmpBill

			insert into @tmpBill(BillId)
			select distinct BillId 
			from Tbl_SaleHead 
			where convert(smalldatetime,convert(varchar,BillDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) 
			and convert(smalldatetime,convert(varchar,@todate,102)) 
			and LicenseID=@LicenseID

			--delete from @tmpBill where billid <> 29
			
			declare @BillId numeric(18,0)
			set @BillId  = 0

			while(select COUNT(BillId) from @tmpBill) > 0
			begin
				select top 1 @BillId = BillId from @tmpBill

				delete from @tmpFIFOBrand
				insert into @tmpFIFOBrand(FifoRecordsID, BrandOpeningID, Qty)
				select FifoRecordsID, BrandOpeningID, SUM(unitqty)
				from Tbl_SaleDetail where BillId=@BillId
				group by FifoRecordsID, BrandOpeningID

				delete from @tmpOPBrand
				insert into @tmpOPBrand(BrandOpeningID, Qty)
				select BrandOpeningID, SUM(unitqty)
				from Tbl_SaleDetail where BillId=@BillId and FifoRecordsID is null
				group by BrandOpeningID

				delete from @tmpFIFOCocktail
				insert into @tmpFIFOCocktail(FifoRecordsID, BrandOpeningID, Qty)
				select sd.FifoRecordsID, sd.BrandOpeningid, sum(sd.unitqty)
				from Tbl_SaleCocktailDetail sd
				join Tbl_SaleCocktailHead sh on sh.CocktailSaleId = sd.CocktailSaleId
				where sh.BillId=@BillId
				group by sd.FifoRecordsID, sd.BrandOpeningid


				delete from @tmpOPCocktail
				insert into @tmpOPCocktail(BrandOpeningID, Qty)
				select BrandOpeningID, SUM(unitqty)
				from Tbl_SaleCocktailDetail sd
				join Tbl_SaleCocktailHead sh on sh.CocktailSaleId = sd.CocktailSaleId
				where sh.BillId=@BillId and sd.FifoRecordsID is null
				group by BrandOpeningID

				
				update f
				set f.UnitQty = f.UnitQty + tmp.Qty
				--select @BillId, f.UnitQty , tmp.Qty
				from @tmpFIFOBrand tmp
				join Tbl_FIFORecords f on tmp.FifoRecordsID = f.FifoRecordsID and tmp.BrandOpeningID = f.TrnforBrandOpeningID

				update f
				set f.UnitQty = f.UnitQty + tmp.Qty
				--select @BillId, f.UnitQty , tmp.Qty
				from @tmpFIFOBrand tmp
				join Tbl_FIFORecords f on tmp.FifoRecordsID = f.FifoRecordsID and tmp.BrandOpeningID = f.BrandOpeningID

				update bo
				set bo.PurchaseUnitQty = bo.PurchaseUnitQty + tmp.Qty 
				--select @BillId, bo.PurchaseUnitQty ,tmp.Qty 
				from @tmpOPBrand tmp
				join Tbl_BrandOpening bo on tmp.BrandOpeningID = bo.BrandOpeningID

				
				update f
				set f.UnitQty = f.UnitQty + tmp.Qty
				--select @BillId, f.UnitQty , tmp.Qty
				from @tmpFIFOCocktail tmp
				join Tbl_FIFORecords f on tmp.FifoRecordsID = f.FifoRecordsID and tmp.BrandOpeningID = f.TrnforBrandOpeningID

				update f
				set f.UnitQty = f.UnitQty + tmp.Qty
				--select @BillId, f.UnitQty , tmp.Qty
				from @tmpFIFOCocktail tmp
				join Tbl_FIFORecords f on tmp.FifoRecordsID = f.FifoRecordsID and tmp.BrandOpeningID = f.BrandOpeningID
				
				Update bo
				set bo.PurchaseUnitQty = bo.PurchaseUnitQty + tmp.Qty 
				--select @BillId, bo.PurchaseUnitQty , tmp.Qty 
				from @tmpOPCocktail tmp
				join Tbl_BrandOpening bo on tmp.BrandOpeningID = bo.BrandOpeningID
				

				delete from @tmpBill where BillId = @BillId

			End
			
			
			delete  sp
			from Tbl_SalePermit sp 
			join Tbl_SaleHead sh on sh.BillId=sp.BillId 
			where convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) 
			and convert(smalldatetime,convert(varchar,@todate,102))
			and sh.LicenseID=@LicenseID

			delete sd
			from  Tbl_SaleHead sh
			join Tbl_SaleCocktailHead sch on sh.BillId = sch.BillId
			join Tbl_SaleCocktailDetail sd on sch.CocktailSaleId = sd.CocktailSaleId
			where  convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) 
			and convert(smalldatetime,convert(varchar,@todate,102))
			and sh.LicenseID=@LicenseID

			delete sch 
			from Tbl_SaleCocktailHead sch
			join Tbl_SaleHead sh on sch.BillId=sh.BillId
			where convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) 
			and convert(smalldatetime,convert(varchar,@todate,102))
			and sh.LicenseID=@LicenseID

			delete sd
			from Tbl_SaleDetail sd
			join Tbl_SaleHead sh on sd.BillId=sh.BillId
			where convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) 
			and convert(smalldatetime,convert(varchar,@todate,102))
			and sh.LicenseID=@LicenseID

			delete from Tbl_SaleHead 
			where convert(smalldatetime,convert(varchar,BillDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) 
			and convert(smalldatetime,convert(varchar,@todate,102))
			and LicenseID=@LicenseID
					

			set @outmsg='Wash Complete'
			set @outbit=1
		end
	end
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchBrandQuntity]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchBrandQuntity]
GO

CREATE procedure [dbo].[Spr_FetchBrandQuntity]--195,27,203  
@date smalldatetime,    
@brandid numeric(18,0),      
@LicenseID numeric(18,0),                                                  
@CategorySizeLinkUpID numeric(18,0),  
@unitwiseqty numeric(18,0) = 0 output  
--@outbit bit output ,  
--@outmsg varchar(1000) output         
as                  
begin  
 declare @spegmltype char(5)  
 set @spegmltype = 'ML'  
 declare @BrandOpeningID numeric(18,0)  
 select @BrandOpeningID = brandopeningid from tbl_brandopening   
 where brandid = @brandid and licenseid = @LicenseID and CategorySizeLinkUpID = @CategorySizeLinkUpID  
  
 declare @temptable table                           
 (                  
  brandid numeric(18,0),                  
  bottle int default 0,                  
  spag int default 0  
 )                  
 insert into @temptable (brandid)values(@brandid)   
  
 declare @StockIN char(1)  
 declare @spegqty numeric(18,0)  
 declare @sizeml int  
 declare @totalspges numeric(18,0)  
 declare @TransferLicenseID numeric(18,0)  
 declare @TransferCategoryID numeric(18,0)  
 declare @TransferSizeID numeric(18,0)  
 declare @TransferCategorySizeLinkID numeric(18,0)  
  
 set @totalspges = 0       
  
 set @TransferLicenseID = 0  
 set @TransferCategoryID = 0  
 set @TransferSizeID = 0  
 set @TransferCategorySizeLinkID = 0    
  
 select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID   
 from tbl_categorysizelinkup   
 where CategorySizeLinkID = @CategorySizeLinkUpID  
  
 select @TransferCategorySizeLinkID = CategorySizeLinkID  
 from tbl_categorysizelinkup  
 where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID  
  
  
 set @StockIN = 'M'  
 set @spegqty = 0  
 set @sizeml = 0  
 set @totalspges = 0  
  
 select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  
 --print @BrandOpeningID  
   
 --declare @fromdate datetime  
  --declare @todate datetime  
 -- declare @isexists bit   
    --declare @totalspeg numeric(18,0)  
    
  --set @isexists =0  
  
 --exec  Spr_FetchTotalspeg @date,@LicenseID,@BrandOpeningID,@fromdate output,@todate output,@isexists output,@totalspeg output  
   
 --print @totalspeg   
       
  --if @isexists = 1  
       
  --   begin   
       
  --   select 'Rakes'  
        
  --      set @totalspges = @totalspeg  
       
  --      --select @totalspges  
  --update @temptable  
  --set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
  --spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
       
  --   end  
  
   
   --else  
       
     --select 'rakesh'  
        
     --begin  
  
  
 if lower(@StockIN) <> 'm'  
 begin  
    
  set @spegmltype = 'Speg'  
    
          
         --set @totalspges = @totalspeg  
          
          
     select @totalspges = @totalspges + (b.OpeningQty * @spegqty)  
  from tbl_brandopening b  
  where b.BrandOpeningID = @BrandOpeningID    
  
  select @totalspges = @totalspges + b.OpSpQty  
  from tbl_brandopening b  
  where b.BrandOpeningID = @BrandOpeningID    
    
--select @totalspges

  Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
  from tbl_purchasehead ph              
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID              
  where bo.BrandOpeningID = @BrandOpeningID    
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  --and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))  
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
      
  Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
  from tbl_purchasehead ph         
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId   
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID      
  where bo.BrandOpeningID = @BrandOpeningID  
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  --and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))   
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
    
  Select @totalspges = @totalspges + sum(pd.SQuantity)  
  from tbl_purchasehead ph              
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID              
  where bo.BrandOpeningID = @BrandOpeningID  
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))   
  --and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))   
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
  --select @totalspges

  Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)  
  from tbl_categorysizelinkup lnk  
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID  
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid  
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid  
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid  
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))    
  group by td.BrandOpeningID  
  
  Select @totalspges = @totalspges + sum(td.spegqty)  
  from tbl_categorysizelinkup lnk  
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID  
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid  
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid  
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid    
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))   
  group by td.BrandOpeningID  
  
	Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)
  from Tbl_TransferHeadMst th              
  join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null          
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
    
  Select @totalspges = @totalspges - sum(td.spegqty)
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null            
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))   
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
	--select 'sachin', @totalspges

  Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)
  from Tbl_SaleHead s          
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId  
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))           
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
    
  Select @totalspges = @totalspges - sum(sd.Speg) - (sum(sd.Lpeg)*2)
  from Tbl_SaleHead s          
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId  
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))            
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
  select @totalspges = @totalspges - sum(sc.Speg)
  from Tbl_SaleCocktailHead sa  
  join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
  join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId  
  join Tbl_SaleHead sh on sh.billid = sa.billid  
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,sh.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))            
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID   
    
    
  if @totalspges < 0  
  begin  
	set @totalspges = 0
  end   
  
  update @temptable  
  set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
  spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
  
 end  
 else  
 begin  
  print 'sachin'  
    
  --set @totalspges=@totalspeg  
    
  select @totalspges = @totalspges + (b.OpeningQty * @sizeml)  
  from tbl_brandopening b  
  where b.BrandOpeningID = @BrandOpeningID  
    
  select @totalspges = @totalspges + (b.OpSpQty*@spegqty)  
  from tbl_brandopening b  
  where b.BrandOpeningID = @BrandOpeningID  
    
  print '1:'+convert(varchar,@totalspges)  
    
  Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
  from tbl_purchasehead ph              
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID              
  where bo.BrandOpeningID = @BrandOpeningID  
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))   
  --and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))  
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
    
    
  Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
  from tbl_purchasehead ph              
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID      
  where bo.BrandOpeningID = @BrandOpeningID  
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))   
  --and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))  
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
    
  --print '2:' + convert(varchar,@totalspges)  
    
  Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
  from tbl_purchasehead ph              
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID              
  where bo.BrandOpeningID = @BrandOpeningID  
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  --and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))   
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
  Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)  
  from tbl_categorysizelinkup lnk  
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID  
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid  
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid  
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid  
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))     
  group by td.BrandOpeningID  
  
  Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)  
  from tbl_categorysizelinkup lnk  
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID  
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid  
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid  
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid  
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))  
  --and convert(smalldatetime,convert(varchar,@todate,102))     
  group by td.BrandOpeningID  
    
  Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)
  from Tbl_TransferHeadMst th             
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null              
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))   
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
    
    
  Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)
  from Tbl_TransferHeadMst th             
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null         
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))   
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
    
  print '3:'+convert(varchar,@totalspges)  
    
  Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)
  from Tbl_SaleHead s          
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId  
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))            
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
    
  print '4:'+convert(varchar,@totalspges)  
    
  Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty) - ((sum(sd.Lpeg)*@spegqty)*2)
  from Tbl_SaleHead s       
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId  
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))            
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
  
    
  select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
  from Tbl_SaleCocktailHead sa  
  join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
  join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId  
  join Tbl_SaleHead sh on sh.billid = sa.billid  
  where bo.BrandOpeningID = @BrandOpeningID  
  --and convert(smalldatetime,convert(varchar,sh.billdate,102))<= convert(smalldatetime,convert(varchar,@date,102))            
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
    
    
  --print 'Rakesh:' + convert(varchar,@totalspges)  
    
  if @totalspges < 0  
  begin  
	set @totalspges = 0
  end  
    
  update @temptable  
  set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
  spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
  
 end  
   
 --end  
  
 select brandid, 'Botttle: '+convert(varchar,bottle)+', ' + ltrim(rtrim(@spegmltype)) + ': '+convert(varchar,spag) as BrandStock from @temptable       
 set @unitwiseqty = @totalspges  
  
end 
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchFlr3ChataiReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchFlr3ChataiReport]
GO

--Spr_FetchFlr3ChataiReport '<Master><CocktailReports><Report LicenseID="3" FromDate="21-Oct-2012" ToDate="22-Oct-2012" Brand="" 
--Category="" Size="" Cocktail="" /></CocktailReports></Master>', 0, ''
CREATE procedure [dbo].[Spr_FetchFlr3ChataiReport]    
@xmlDoc xml,
@outbit bit output,
@outmsg varchar(max) output
as    
begin

Declare @hdoc int     
Declare @licenseID numeric(18,0)    
Declare @fromdate datetime    
Declare @todate datetime
Declare @enddate datetime    
declare @strtpno varchar(max)
declare @trnstrtpno varchar(max)

declare @tptable table
(
	tpno varchar(max),
	trntpno varchar(max),
	tpdate smalldatetime
)

declare @tmpMain table
(
	
	iden int identity(1,1),
	fordate smalldatetime,
	categorydesc varchar(100),
	particular int,
	alias varchar(20),
	totalsize varchar(20),
	Licenseno varchar(100),
	Licensename varchar(100)
)

--set @xmlDoc = '<Master><CocktailReports><Report LicenseID="3" FromDate="27-Jan-2013" ToDate="27-Jan-2013" Brand="" Category="" Size="" Cocktail="" /></CocktailReports></Master>'
    
exec sp_xml_preparedocument @hdoc output,@xmlDoc    
  
select @licenseID=LicenseID, @fromdate=FromDate,@todate=ToDate, @enddate = ToDate
from openXML(@hDoc,'/Master/CocktailReports/Report') with    
(  
LicenseID numeric(18,0),  
FromDate datetime,  
ToDate datetime
)  

--set @fromdate='15-Dec-2012'
--set @todate='16-Dec-2012'
--set @licenseID = 4


Declare @licno  varchar(100)      
Declare @liname varchar(100)      
set @licno=''      
set @liname=''      
select @licno= licenseno from tbl_license where licenseid=@licenseid      
select @liname= licensedesc from tbl_license where licenseid=@licenseid     

declare @brandid numeric(18,0)  
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandOpeningID numeric(18,0)

declare @StockIN char(1)    
declare @spegqty numeric(18,0)    
declare @sizeml int    
declare @totalspges numeric(18,0)

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

declare @opUnitQty numeric(18,0)
declare @purUnitQty numeric(18,0)
declare @totUnitQty numeric(18,0)
declare @salUnitQty numeric(18,0)

	declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0)
	)  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	) 
	--create index ind_brandid on @tempbrand(brandid)

	--alter index ind_brandid rebuild 
	  
while(@enddate >= @fromdate)
begin

	set @todate = @fromdate

	delete from @tempbrand

	insert into @tempbrand
	(brandopeningid, brandid, CategorySizeLinkID, categorydesc, Alias, Particular, UnitQty)
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 1, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 2, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 3, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 4, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 5, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'       
	order by CategorySizeLinkUpID 
       
	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid  


	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @BrandOpeningID = 0


	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			--print @totalspges    

			--select * from tbl_purchasedetail  

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * - 1  
--			end  

			--print @totalspges    
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand   
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end    
		else    
		begin    

			--print 'Rakesh'
			--set @date = '31-May-2012'  

			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * -1  
--			end  

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand    
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid



		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		
		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID


			
			--print @totalspges  

			--select * from tbl_purchasedetail

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID			
--       
--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3
			

--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID 

		end  
		else  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

						
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2  

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID  

		end

		delete from @tempwhile where brandopeningid = @brandopeningid
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'   
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		
		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			print @totalspges  
--
--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where BrandOpeningID=@BrandOpeningID

		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end
		
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)
--			where BrandOpeningID=@BrandOpeningID
		end      

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	
	set @strtpno = ''
	set @trnstrtpno = ''

	select @strtpno=@strtpno + isnull(ph.TPno,'') + ', '  
	from tbl_purchasehead ph              
	where  convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) = convert(smalldatetime,convert(varchar,@fromdate,102))
	and LicenseId=@licenseID

	select @strtpno=@strtpno + isnull(ph.TPno,'') + ', '  
	from Tbl_TransferHeadMst ph              
	where  convert(smalldatetime,convert(varchar,ph.TransferDate,102)) = convert(smalldatetime,convert(varchar,@fromdate,102))
	and ForLicenseID=@licenseID

	select @trnstrtpno=@trnstrtpno + isnull(ph.TPno,'') + ', '  
	from Tbl_TransferHeadMst ph              
	where  convert(smalldatetime,convert(varchar,ph.TransferDate,102)) = convert(smalldatetime,convert(varchar,@fromdate,102))
	and LicenseId=@licenseID


	if @strtpno <> ''
	begin
		select @strtpno=SUBSTRING(@strtpno,1,LEN(@strtpno) - 1)
	end

	if @trnstrtpno <> ''
	begin
		select @trnstrtpno=SUBSTRING(@trnstrtpno,1,LEN(@trnstrtpno) - 1)
	end

	insert into @tptable(tpno, trntpno, tpdate) values(@strtpno, @trnstrtpno, @fromdate)

	insert into @tmpMain	
	(fordate,categorydesc,particular,alias,totalsize,Licenseno,Licensename)
	select
	@fromdate, ltrim(rtrim(categorydesc)), convert(varchar,Particular), ltrim(rtrim(Alias)), 
	ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(UnitQty),CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(UnitQty),CategorySizeLinkID)))) as totsale,
	ltrim(rtrim(@licno)) as  fllicno,ltrim(rtrim(@liname)) as  fllicname
	from @tempbrand
	group by categorydesc, Alias, Particular, CategorySizeLinkID

	set @fromdate = @fromdate + 1
end

update @tmpMain set totalsize = null where totalsize = '0.0'


select iden, convert(varchar, ForDate, 106) as Date,ltrim(rtrim(f.categorydesc)) as catg,t.tpno as tpno,(rtrim(particular)) as particulars,ltrim(rtrim(f.alias)) as siz,ltrim(rtrim(totalsize)) as totsale,    
ltrim(rtrim(Licenseno)) as  fllicno,ltrim(rtrim(Licensename)) as  fllicname, t.trntpno  as trntpno 
from @tmpMain f
join tbl_category c on ltrim(rtrim(c.CategoryDesc)) = ltrim(rtrim(f.categorydesc))
join (select distinct SizeID, Alias from tbl_categorysizelinkup) lnk on ltrim(rtrim(lnk.alias)) = ltrim(rtrim(f.alias))
join tbl_size s on s.sizeid = lnk.sizeid
LEFT OUTER join @tptable t on convert(smalldatetime,convert(varchar,f.ForDate,102)) = convert(smalldatetime,convert(varchar,t.tpdate,102))
order by c.CategoryID, s.sizeid, fordate , iden

set @outbit = 1
set @outmsg='success'

End
GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_FetchSetup]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_FetchSetup]
GO

CREATE Proc [dbo].[Spr_Import_FetchSetup]
As
	Begin
		select * from tbl_import_ExcelMaster
	End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_CocktailCode]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_CocktailCode]
GO

CREATE Proc [dbo].[Spr_Import_CocktailCode]
@licenseid numeric(18,0),
@xmldata xml,
@IsSave bit,
@Outbit bit output,
@OutStatus varchar(100) output
AS
	BEGIN
		--VARS
		Declare @hDoc int  
		EXEC sp_xml_preparedocument @hDoc Output, @xmldata
		declare @tmp table
		(
		Cocktail varchar(100),
		CocktailCode varchar(50),
		Invalid bit,
		ErrMsg varchar(200)
		)
		Insert into @tmp
		select Cocktail,CocktailCode,0,''
		from openXML(@hdoc,'/ImportMaster/ImportData/DataDet') with 
		(
			Cocktail varchar(100),
			CocktailCode varchar(50)
		)
		if @IsSave =1
		begin
			insert into Tbl_AssignCocktailcode
			(CocktailID,Cocktailcode,LicenseId,Oprc,Dtc)
			select ct.CocktailID,t.CocktailCode,@licenseid,'System',GETDATE()
			from @tmp t
			join Tbl_Cocktail ct on ct.CocktailName=t.Cocktail
			select * from @tmp
			set @OutStatus='Saved Successfully'
		end
		else
			begin
				--Duplicate Cocktail code check
				update t 
				set t.Invalid=1,t.ErrMsg='Cocktail code already exists'
				from @tmp t
				join tbl_assigncocktailcode ct on ct.Cocktailcode= t.Cocktailcode
				
				update @tmp set  Invalid=1,ErrMsg= case when ErrMsg=  '' then 'Duplicate Cocktail code' else ErrMsg + 'Duplicate Cocktail code' end where 	Cocktailcode in 
						(select cocktailcode from @tmp group by cocktailcode having count(cocktailcode) > 1 and ltrim(rtrim(cocktailcode))<>'0')

				update t 
				set t.Invalid=1, t.ErrMsg = case when t.ErrMsg='' then 'Cocktail code exists in brand code'
						else t.ErrMsg + '/Cocktail code exists in brand code' end
				from @tmp t
				join tbl_assignbrandcode bc on bc.BrandCode= t.Cocktailcode

				--Invalid Cocktail Name check
				update t 
				set t.Invalid=1,t.ErrMsg= case when t.ErrMsg='' then 'Invalid Cocktail Name'
						else  t.ErrMsg + '/Invalid Cocktail Name' end

				from @tmp t
				left join Tbl_Cocktail ct on ct.CocktailName= t.Cocktail
				where ct.CocktailName is null
	
				select * from @tmp order by  Invalid,ErrMsg desc
				set @OutStatus='Imported'
			end
	END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_ExportPermit]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_ExportPermit]
GO

Create Proc [dbo].[Spr_Import_ExportPermit]
AS
BEGIN
	select '' as PermitHolderNumber, '' as PermitHolderName , '' as PermitExpireDate , '' as PermitType
END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_ExportCocktailcode]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_ExportCocktailcode]
GO

create Proc [dbo].[Spr_Import_ExportCocktailcode]
@params xml
As
	Begin
		select '' as Cocktail,'' as CocktailCode
	End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_ExportCocktail]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_ExportCocktail]
GO

CREATE Proc [dbo].[Spr_Import_ExportCocktail]
@params xml
As
	Begin
		select '' as COCKTAILNAME ,'' as BRAND ,'' as SIZE ,'' as QTY ,'' as RATE
	End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[SPR_IMPORT_ExportBrand]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[SPR_IMPORT_ExportBrand]
GO

CREATE PROC [dbo].[SPR_IMPORT_ExportBrand]
@params xml
AS
	BEGIN
		select '' AS Category,'' AS BrandDesc,'' AS ShortName,'' AS Strength,'' AS PurRatePeg,'' AS subcategory,'' AS Size,'' AS BoxQty,'' AS PurchaseRate
	END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_ExportBrandCode]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_ExportBrandCode]
GO    
create Proc [dbo].[Spr_Import_ExportBrandCode]  
@params xml  
AS  
Begin  
	Declare @LicID numeric(18,0)  
	Declare @hDoc int    
	EXEC sp_xml_preparedocument @hDoc Output, @params  

	select @LicID=LicenseID  
	from openXML(@hdoc,'/ImportMaster/ImportSetup/ParamsDet') with    
	(            
	LicenseID numeric(18,0)  
	)  
	--  Select bh.branddesc as Brand, lnk.alias as Size,'' as Speg, '' as Bottle, '' as lPeg  
	--  from tbl_brandopening bo  
	--  join tbl_categorysizelinkup lnk on bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID  
	--  join tbl_brandhead bh on bh.brandid = bo.brandid  
	--  where bo.licenseid=@LicID


	select '' as Category,'' as Brand,'' as Size, '' as Speg, '' as Bottle, '' as lPeg

End  
go 


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_BrandCode]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_BrandCode]
GO    

CREATE Proc [dbo].[Spr_Import_BrandCode]    
@licenseid numeric(18,0),    
@xmldata xml,    
@IsSave bit,    
@Outbit bit output,    
@OutStatus varchar(100) output    
AS    
 BEGIN    
  --VARS    
  Declare @hDoc int      
  EXEC sp_xml_preparedocument @hDoc Output, @xmldata    
  declare @tmp table    
  (    
   Category varchar(200),  
   Brand varchar(200),    
   Size varchar(100),    
   Speg varchar(100),    
   Bottle varchar(100),    
   lPeg varchar(100),    
   Invalid bit,    
   ErrMsg varchar(200)    
  )    
  Insert into @tmp    
  select Category,    
  --case when BrandOpeningID='' then null else convert(numeric(18,0),BrandOpeningID) end,    
  Brand, Size ,     
  case when Speg='' then null else ltrim(rtrim(Speg)) end as Speg,     
  case when Bottle='' then null else ltrim(rtrim(Bottle)) end as Bottle,     
  case when lPeg='' then null else ltrim(rtrim(lPeg)) end as lPeg,0,''    
  from openXML(@hdoc,'/ImportMaster/ImportData/DataDet') with      
  (    
   Category varchar(200),   
   Brand varchar(200),    
   Size varchar(100),    
   Speg varchar(100),    
   Bottle varchar(100),    
   lPeg varchar(100)    
  ) 
  

  if @IsSave = 1    
  begin    
   
  
 insert into tbl_assignbrandcode    
   (BrandID,BrandCode,TypeID,CategorySizeLinkUpID,LicenseID,BrandOpeningID)  
 select vw.BrandID, t.Bottle, 1, vw.CategorySizeLinkUpID, vw.LicenseID, vw.BrandOpeningID   
 from @tmp t
join vw_brandopeningdetails vw on vw.branddesc = t. Brand and vw.Alias=t.Size and vw.categorydesc=t.Category and vw.LicenseID = @licenseid 
 
 where  ltrim(rtrim(t.Bottle)) <> '0' 
  
 insert into tbl_assignbrandcode    
 (BrandID,BrandCode,TypeID,CategorySizeLinkUpID,LicenseID,BrandOpeningID)  
 select vw.BrandID, t.speg, 2, vw.CategorySizeLinkUpID, vw.LicenseID, vw.BrandOpeningID
 from @tmp t  
 join vw_brandopeningdetails vw on vw.branddesc = t. Brand and vw.Alias=t.Size and vw.categorydesc=t.Category and vw.LicenseID = @licenseid 
 where  ltrim(rtrim(t.speg)) <> '0'
  
 insert into tbl_assignbrandcode    
 (BrandID,BrandCode,TypeID,CategorySizeLinkUpID,LicenseID,BrandOpeningID)  
 select vw.BrandID, t.lpeg, 3, vw.CategorySizeLinkUpID, vw.LicenseID, vw.BrandOpeningID
 from @tmp t  
 join vw_brandopeningdetails vw on vw.branddesc = t. Brand and vw.Alias=t.Size and vw.categorydesc=t.Category and vw.LicenseID = @licenseid 
 where  ltrim(rtrim(t.lpeg)) <> '0'  
	select * from @tmp
	set @OutStatus=''
   
    
  end    
      
  else    
  begin 
	--Duplicate brand code check in  brand code
	update t  
    set t.Invalid=1, t.ErrMsg = 'Brand Code already exists'  
    from @tmp t  
     join tbl_assignBrandcode bc on ltrim(rtrim(bc.brandcode))=ltrim(rtrim(t.speg))
    where t.speg <> '0'
	update t  
    set t.Invalid=1, t.ErrMsg = 'Brand Code already exists'  
    from @tmp t  
   join tbl_assignBrandcode bc on ltrim(rtrim(bc.brandcode))=ltrim(rtrim(t.lpeg))
     where t.lpeg <> '0'
	update t  
    set t.Invalid=1, t.ErrMsg = 'Brand Code already exists'  
    from @tmp t  
    join tbl_assignBrandcode bc on ltrim(rtrim(bc.brandcode))=ltrim(rtrim(t.bottle))
	where t.bottle <> '0'

	--Duplicate brand code check in  cocktail code
	update t  
    set t.Invalid=1, t.ErrMsg = case when  t.ErrMsg='' then 'Brand Code already exists in Cocktail code' 
		else t.ErrMsg + '/Brand Code already exists in Cocktail code'   end
    from @tmp t  
     join tbl_assigncocktailcode ct on ltrim(rtrim(ct.Cocktailcode))=ltrim(rtrim(t.speg))
    where t.speg <> '0'
	update t  
    set t.Invalid=1,  t.ErrMsg = case when  t.ErrMsg='' then 'Brand Code already exists in Cocktail code' 
		else t.ErrMsg + '/Brand Code already exists in Cocktail code'  end
    from @tmp t  
   join tbl_assigncocktailcode ct on ltrim(rtrim(ct.Cocktailcode))=ltrim(rtrim(t.lpeg))
     where t.lpeg <> '0'
	update t  
    set t.Invalid=1, t.ErrMsg = case when  t.ErrMsg='' then 'Brand Code already exists in Cocktail code' 
		else t.ErrMsg + '/Brand Code already exists in Cocktail code' end
    from @tmp t  
    join tbl_assigncocktailcode ct on ltrim(rtrim(ct.Cocktailcode))=ltrim(rtrim(t.bottle))
	where t.bottle <> '0'

	--
	declare @Dup table(brandcode varchar(100))
	
	insert into @Dup(brandcode) select speg from @tmp where speg <> '0'
	insert into @Dup(brandcode) select lpeg from @tmp where lpeg <> '0'
	insert into @Dup(brandcode) select bottle from @tmp where bottle <> '0'
	
	update @tmp set Invalid=1,ErrMsg=case when  ErrMsg='' then 'Duplicate Brand code' else ErrMsg+'/Duplicate Brand code' end where speg in 
						(select brandcode from @Dup group by brandcode having count(brandcode) > 1 )			
	update @tmp set Invalid=1,ErrMsg=case when  ErrMsg='' then 'Duplicate Brand code' else ErrMsg+'/Duplicate Brand code' end where lpeg in 
						(select brandcode from @Dup group by brandcode having count(brandcode) > 1 )
	update @tmp set Invalid=1,ErrMsg=case when  ErrMsg='' then 'Duplicate Brand code' else ErrMsg+'/Duplicate Brand code' end where bottle in 
						(select brandcode from @Dup group by brandcode having count(brandcode) > 1 )
	
	--Invalid Category
      update t    
      set t.Invalid=1 , t.ErrMsg='Invalid Category'      
      from @tmp t    
     left outer join tbl_category c on c.CategoryDesc=t.category  
     where c.CategoryDesc is null  
      
    update t    
      set t.Invalid=1 , t.ErrMsg='Brand Not Found'      
      from @tmp t    
     left outer join Tbl_BrandHead b on b.BrandDesc=t.Brand   
     where b.brandDesc is null  
   
    update t  
    set t.Invalid=1, t.ErrMsg = 'Category & Size not Linked'  
    from @tmp t  
    join tbl_category c on c.CategoryDesc=t.category  
    left outer join Tbl_Categorysizelinkup lnk on lnk.CategoryID = c.CategoryID and lnk.Alias=t.Size and lnk.LicenseID = @licenseid  
    where lnk.CategorySizeLinkID is null  
  
       
    update t  
    set t.Invalid=1, t.ErrMsg = 'Brand Opening Not Found'  
	--select *
	from @tmp t  
	
    join Tbl_BrandHead b on b.BrandDesc=t.Brand  
	join Tbl_Categorysizelinkup lnk on lnk.CategoryID = b.CategoryID and lnk.Alias=t.Size and lnk.LicenseID = @licenseid  
    left outer join tbl_BrandOpening bo on bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID and bo.LicenseID = lnk.LicenseID  
    where bo.BrandOpeningID is null  
    
    
      update @tmp    
      set Invalid=1 , ErrMsg='No Codes found'    
      where Speg = '' and Bottle = '' and lpeg = ''   
  

     select * from @tmp order by Invalid,ErrMsg desc

    set @OutStatus='Import Succssfully'

     end    
 END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_Brand]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_Brand]
GO

CREATE Proc [dbo].[Spr_Import_Brand]
@licenseid numeric(18,0),
@xmldata xml,
@IsSave bit,
@Outbit bit output,
@OutStatus varchar(100) output
AS
	BEGIN
		--VARS
		Declare @hDoc int  
		EXEC sp_xml_preparedocument @hDoc Output, @xmldata
		declare @tmp table
		(
			Category varchar(50), 
			BrandDesc varchar(50), 
			ShortName varchar(50), 
			Strength numeric(14,2), 
			PurRatePeg numeric(14,2), 
			subcategory varchar(50), 
			Size varchar(100), 
			BoxQty numeric(14,0), 
			PurchaseRate numeric(14,0),
			Invalid bit,
			ErrMsg varchar(200)
		)

		--INSERT INTO TMP TABLE
		insert into @tmp		
		select  Category, BrandDesc, ShortName, Strength, PurRatePeg, subcategory, Size, BoxQty, PurchaseRate, 0, ''
		from openXML(@hdoc,'/ImportMaster/ImportData/DataDet') with  
		(          
			Category varchar(50), 
			BrandDesc varchar(50), 
			ShortName varchar(50), 
			Strength numeric(14,2), 
			PurRatePeg numeric(14,2), 
			subcategory varchar(50), 
			Size varchar(100), 
			BoxQty numeric(14,0), 
			PurchaseRate numeric(14,0)
		)

		if @IsSave = 1
		begin

			delete tmp
			from @tmp tmp
			join tbl_brandhead bh on ltrim(rtrim(bh.branddesc)) = ltrim(rtrim(tmp.BrandDesc))

			--INSERT INTO TBL_BRANDHEAD
			insert into tbl_brandhead(CategoryID,BrandDesc,ShortName,Strength,PurRatePeg,Oprc,Dtc,subcategoryid,PurchasePegRate)
			select distinct ctg.CategoryID,tmp.BrandDesc,substring(tmp.ShortName,1,8),tmp.Strength,tmp.PurRatePeg,'System',getdate(),sb.SubCategoryID,tmp.PurRatePeg
			from @tmp tmp
			join tbl_category ctg on ltrim(rtrim(ctg.CategoryDesc))=ltrim(rtrim(tmp.Category))
			left join tbl_subcategorymst sb on ltrim(rtrim(sb.SubCategoryName))=ltrim(rtrim(tmp.SubCategory)) and ctg.CategoryID=sb.CategoryID

			--INSERT INTO TBL_BRANDDETAILS
			insert into tbl_brandDet(BrandID,SizeID,BoxQty,PurchaseRate,Oprc,Dtc,PurchaseTrnRate)
			select distinct bh.BrandID,s.SizeID,tmp.BoxQty,tmp.PurchaseRate,'System',getdate(),tmp.PurchaseRate
			from @tmp tmp
			join tbl_brandhead bh on ltrim(rtrim(bh.BrandDesc))=ltrim(rtrim(tmp.BrandDesc))
			join tbl_categorysizelinkup s on s.categoryid = bh.categoryid and s.licenseid = @licenseid 
			and replace(ltrim(rtrim(s.alias)),' ', '') = replace(ltrim(rtrim(tmp.size)),' ', '')
			--join tbl_size s on s.SizeDesc = tmp.Size
			

			insert into tbl_branddet
			(BrandID, SizeID, BoxQty, PurchaseRate,Oprc, Dtc, PurchaseTrnRate)
			select bh.BrandID, lnk.SizeID, 0, 0, 'admin', getdate(), 0
			from tbl_categorysizelinkup lnk
			join tbl_brandhead bh on bh.categoryid = lnk.categoryid 
			left outer join tbl_branddet det on det.brandid = bh.brandid and det.SizeID = lnk.SizeID
			where det.SizeID is null and lnk.licenseid = @licenseid --and lnk.categoryid = @CategoryId

			set @Outbit = 1
			set @OutStatus  = 'Saved successfully'
			select '11' as [MAK]
		End
		else
		begin
			
			update tmp
			set Invalid = 1,
			ErrMsg = 'Category not found'
			from @tmp tmp
			left outer join tbl_category ctg on ltrim(rtrim(ctg.CategoryDesc))=ltrim(rtrim(tmp.Category))
			where ctg.CategoryDesc is null

--			update tmp
--			set Invalid = 1,ErrMsg = case when ErrMsg='' then 'SubCategory not found' else
--			ErrMsg + ' / SubCategory not found' end
--			from @tmp tmp
--			join tbl_category ctg on ltrim(rtrim(ctg.CategoryDesc))=ltrim(rtrim(tmp.Category))
--			left outer join tbl_subcategorymst sb on ltrim(rtrim(sb.SubCategoryName))=ltrim(rtrim(tmp.SubCategory)) and ctg.CategoryID=sb.CategoryID			
--			where sb.SubCategoryName is null

			--select * from @tmp
			/*
			update tmp
			set Invalid = 1,
			ErrMsg = case when ErrMsg='' then 'Size not found' else
			ErrMsg + ' / Size not found' end
			from @tmp tmp
			left outer join Tbl_Size sz on sz.SizeDesc=tmp.Size
			where sz.SizeDesc is  null
			*/
			
			update tmp
			set Invalid = 1,ErrMsg = case when ErrMsg='' then 'Category/Size link not found' else
			ErrMsg + ' / Category-Size link not found' end
			from @tmp tmp
			left join tbl_category ctg on ctg.CategoryDesc=tmp.Category
			--left join Tbl_Size s on s.SizeDesc = tmp.Size
			left outer join tbl_categorysizelinkup lnk on lnk.categoryid = ctg.categoryid 
			and replace(ltrim(rtrim(lnk.alias)),' ', '') = replace(ltrim(rtrim(tmp.size)),' ', '')
			and lnk.licenseid = @licenseid
			where lnk.categoryid is null 
		
			update tmp
			set Invalid = 1,ErrMsg = case when ErrMsg='' then 'Brand Name already exists' else
			ErrMsg + ' / Brand Name already exists' end
			from @tmp tmp
			join tbl_brandhead bh on ltrim(rtrim(bh.BrandDesc))=ltrim(rtrim(tmp.BrandDesc))
			
			update @tmp set 
			Invalid = 1,ErrMsg = case when ErrMsg='' then 'Repeated Brand Name' else
			ErrMsg + ' / Repeated Brand Name' end
			where BrandDesc in (select BrandDesc from @tmp group by BrandDesc, Size having count(BrandDesc) > 1)
			
			update tmp
			set Invalid = 1,ErrMsg = case when ErrMsg='' then 'Short Name already exists' else
			ErrMsg + ' / Short Name already exists' end
			from @tmp tmp
			join tbl_brandhead bh on ltrim(rtrim(bh.ShortName))=ltrim(rtrim(tmp.ShortName))

			update @tmp set 
			Invalid = 1,ErrMsg = case when ErrMsg='' then 'Repeated ShortName' else
			ErrMsg + ' / Repeated ShortName' end
			where ShortName in (select ShortName from @tmp group by ShortName, BrandDesc, Size having count(ShortName) > 1)

			select 
			tmp.Category, tmp.BrandDesc, tmp.ShortName, tmp.Strength, tmp.PurRatePeg, tmp.subcategory, tmp.Size, tmp.BoxQty, tmp.PurchaseRate,
			isnull(tmp.Invalid,0) as Invalid, isnull(tmp.ErrMsg,'') as ErrMsg
			from @tmp tmp
			left join tbl_category ctg on ctg.CategoryDesc=tmp.Category
			left join Tbl_Size s on s.SizeDesc = tmp.Size
			left outer join tbl_categorysizelinkup lnk on lnk.categoryid = ctg.categoryid and lnk.sizeid = s.sizeid and lnk.licenseid = @licenseid
			where tmp.Category is not null
			order by Invalid desc
			

			set @Outbit = 0
			set @OutStatus  = ''
		end
	END
GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_BrandOpeningExport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_BrandOpeningExport]
GO

CREATE Proc [dbo].[Spr_Import_BrandOpeningExport]
@params xml
AS
	Begin

		Declare @LicID numeric(18,0)
	
		Declare @hDoc int  
		EXEC sp_xml_preparedocument @hDoc Output, @params
		
		select @LicID=LicenseID
		 from openXML(@hdoc,'/ImportMaster/ImportSetup/ParamsDet') with  
		  (          
			LicenseID numeric(18,0)
		  )

		SELECT
		c.CategoryDesc as Category, bh.BrandDesc as Brand , lnk.CategorySizeLinkID, lnk.Alias as Size , '' as sRate , '' as OpeningQty, '' as OpSpQty, 
		'' as BaseQty, '' as OrdNo
		from Tbl_CategorySizeLinkup lnk
		join Tbl_Category c on lnk.Categoryid = c.categoryid
		join Tbl_BrandHead bh on bh.Categoryid = c.categoryid
		join Tbl_BrandDet dt on bh.brandid = dt.brandid and dt.SizeID = lnk.Sizeid
		join Tbl_License l on l.LicenseID = lnk.LicenseID
		where L.LicenseID = @LicID and bh.BrandDesc = 'zandoooo'
		ORDER BY bh.BrandDesc 

	End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_BrandOpening]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_BrandOpening]
GO

CREATE Proc [dbo].[Spr_Import_BrandOpening]
@licenseid numeric,	
@xmldata xml,
@IsSave bit,
@Outbit bit output,
@OutStatus varchar(100) output
As
Begin

	Declare @hDoc int  
	EXEC sp_xml_preparedocument @hDoc Output, @xmldata
	declare @tmp table
	(
		Category varchar(50),
		Brand varchar(100),
		CategorySizeLinkID numeric(18,0),
		Size varchar(60),
		sRate numeric(14,2),
		OpeningQty numeric(18,0),
		OpSpQty numeric(18,0),
		BaseQty numeric(18,0),
		OrdNo numeric(18,0),
		Invalid bit,
		ErrMsg varchar(200)
	)

	insert into @tmp		
	select distinct Category,Brand,isnull(CategorySizeLinkID,0) as CategorySizeLinkID,
	case when Size='' then '0' else Size end as Size,
	case when sRate='' then 0 else convert(numeric(14,2),sRate) end as sRate,
	case when OpeningQty='' then 0 else convert(numeric(18,0),OpeningQty)end as OpeningQty,
	case when OpSpQty='' then 0 else convert(numeric(18,0),OpSpQty)end as OpSpQty,
	case when BaseQty='' then 0 else convert(numeric(18,0),BaseQty)end as BaseQty,
	case when OrdNo='' then 0 else convert(numeric(18,0),OrdNo)end as OrdNo, 0, ''
	from openXML(@hdoc,'/ImportMaster/ImportData/DataDet') with  
	(
		Category varchar(50),
		Brand varchar(100),
		CategorySizeLinkID numeric(18,0),
		Size varchar(50),
		sRate varchar(50),
		OpeningQty varchar(50),
		OpSpQty varchar(50),
		BaseQty varchar(50),
		OrdNo varchar(50)
	)

	if @isSave=1
	begin
		update bo 
		set 
		bo.sRate=t.sRate,bo.OpeningQty=t.OpeningQty,bo.OpSpQty=t.OpSpQty,bo.BaseQty=t.BaseQty,bo.OrdNo=t.OrdNo  
		from @tmp t
		join vw_brandopeningdetails vw on ltrim(rtrim(vw.BrandDesc))=ltrim(rtrim(t.Brand)) and replace(ltrim(rtrim(vw.alias)),' ', '') = replace(ltrim(rtrim(t.size)),' ','')
		and	ltrim(rtrim(vw.CategoryDesc))=ltrim(rtrim(t.Category))
		join  Tbl_Brandopening bo on  bo.brandopeningid=vw.brandopeningid
		where  vw.licenseid = @licenseid

		delete t
		from @tmp t
		join vw_brandopeningdetails vw on ltrim(rtrim(vw.BrandDesc))=ltrim(rtrim(t.Brand)) and replace(ltrim(rtrim(vw.alias)),' ', '') = replace(ltrim(rtrim(t.size)),' ','')
		and	ltrim(rtrim(vw.CategoryDesc))=ltrim(rtrim(t.Category))
		join  Tbl_Brandopening bo on  bo.brandopeningid=vw.brandopeningid
		where  vw.licenseid = @licenseid

		insert into Tbl_Brandopening
		(BrandID,LicenseID,CategorySizeLinkUpID,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo,Oprc,Dtc,PurchaseUnitQty,NonMovingQty,PurchaseUnitRate,MasterUnitBottleRate)
		select distinct b.BrandID,@licenseid,lnk.CategorySizeLinkID,sRate,t.OpeningQty,t.OpSpQty,t.BaseQty,OrdNo,'System',getdate(),
		dbo.Fun_Calcunits(lnk.CategorySizeLinkID,t.OpeningQty,t.OpSpQty),
		dbo.Fun_Calcunits(lnk.CategorySizeLinkID,t.OpeningQty,t.OpSpQty),    
		b.PurRatePeg,
		det.PurchaseRate
		from @tmp t
		join Tbl_BrandHead b on ltrim(rtrim(b.BrandDesc))=ltrim(rtrim(t.Brand))
		join Tbl_BrandDet det on det.brandid=b.brandid
		--join Tbl_CategorySizelinkup lnk on lnk.CategorySizeLinkID = t.CategorySizeLinkID
		join Tbl_Category c on ltrim(rtrim(c.CategoryDesc))=ltrim(rtrim(t.Category)) and c.categoryid = b.categoryid
		join Tbl_CategorySizeLinkUp lnk on lnk.categoryid = c.categoryid 
		and replace(ltrim(rtrim(lnk.alias)),' ', '') = replace(ltrim(rtrim(t.size)),' ','') and lnk.licenseid = @licenseid	
		and lnk.sizeid = det.sizeid

		insert into tbl_brandsalerate
		(BrandID, LicenseID, SpegRate, LpegRate, Oprc, Dtc)
		select distinct vw.BrandId, vw.licenseid, 0, 0, 'System',getdate()
		from vw_BrandOpeningDetails vw
		join @tmp t on vw.branddesc = t.Brand

		set @Outbit =1
		set @OutStatus ='Saved Successfully'

		select '11' as [MAK]
	end
	else
	begin

		update t
		set t.Invalid=1, t.ErrMsg='Category Not found' 
		from @tmp t
		left outer join Tbl_Category c on lower(c.CategoryDesc)=lower(t.Category)
		where c.CategoryDesc is null

		update t
		set t.Invalid=1, t.ErrMsg=
		case when t.ErrMsg='' then 'Brand Not found' else t.ErrMsg+' / Brand Not found' end
		from @tmp t
		left outer join Tbl_BrandHead b on lower(b.BrandDesc)=lower(t.Brand)
		where b.BrandDesc is null

		update t
		set t.Invalid=1,t.ErrMsg = case when t.ErrMsg='' then 'Invalid CategorySizeLinkID' else t.ErrMsg+' / Invalid CategorySizeLinkID' end
		from @tmp t
		left outer join Tbl_Category c on ltrim(rtrim(c.CategoryDesc))=ltrim(rtrim(t.Category))
		left outer join Tbl_CategorySizeLinkUp lnk on lnk.categoryid = c.categoryid 
		and replace(ltrim(rtrim(lnk.alias)),' ', '') = replace(ltrim(rtrim(t.size)),' ','') and lnk.licenseid = @licenseid
		--left outer join Tbl_CategorySizeLinkUp c on c.CategorySizeLinkID=t.CategorySizeLinkID
		where lnk.CategorySizeLinkID is null

		update t
		set t.Invalid=1,t.ErrMsg = case when t.ErrMsg='' then 'Invalid Category' else t.ErrMsg+' / Invalid Category' end
		from @tmp t
		left join Tbl_Category c on ltrim(rtrim(c.CategoryDesc))=ltrim(rtrim(t.Category))
		where c.CategoryDesc is null

		--select b.BrandID,l.LicenseID,t.CategorySizeLinkID,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo,Invalid,ErrMsg from @tmp t
		--join Tbl_BrandHead b on b.BrandDesc=t.Brand
		--join Tbl_License l on l.Licenseid=@licenseid
		set @Outbit = 0
		set @OutStatus =''
		select * from @tmp order by Invalid desc

	end
End
GO



IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_Cocktail]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_Cocktail]
GO

CREATE Proc [dbo].[Spr_Import_Cocktail]
@licenseid numeric,	
@xmldata xml,
@IsSave bit,
@Outbit bit output,
@OutStatus varchar(100) output
As
	Begin
		Declare @hDoc int  
		EXEC sp_xml_preparedocument @hDoc Output, @xmldata
		declare @tmp table
		(
			COCKTAILNAME varchar(150),BRAND varchar(200),SIZE varchar(50),QTY int,RATE numeric(14,2),Invalid bit,
			ErrMsg varchar(200)
		)
		--INSERT INTO TMP TABLE
		insert into @tmp
		select COCKTAILNAME,BRAND,SIZE,QTY,RATE,0,''
		from openXML(@hdoc,'/ImportMaster/ImportData/DataDet') with  
		( 
			COCKTAILNAME varchar(150),BRAND varchar(200),SIZE varchar(50),QTY int,RATE numeric(14,2)
		)
		
		if @IsSave=1
			Begin

				insert into tbl_cocktail(CocktailName) 
				select distinct t.COCKTAILNAME 
				from @tmp t
				left outer join tbl_cocktail c on t.COCKTAILNAME = c.CocktailName
				join vw_BrandOpeningDetails vw on ltrim(rtrim(vw.branddesc)) = ltrim(rtrim(t.BRAND)) and ltrim(rtrim(vw.alias)) = ltrim(rtrim(t.SIZE))
				where vw.licenseid = @licenseid and c.CocktailName is null
				
				insert into Tbl_Cocktaildetail(CocktailID,BrandOpeningId,Speg,CategorysizelinkID,Licenceid,Oprc,Dtc)
				select distinct ct.CocktailID,vw.brandopeningid,tmp.QTY,vw.CategorySizeLinkUpID,@licenseid,'System',getdate()
				from @tmp tmp
				join tbl_cocktail ct on ltrim(rtrim(ct.CocktailName)) = ltrim(rtrim(tmp.COCKTAILNAME))
				join vw_BrandOpeningDetails vw on ltrim(rtrim(vw.branddesc)) = ltrim(rtrim(tmp.BRAND)) and ltrim(rtrim(vw.alias)) = ltrim(rtrim(tmp.SIZE))
				where vw.licenseid = @licenseid

				insert into tbl_cocktailrate(Rate,CocktailID,LicenseID)
				select distinct RATE,ct.CocktailID,@licenseid
				from @tmp tmp
				join tbl_cocktail ct on ltrim(rtrim(ct.CocktailName)) = ltrim(rtrim(tmp.COCKTAILNAME))

				set @Outbit = 1
				set @OutStatus  = 'Saved successfully'
				select '11' as [MAK]
			End
		Else
			Begin
				--select * from @tmp				
				update t
				set t.Invalid=1, t.ErrMsg='Brand Not found' 
				from @tmp t
				left outer join Tbl_BrandHead b on ltrim(rtrim(b.BrandDesc))=ltrim(rtrim(t.Brand))
				where b.BrandDesc is null

				update t
				set t.Invalid=1,t.ErrMsg  = case when t.ErrMsg ='' then 'Category & Size not Linked' else
				ErrMsg + ' / Category & Size not Linked' end 
				from @tmp t
				join Tbl_BrandHead b on ltrim(rtrim(b.BrandDesc))=ltrim(rtrim(t.Brand))
				left outer join Tbl_Categorysizelinkup lnk on lnk.CategoryID = b.CategoryID and lnk.Alias=t.Size and lnk.LicenseID = @licenseid
				where lnk.CategorySizeLinkID is null

				update t
				set t.Invalid=1,t.ErrMsg  = case when t.ErrMsg ='' then 'Cocktail name already exists' else
				ErrMsg + ' / Cocktail name already exists' end
				from @tmp t
				join tbl_cocktail c on ltrim(rtrim(c.CocktailName))=ltrim(rtrim(t.CocktailName))
				
--				
--				update t
--				set t.Invalid=1, t.ErrMsg = 'Brand not opened'
--				from @tmp t
--				join Tbl_BrandHead b on ltrim(rtrim(b.BrandDesc))=ltrim(rtrim(t.Brand))
--				join Tbl_Categorysizelinkup lnk on lnk.CategoryID = b.CategoryID and ltrim(rtrim(lnk.Alias))=ltrim(rtrim(t.Size)) and lnk.LicenseID = @licenseid
--				left outer join tbl_BrandOpening bo on bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID and bo.LicenseID = @licenseid
--				where bo.BrandOpeningID is null

				update tmp
				set tmp.Invalid=1, tmp.ErrMsg = 'Brand not opened'		
				FROM @tmp tmp
				left join vw_BrandOpeningDetails vw on ltrim(rtrim(vw.branddesc)) = ltrim(rtrim(tmp.BRAND)) 
				and ltrim(rtrim(vw.alias)) = ltrim(rtrim(tmp.SIZE)) and vw.LicenseID = @licenseid
				where vw.BrandOpeningID is null

				update @tmp
				set Invalid=1, ErrMsg = case when ErrMsg='' then '' else
				ErrMsg + '' end
				where COCKTAILNAME in (select distinct COCKTAILNAME from @tmp where Invalid=1)


				set @Outbit = 1
				set @OutStatus  = 'Updated'
				select * from @tmp
			End
	END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_Supplier]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_Supplier]
GO

CREATE Proc [dbo].[Spr_Import_Supplier]
@licenseid numeric(18,0),
@xmldata xml,
@IsSave bit,
@Outbit bit output,
@OutStatus varchar(100) output
AS
	BEGIN
		--VARS
		Declare @hDoc int  
		EXEC sp_xml_preparedocument @hDoc Output, @xmldata
		declare @tmp table(SupplierName varchar(200),Address varchar(500),City varchar(100),Pincode varchar(50),Telephone varchar(50),Email varchar(100),Invalid bit,
			ErrMsg varchar(200))
		
		--INSERT INTO Temp TABLE
		insert into @tmp
		select SupplierName,Address,City,Pincode,Telephone,Email,0,''
		 from openXML(@hdoc,'/ImportMaster/ImportData/DataDet') with  
		  (          
			SupplierName varchar(200),Address varchar(500),City varchar(100),Pincode varchar(50),Telephone varchar(50),Email varchar(100)
		  )
        
		if @IsSave=1
		Begin
			--INSERT INTO TBL_SUPPLIER
			insert into tbl_supplier(SupplierName,Address,City,Pincode,Telephone,Email,Oprc,Dtc)
			select SupplierName,Address,City,Pincode,Telephone,Email,'System',getdate() from @tmp
			set @OutStatus='Inserted Successfully'
			set @Outbit=1
			select '11' as [MAK]
		END
		Else
		Begin
			select * from @tmp
			set @OutStatus=''
			set @Outbit=1
		End
	END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Import_Permit]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Import_Permit]
GO

CREATE Proc [dbo].[Spr_Import_Permit]
@licenseid numeric(18,0),
@xmldata xml,
@IsSave bit,
@OutBit bit output,
@OutStatus varchar(100) output
AS
	BEGIN
		--VARS
		Declare @hDoc int  
		EXEC sp_xml_preparedocument @hDoc Output, @xmldata
		declare @tmp table(PermitHolderNumber varchar(100),PermitHolderName varchar(100),PermitExpireDate smalldatetime,PermitType varchar(100),Invalid bit,
		ErrMsg varchar(200))
		
		Insert into @tmp
		select PermitHolderNumber,PermitHolderName,PermitExpireDate,PermitType,0,''
		from openXML(@hdoc,'/ImportMaster/ImportData/DataDet') with  
		(
			PermitHolderNumber varchar(100),PermitHolderName varchar(100),PermitExpireDate smalldatetime,PermitType varchar(100)
		)
		If @IsSave=1
			BEGIN
				insert into Tbl_PermitHolderMaster(PermitHolderNumber,PermitHolderName,PermitExpireDate,PermitTypeID,Oprc,Dtc)
				select PermitHolderNumber,PermitHolderName,PermitExpireDate,pt.PermitTypeID,'System',getdate()
				from @tmp t
				join Tbl_PermitTypeMaster pt on pt.PermitDesc = t.PermitType
			END
		Else
			BEGIN
				update t
				set Invalid = 1,
				ErrMsg = 'Permit type not found!'
				from @tmp t
				left join Tbl_PermitTypeMaster pm on pm.PermitDesc=t.PermitType
				where pm.PermitDesc is null
				set @OutBit=0
				set @OutStatus=''
				select * from @tmp
			END
	END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_ExportSupplier') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_ExportSupplier
GO

CREATE Proc Spr_ExportSupplier
@params xml
AS
	BEGIN
		select '' as SupplierName,'' as Address,'' as City,'' as Pincode,'' as Telephone,'' as Email
	END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_QV_FetchBrandQuantity]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_QV_FetchBrandQuantity] 
GO    

CREATE Procedure [dbo].[Spr_QV_FetchBrandQuantity] --'23-nov-2012',1     
@date smalldatetime,      
@LicenseID numeric(18,0)      
As      
Begin

	declare @optemp table
	(
		BrandOpeningID numeric(18,0),
		Units numeric(18,0)
	)
	
	declare @opdate smalldatetime
	set @opdate = @date - 1
	insert into @optemp (BrandOpeningID, Units) exec Spr_GetClosingStock @licenseid, @opdate

	declare @temp table             
	(         
		brandid numeric(18,0),            
		CategorySizeLinkUpID numeric(18,0),         
		bottle int default 0,            
		spag int default 0,        
		Glass int default 0,      
		TransferQuantity varchar(50)
	)
	insert into @temp
	(brandid,CategorySizeLinkUpID,bottle,spag,Glass,TransferQuantity)
	Select
	vw.brandid, vw.CategorySizeLinkUpID, dbo.Fun_Calcbottlefromspeg(op.Units, vw.CategorySizeLinkUpID), 
	dbo.Fun_Calcspegfromspeg(op.Units, vw.CategorySizeLinkUpID), 0, 0
	from @optemp op
	join vw_brandopeningdetails vw on vw.brandopeningid = op.brandopeningid
	where vw.licenseid = @LicenseID

/*
	declare @temp table             
	(         
		brandid numeric(18,0),            
		CategorySizeLinkUpID numeric(18,0),         
		bottle int default 0,            
		spag int default 0,        
		Glass int default 0,      
		TransferQuantity varchar(50)
	)


	insert into @temp 
	(brandid,CategorySizeLinkUpID) 
	select distinct 
	brandid, CategorySizeLinkUpID       
	from tbl_brandopening 
	where licenseid = @LicenseID
	--and brandid = 5
	order by brandid 

	----------For While Loop-------------------            
	declare @tempwhile table            
	(            
	brandid numeric(18,0),      
	CategorySizeLinkUpID numeric(18,0),      
	brandopeningid numeric(18,0)      
	)            
	insert into @tempwhile (brandid,CategorySizeLinkUpID,brandopeningid)       
	select distinct brandid, CategorySizeLinkUpID, brandopeningid from tbl_brandopening       
	where licenseid = @licenseid  
	--and brandid = 5
	order by brandid            

	--Unused Table----------
	declare @inserttemptable table
	(
	brandid numeric(18,0),
	BrandStock varchar(200)
	)

	declare @brandid numeric(18,0)      
	declare @CategorySizeLinkUpID numeric(18,0)      
	declare @brandopeningid numeric(18,0)
	declare @stockqty numeric(18,0)

	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @brandopeningid = 0
	set @stockqty = 0

	while (select count(*) from @tempwhile) > 0              
	begin
		select top 1 @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID, @brandopeningid = brandopeningid from @tempwhile order by  brandid

		insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @LicenseID, @CategorySizeLinkUpID, @stockqty output

		update @temp
		set bottle = dbo.Fun_Calcbottlefromspeg(@stockqty,@CategorySizeLinkUpID),  
		spag = dbo.Fun_Calcspegfromspeg(@stockqty,@CategorySizeLinkUpID),
		TransferQuantity = 0
		where brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID      

		delete from @tempwhile where brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID      
	end
	*/

	Declare @IsSettlement bit  
	set @IsSettlement=0  

	Declare @countRecord int  
	set @countRecord=0  

	select @countRecord=count(*) from tbl_variance where licenseid=LicenseID and VarDate=@date   

	if @countRecord > 1  
	begin  
	set @IsSettlement=1  
	end  


	select bo.BrandOpeningID,lnk.CategorySizeLinkID, bh.branddesc as [Brand Name],ctg.CategoryDesc as [Category] ,lnk.Alias as [Size],       
	temp.Bottle, temp.spag as sPeg, TransferQuantity,       
	case when varn.ActBottle<>-99999 then varn.ActBottle end as inBottle,      
	case when varn.ActSpeg<>-99999 then varn.ActSpeg end as inSpeg,      
	case                       
	when ctg.CategoryDesc like '%BEER%' then  1                        
	when ctg.CategoryDesc like '%wine%' then  2 
	when ctg.CategoryDesc like '%SPIRIT%' then 3  
	end  as Categorytype,@IsSettlement as IsSettlement,@LicenseID as LicenseID    
	from @temp temp      
	join tbl_Brandhead bh on bh.brandid = temp.brandid    
	join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = temp.CategorySizeLinkUpID      
	join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID      
	join tbl_brandopening bo on bo.BrandID = bh.brandid and bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID and bo.LicenseID = @LicenseID      
	left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID and varn.VarDate = @date      
	--left outer join tbl_variance cprev on cprev.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = cprev.LicenseID and cprev.VarDate = @previousdate      
	order by ctg.CategoryDesc, bh.branddesc

	select       
	case when varn.DispBottle<>-99999 then varn.DispBottle end as Bottle,      
	case when varn.DispSpeg<>-99999 then varn.DispSpeg end as sPeg,      
	case when varn.varbottle<>-99999 then varn.varbottle end as HdBottle,       
	case when varn.varspeg<>-99999 then varn.varspeg end as HdsPeg       
	from @temp temp      
	join tbl_Brandhead bh on bh.brandid = temp.brandid      
	join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = temp.CategorySizeLinkUpID
	join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID            
	join tbl_brandopening bo on bo.BrandID = bh.brandid and bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID and bo.LicenseID = @LicenseID      
	left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID and varn.VarDate = @date      
	order by ctg.CategoryDesc, bh.branddesc



/*
 declare @previousdate smalldatetime      
 select top 1 @previousdate = VarDate from vw_fetchdistinctVariance --where VarDate < @date      
 order by VarDate desc      
 --select @previousdate      
      
 declare @prevTable table      
 (      
  BrandOpeningID numeric(18,0),      
  Bottle numeric(18,0),      
  sPeg numeric(18,0),      
  Glass numeric(18,0),      
  unitqty numeric(18,0)      
 )      

 insert into @prevTable      
 (BrandOpeningID, Bottle, sPeg, Glass, unitqty)      
 select vw.BrandOpeningID, 0, 0, 0, 0
 from vw_FetchVarianceTable vw      
 join tbl_brandopening bo on bo.BrandOpeningID = vw.BrandOpeningID

     /* 
 insert into @prevTable      
 (BrandOpeningID, Bottle, sPeg, Glass, unitqty)      
 select vw.BrandOpeningID, isnull(vw.Bottle,0), isnull(vw.sPeg,0), isnull(vw.Glass,0),      
 dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(vw.Bottle,0), isnull(vw.sPeg,0) + isnull(vw.Glass,0))      
 from vw_FetchVarianceTable vw      
 join tbl_brandopening bo on bo.BrandOpeningID = vw.BrandOpeningID      
 --where vw.VarDate < @previousdate and vw.LicenseID = @LicenseID      
    */
  
 --select * from @prevTable      
 --declare @date smalldatetime            
 --declare @LicenseID numeric(18,0)            
 --set @date = '06-Jun-2012'      
 --set @LicenseID = 27      
 --select @date=FreezDate,@LicenseID=LicenseID from Tbl_FreezMaster where FreezID=@FreezID            
 --print  @date            
 --print  @LicenseID            
 declare @temp table             
 (         
  brandid numeric(18,0),            
  CategorySizeLinkUpID numeric(18,0),         
  bottle int default 0,            
  spag int default 0,        
  Glass int default 0,      
  TransferQuantity varchar(50)      
  --Purchasedate smalldatetime            
 )
 
 --select * from tbl_brandopening where brandopeningid = 308
             
 insert into @temp 
 (brandid,CategorySizeLinkUpID) 
 select distinct 
 brandid, CategorySizeLinkUpID       
 from tbl_brandopening where licenseid = @LicenseID
 and brandid = 5      
 --and CategorySizeLinkUpID = 198      
 order by brandid            
 --select * from @temp            
      
 ----------For While Loop-------------------            
 declare @tempwhile table           
 (            
  brandid numeric(18,0),      
  CategorySizeLinkUpID numeric(18,0),      
  brandopeningid numeric(18,0)      
 )            
 insert into @tempwhile (brandid,CategorySizeLinkUpID,brandopeningid)       
 select distinct brandid, CategorySizeLinkUpID, brandopeningid from tbl_brandopening       
 where licenseid = @licenseid  and brandid = 5
 --and CategorySizeLinkUpID = 198      
 order by brandid            
 ----------end----------------------------            
      
 --select * from @tempwhile      
 -------------while start---------------            
 declare @brandid numeric(18,0)      
 declare @CategorySizeLinkUpID numeric(18,0)      
 declare @brandopeningid numeric(18,0)      
      
 while (select count(*) from @tempwhile) > 0              
 begin            
 select top 1 @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID, @brandopeningid = brandopeningid from @tempwhile order by  brandid            
 declare @categorytype int                      
 set @categorytype=0                      
 select @categorytype=                      
 case                       
 when c.CategoryDesc like '%BEER%' then  1                        
 when c.CategoryDesc like '%wine%' then  2                      
 when c.CategoryDesc like '%SPIRIT%' then 3                      
 end             
 from tbl_BrandHead b join Tbl_Category c                      
 on b.CategoryID=c.CategoryID where b.brandid = @brandid       
      
 declare @StockIN char(1)        
 declare @spegqty numeric(18,0)        
 declare @sizeml int     
 declare @totalspges numeric(18,0)      
 declare @outletpegs numeric(18,0)      
       
  declare @TransferLicenseID numeric(18,0)      
  declare @TransferCategoryID numeric(18,0)      
  declare @TransferSizeID numeric(18,0)      
  declare @TransferCategorySizeLinkID numeric(18,0)      
      
  set @TransferLicenseID = 0      
  set @TransferCategoryID = 0      
  set @TransferSizeID = 0      
  set @TransferCategorySizeLinkID = 0        
      
  select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID       
  from tbl_categorysizelinkup       
  where CategorySizeLinkID = @CategorySizeLinkUpID      
     
  select @TransferCategorySizeLinkID = CategorySizeLinkID      
  from tbl_categorysizelinkup      
  where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID      
      
 ---------------------------------------------------------update Beer---------------------------------------------------------------                      
 if @categorytype =  1                      
 begin      
      
  declare @salebottleqty numeric(18,0)      
  declare @freeqty numeric(18,0)      
  declare @purbottleqty numeric(18,0)      
  set @purbottleqty=0      
  set @salebottleqty = 0      
  set @freeqty = 0      
  set @outletpegs = 0      
      
  update t set t.bottle=b.OpeningQty                     
  from @temp t       
  join  tbl_brandopening b on b.brandid=t.brandid and b.CategorySizeLinkUpID = t.CategorySizeLinkUpID      
  where b.brandid = @brandid and b.LicenseID=@LicenseID                  
  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID      
      
  select @purbottleqty = sum(pd.BottleQty)      
  from tbl_purchasehead ph                  
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                   
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID          
  where bo.brandid =@brandid and bo.licenseid =@licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
     
        
        
     select @freeqty = sum(pd.FreeQty)      
  from tbl_purchasehead ph                  
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                   
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID          
  where bo.brandid =@brandid and bo.licenseid =@licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
        
        
  declare @transfer numeric(18,0)      
  set @transfer=0      
      
  select @transfer=sum(td.BottleQty)      
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by td.BrandOpeningID      
        
  /*      
  select @transfer=sum(td.BottleQty) 
 from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                   
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID          
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
  */    
        
  declare @fortransfer numeric(18,0)      
  set @fortransfer = 0      
        
  select @fortransfer=sum(td.BottleQty)      
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                   
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null         
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)       
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  select @purbottleqty = @purbottleqty + unitqty from @prevTable where brandopeningid = @brandopeningid      
      
  Update @temp      
  set bottle=bottle + @purbottleqty + @freeqty + @transfer - @fortransfer      
  where brandid =@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID      
      
  select @salebottleqty=sum(sd.BottleQty)      
  from Tbl_SaleHead s              
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId              
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId      
  where bo.brandid =@brandid and bo.licenseid =@licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID        
      
  -- this transfer quantity is added for inter outlets      
  Select @outletpegs = @outletpegs + (sum(td.BottleQty) * @sizeml)      
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                  
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                 
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  update @temp                 
  set bottle=bottle - @salebottleqty,      
  TransferQuantity =@outletpegs      
  where brandid =@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID       
        
        
      
 end             
 ------------------------------------------------------------------end----------------------------------------------------------------------------            
      
 -----------------------------------------------------------------update Wine---------------------------------------------------------------------                      
 if @categorytype = 2                         
 begin        
      
 set @StockIN = 'G'        
 set @spegqty = 0        
 set @sizeml = 0 
 set @totalspges = 0        
 set @outletpegs = 0      
       
select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID        
 --print @spegqty        
 --print @sizeml        
      
 if lower(@StockIN) <> 'm'        
 begin        
  --print 'sachin'        
      
        
  select @totalspges = b.OpeningQty * @spegqty         
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                        
      
  select @totalspges = @totalspges + b.OpSpQty        
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID        
        
  --print 'After brandopening: '+convert(varchar,@totalspges)        
      
  Select @totalspges = abs(@totalspges + (sum(pd.BottleQty) * @spegqty))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
        
        
  Select @totalspges = abs(@totalspges + (sum(pd.FreeQty) * @spegqty))    
  from tbl_purchasehead ph         
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = abs(@totalspges + sum(pd.SQuantity))    
  from tbl_purchasehead ph                   
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)          
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
      
  Select @totalspges = abs(@totalspges + (sum(td.BottleQty) * @spegqty))    
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))        
  group by td.BrandOpeningID      
      
  Select @totalspges = abs(@totalspges + sum(td.spegqty))    
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))        
  group by td.BrandOpeningID      
      
  /*      
  Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)      
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                   
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID          
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = @totalspges + sum(td.spegqty)      
  from Tbl_TransferHeadMst th                  
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                   
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
  */      
      
  Select @totalspges = abs(@totalspges - (sum(td.BottleQty) * @spegqty))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                   
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null         
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)       
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = abs(@totalspges - sum(td.spegqty))    
  from Tbl_TransferHeadMst th                  
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                   
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null      
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)       
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  --print 'After purchase: '+convert(varchar,@totalspges)        
      
  Select @totalspges = abs(@totalspges - (sum(sd.BottleQty)*@spegqty))    
  from Tbl_SaleHead s                
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID         
      
      
  Select @totalspges = abs(@totalspges - sum(sd.Speg))   
  from Tbl_SaleHead s                
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID        
      
      
  select @totalspges = abs(@totalspges - sum(sc.Speg))    
  from Tbl_SaleCocktailHead sa      
join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId      
  join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId      
  join Tbl_SaleHead sh on sh.billid = sa.billid      
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,sh.billdate,106) = convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,sh.billdate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID         
      
  --print 'After sale: '+convert(varchar,@totalspges)        
      
  --print @CategorySizeLinkUpID      
      
  -- this transfer quantity is added for inter outlets      
  Select @outletpegs = abs(@outletpegs + (sum(td.BottleQty) * @sizeml))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                  
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                 
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  Select @outletpegs = abs(@outletpegs + (sum(td.spegqty)*@spegqty))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                 
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)           
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  select @totalspges = @totalspges + unitqty from @prevTable where brandopeningid = @brandopeningid      
       
  update @temp        
  set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),        
  spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),      
  TransferQuantity = convert(varchar, dbo.Fun_Calcbottlefromspeg(@outletpegs,@CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(@outletpegs,@CategorySizeLinkUpID))      
  where brandid = @brandid and CategorySizeLinkUpID = @CategorySizeLinkUpID      
      
 end        
 else   
 begin    
     
  select @totalspges = b.OpeningQty * @sizeml  
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                        
      
  select @totalspges = abs(@totalspges + (b.OpSpQty*@spegqty))    
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID        
      
  Select @totalspges = abs(@totalspges + (sum(pd.BottleQty) * @sizeml))    
  from tbl_purchasehead ph                   
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID        
        
        
  Select @totalspges = abs(@totalspges + (sum(pd.FreeQty) * @sizeml))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
      
      
  Select @totalspges = abs(@totalspges + (sum(pd.SQuantity)*@spegqty))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)    
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID         
      
  Select @totalspges = abs(@totalspges + (sum(td.BottleQty) * @sizeml))    
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid        
  group by td.BrandOpeningID      
      
  Select @totalspges = abs(@totalspges + (sum(td.spegqty)*@spegqty))    
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))        
  group by td.BrandOpeningID      
      
  /*      
  Select @totalspges = @totalspges + (sum(tm.BottleQty) * @sizeml)     
from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst tm on th.TransferHeadID=tm.TransferHeadID                  
  join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID        
  --and convert(varchar,th.TransferDate) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = @totalspges + (sum(tm.spegqty)*@spegqty)      
  from Tbl_TransferHeadMst th                  
  join Tbl_TransferDetailsMst tm  on th.TransferHeadID=tm.TransferHeadID                 
  join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
  */      
      
  Select @totalspges = abs(@totalspges - (sum(tm.BottleQty) * @sizeml))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst tm on th.TransferHeadID=tm.TransferHeadID                  
  join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID        
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = abs(@totalspges - (sum(tm.spegqty)*@spegqty))    
  from Tbl_TransferHeadMst th                  
  join Tbl_TransferDetailsMst tm  on th.TransferHeadID=tm.TransferHeadID                 
  join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = abs(@totalspges - (sum(sd.BottleQty)*@sizeml))    
  from Tbl_SaleHead s                
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
      
      
  Select @totalspges = abs(@totalspges - (sum(sd.Speg)*@spegqty))    
  from Tbl_SaleHead s                
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID        
      
      
  select @totalspges = abs(@totalspges - (sum(sc.Speg) * @spegqty))    
  from Tbl_SaleCocktailHead sa      
  join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId      
  join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId      
  join tbl_salehead sh on sh.billid = sa.billid      
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,sh.BillDate,106) <= convert(varchar,@date,106)        
  and convert(smalldatetime,convert(varchar,sh.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  -- this transfer quantity is added for inter outlets      
  Select @outletpegs = abs(@outletpegs + (sum(td.BottleQty) * @sizeml))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                  
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                 
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  Select @outletpegs = abs(@outletpegs + (sum(td.spegqty)*@spegqty))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                 
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)           
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  select @totalspges = @totalspges + unitqty from @prevTable where brandopeningid = @brandopeningid      
      
  --print @totalspges        
  update @temp        
  set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),        
  spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),      
  TransferQuantity = convert(varchar, dbo.Fun_Calcbottlefromspeg(@outletpegs,@CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(@outletpegs,@CategorySizeLinkUpID))      
  where brandid = @brandid and CategorySizeLinkUpID = @CategorySizeLinkUpID      
      
  end        
 end      
 /*      
 if @categorytype = 2                       
 begin                      
 update t set t.Glass=b.OpSpQty,t.bottle=b.OpeningQty                     
 from @temp t join tbl_brandopening b on b.brandid=t.brandid where b.brandid = @brandid and b.LicenseID=@LicenseID                   
      
 Update t                  
 set t.bottle=t.bottle + pd.BottleQty                   
 from tbl_purchasehead ph                  
 join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                   
 join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID 
 join @temp t on t.brandid = bo.brandid     
 where bo.brandid = @brandid and bo.licenseid = @LicenseID  and ph.Purchasedate <= @date                
 end      
 */      
      
      
 ----------------------------------------------------------------------end--------------------------------------------------------------------------            
      
 ------------------------------------------------------------------update spirit--------------------------------------------------------------------                      
 if @categorytype = 3                         
 begin        
      
 set @StockIN = 'M'        
 set @spegqty = 0        
 set @sizeml = 0        
 set @totalspges = 0        
 set @outletpegs = 0      
      
 select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID        
      
      
 if lower(@StockIN) <> 'm'        
 begin      
  select @totalspges = b.OpeningQty * @spegqty         
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                        
      
  select @totalspges = abs(@totalspges + b.OpSpQty )    
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID        
      
  print @totalspges        
      
  Select @totalspges = abs(@totalspges + (sum(pd.BottleQty) * @spegqty))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID         
        
        
        
     Select @totalspges = abs(@totalspges + (sum(pd.FreeQty) * @spegqty))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
      
      
  Select @totalspges = abs(@totalspges + sum(pd.SQuantity))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and ph.Purchasedate <= @date        
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID         
      
  print @totalspges        
      
  --select * from tbl_purchasedetail      
      
  Select @totalspges = abs(@totalspges + (sum(td.BottleQty) * @spegqty))    
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))        
  group by td.BrandOpeningID      
      
  Select @totalspges = abs(@totalspges + sum(td.spegqty))    
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))        
  group by td.BrandOpeningID      
      
  /*      
  Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)      
  from Tbl_TransferHeadMst th                  
  join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID                
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID        
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = @totalspges + sum(td.spegqty)      
  from Tbl_TransferHeadMst th                     
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                    
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)  
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
  */      
      
  Select @totalspges = abs(@totalspges - (sum(td.BottleQty) * @spegqty))    
  from Tbl_TransferHeadMst th                  
  join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID                
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID        
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = abs(@totalspges - sum(td.spegqty))    
  from Tbl_TransferHeadMst th                     
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                    
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)    
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
      
  Select @totalspges = abs(@totalspges - (sum(sd.BottleQty)*@spegqty))    
  from Tbl_SaleHead s             
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID         
      
      
  Select @totalspges = abs(@totalspges - sum(sd.Speg))    
  from Tbl_SaleHead s                
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID        
      
      
  select @totalspges = abs(@totalspges - sum(sc.Speg))    
  from Tbl_SaleCocktailHead sa      
  join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId      
  join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId      
  join Tbl_SaleHead s on s.BillId = sa.BillId      
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID        
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
      
  -- print @totalspges      
  -- this transfer quantity is added for inter outlets      
  Select @outletpegs = abs(@outletpegs + (sum(td.BottleQty) * @sizeml))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                  
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                 
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  Select @outletpegs = abs(@outletpegs + (sum(td.spegqty)*@spegqty))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                 
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)           
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
 if @totalspges < 0     
  begin    
  set @totalspges = @totalspges * - 1      
  end      
      
  --print @totalspges        
  select @totalspges = @totalspges + unitqty from @prevTable where brandopeningid = @brandopeningid      
      
  update @temp       
  set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),        
  spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),      
  TransferQuantity = convert(varchar, dbo.Fun_Calcbottlefromspeg(@outletpegs,@CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(@outletpegs,@CategorySizeLinkUpID))      
  where brandid = @brandid and CategorySizeLinkUpID = @CategorySizeLinkUpID       
      
 end        
 else        
 begin        
  --set @date = '31-May-2012'      
      
  select @totalspges = b.OpeningQty * @sizeml         
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                        
      
  select @totalspges = abs(@totalspges + (b.OpSpQty*@spegqty))    
  from tbl_brandopening b        
  where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID        
      
  Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)        
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID        
        
  Select @totalspges = abs(@totalspges + (sum(pd.FreeQty) * @sizeml))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
       
      
  Select @totalspges = abs(@totalspges + (sum(pd.SQuantity)*@spegqty))    
  from tbl_purchasehead ph                    
  join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                     
  join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                    
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))         
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
        
  --select 'Purchase', @totalspges      
      
  Select @totalspges = abs(@totalspges + (sum(td.BottleQty) * @sizeml))    
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))        
  group by td.BrandOpeningID      
      
  Select @totalspges = abs(@totalspges + (sum(td.spegqty)*@spegqty))      
  from tbl_categorysizelinkup lnk      
  join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid      
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid      
  where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))        
  group by td.BrandOpeningID      
      
  /*          
  Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)      
  from Tbl_TransferHeadMst th             
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                  
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)      
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                 
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID                  
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)          
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
  */      
      
  --select 'Tran1', @totalspges   
      
  Select @totalspges = abs(@totalspges - (sum(td.BottleQty) * @sizeml))      
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID               
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                 
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  Select @totalspges = abs(@totalspges - (sum(td.spegqty)*@spegqty))    
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                 
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)           
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID   

--select 'Tran2', @totalspges     
  --   print '2:'+convert(varchar,@totalspges)      
      
  Select @totalspges = abs(@totalspges - (sum(sd.BottleQty)*@sizeml))        
  from Tbl_SaleHead s        
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  Select @totalspges = abs(@totalspges - (sum(sd.Speg)*@spegqty))        
  from Tbl_SaleHead s                
  join Tbl_SaleDetail sd  on s.BillId=sd.BillId                
  join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       
  --and convert(varchar,s.BillDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID       
        
  select @totalspges = abs(@totalspges - (sum(sc.Speg) * @spegqty))    
  from Tbl_SaleCocktailHead sa      
  join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId      
  join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId      
  join Tbl_SaleHead sh on sh.Billid = sa.billid      
  where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,sh.billdate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,sh.billdate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
  -- print @totalspges      
  --select * from Tbl_TransferHeadMst      
  --select * from Tbl_TransferDetailsMst      
      
  -- this transfer quantity is added for inter outlets      
  Select @outletpegs = abs(@outletpegs + (sum(td.BottleQty) * @sizeml))      
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                  
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                 
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)      
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  Select @outletpegs = abs(@outletpegs + (sum(td.spegqty)*@spegqty))      
  from Tbl_TransferHeadMst th                 
  join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                 
  join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null                
  where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID      
  --and convert(varchar,th.TransferDate,106) <= convert(varchar,@date,106)           
  and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))      
  group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID      
      
      
  --select @CategorySizeLinkUpID, @outletpegs 
  
  if @totalspges < 0      
begin      
  set @totalspges = @totalspges * -1      
  end      
      
  --select @outletpegs      
      
  select @totalspges = @totalspges + unitqty from @prevTable where brandopeningid = @brandopeningid      
      
      
  update @temp        
  set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),      
  spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),      
  TransferQuantity = convert(varchar, dbo.Fun_Calcbottlefromspeg(@outletpegs,@CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(@outletpegs,@CategorySizeLinkUpID))      
  where brandid = @brandid and CategorySizeLinkUpID = @CategorySizeLinkUpID        
      
  end       
 end       
      
      
      
 /*      
 if @categorytype = 3                       
 begin                      
 update t set t.spag=b.OpSpQty,t.bottle=b.OpeningQty                        
 from @temp t join tbl_brandopening b on b.brandid=t.brandid where b.brandid = @brandid  and b.LicenseID=@LicenseID                      
      
 Update t                  
 set t.bottle=t.bottle + pd.BottleQty                  
 from tbl_purchasehead ph                  
 join tbl_purchasedetail pd  onSpr_QV_FetchBrandQuantity ph.PurchaseId = pd.PurchaseId                   
 join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID                  
 join @temp t on t.brandid = bo.brandid                  
 where bo.brandid = @brandid and bo.licenseid = @LicenseID and ph.Purchasedate <= @date                 
 end      
 */             
 -----------------------------------------------------------------------end--------------------------------------------------------------------------            
      
 delete from @tempwhile where brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID      
 end      
      
 --select * from @temp           
      
 --insert into tbl_stockdetail (FreezID) values (@FreezID)      
 --delete from tbl_stockdetail where FreezID = @FreezID      
 --insert into  tbl_stockdetail (brandid,CategorySizeLinkUpID,Bottle,speg,glass,FreezID)       
 --select brandid,CategorySizeLinkUpID,Bottle,spag,glass,@FreezID from @temp           
      
 --declare @categorytype int                      
 --set @categorytype=0                
  
  
-----By Shiva For Button Sattlement  
  
Declare @IsSettlement bit  
set @IsSettlement=0  
  
Declare @countRecord int  
set @countRecord=0  
  
select @countRecord=count(*) from tbl_variance where licenseid=LicenseID and VarDate=@date   
  
if @countRecord > 1  
begin  
set @IsSettlement=1  
end  
 
        
 select bo.BrandOpeningID,lnk.CategorySizeLinkID, bh.branddesc as [Brand Name],ctg.CategoryDesc as [Category] ,lnk.Alias as [Size],       
 temp.Bottle, temp.spag as sPeg, TransferQuantity,       
 case when varn.ActBottle<>-99999 then varn.ActBottle end as inBottle,      
 case when varn.ActSpeg<>-99999 then varn.ActSpeg end as inSpeg,      
 case                       
 when ctg.CategoryDesc like '%BEER%' then  1                        
 when ctg.CategoryDesc like '%wine%' then  2                      
 when ctg.CategoryDesc like '%SPIRIT%' then 3                      
 end  as Categorytype,@IsSettlement as IsSettlement,@LicenseID as LicenseID    
          
 from @temp temp      
 join tbl_Brandhead bh on bh.brandid = temp.brandid    
 join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = temp.CategorySizeLinkUpID      
 join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID      
 join tbl_brandopening bo on bo.BrandID = bh.brandid and bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID and bo.LicenseID = @LicenseID      
 left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID and varn.VarDate = @date      
 --left outer join tbl_variance cprev on cprev.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = cprev.LicenseID and cprev.VarDate = @previousdate      
      
 select       
 case when varn.DispBottle<>-99999 then varn.DispBottle end as Bottle,      
 case when varn.DispSpeg<>-99999 then varn.DispSpeg end as sPeg,      
 case when varn.varbottle<>-99999 then varn.varbottle end as HdBottle,       
 case when varn.varspeg<>-99999 then varn.varspeg end as HdsPeg       
 from @temp temp      
 join tbl_Brandhead bh on bh.brandid = temp.brandid      
 join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = temp.CategorySizeLinkUpID      
 join tbl_brandopening bo on bo.BrandID = bh.brandid and bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID and bo.LicenseID = @LicenseID      
 left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID and varn.VarDate = @date      
 ---------------------------------------------------------------------while end------------------------------------------------------------------------       
 --select distinct licenseid, vardate from tbl_variance    
*/

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchIntFileSale]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchIntFileSale]
GO

CREATE Procedure [dbo].[Spr_FetchIntFileSale]
@date datetime,
@IsPriceSeqAvail bit,          
@XmlDocBrand xml,
@Outstrbrandcode varchar(max) output
As          
Begin
	--#Variables
	set @Outstrbrandcode = ''
	declare @hdocBrand int          
	exec sp_xml_preparedocument @hdocBrand output, @XmlDocBrand          
          
	declare @licenseid numeric(18,0)
	declare @BrandOpeningID numeric(18,0)  
	declare @CategorySizeLinkUpID numeric(18,0)          
	declare @BrandID numeric(18,0)          
	declare @stockqty numeric(18,0)          
	declare @saleqty numeric(18,0)          	
	declare @idn numeric(18,0)

	--Used only in cocktail
	declare @StockIN char(1)
	declare @tempcockidn numeric(18,0)
	declare @cocktailidn numeric(18,0)
	

	set @licenseid = 0
	set @BrandOpeningID = 0
	set @CategorySizeLinkUpID = 0
	set @BrandID = 0
	set @stockqty = 0
	set @saleqty = 0
	set @idn = 0
	--#Variables

	-------Unused Table----------
	--Used for stock procedure          
	declare @inserttemptable table     
	(          
		brandid numeric(18,0),        
		BrandStock varchar(200)          
	)      
	-------Unused Table----------                    
    
	--This tables is used to save negative stock brands and then joined with final select for IsNegative column
	declare @validatetable table           
	(          
		brandopeningid numeric(18,0),          
		brandid numeric(18,0),          
		stock varchar(200),          
		isnagative bit,
		idn numeric(18,0),
		stockqty numeric(18,0),
		saleqty numeric(18,0)
	)
	
	declare @validatebrandstock table
	(
		idn numeric(18,0),
		brandopeningid numeric(18,0),
		stockqty numeric(18,0),
		saleqty numeric(18,0)
	)

	--This tables is used to save negative stock cocktail only idn is used to save billwise id
	declare @validatecocktail table      
	(
		tempcockidn numeric(18,0),
		brandopeningid numeric(18,0)
	)
	--This tables is used to save negative stock cocktail only idn is used to save billwise id same table but distinct values
	--because while loop is for brandopeningid in cocktail
	declare @validatecocktaildistinct table      
	(
		tempcockidn numeric(18,0)
	)
	declare @validatecocktaildistinctstock table      
	(
		tempcockidn numeric(18,0),
		stockqty varchar(500),
		saleqty varchar(500)
	)

	declare @validatecocktailstock table      
	(
		tempcockidn numeric(18,0),
		stockqty varchar(500),
		saleqty varchar(500)
	)
	
	--This table is used to set Brands for which code not found
	declare @Nobrandcode table
	(
		BillNo varchar(50),          
		BrandCode varchar(50),          
		Quantity int,          
		Rate numeric(14,2),
		LicenseID numeric(18,0)
	)      

	--#Insert of XML
	declare @tempintfile table          
	(          
		LicenseCode varchar(100),          
		BillNo varchar(50), 
		BrandCode varchar(50),          
		Quantity int,          
		Rate numeric(14,2),          
		PriceSeq int          
	)
	insert into @tempintfile          
	(LicenseCode, BillNo, BrandCode, Quantity,  Rate, PriceSeq)          
	select          
	LicenseCode, BillNo, BrandCode, Quantity,  Rate, PriceSeq          
	From OpenXML(@hdocBrand,'/Interface/SaleInterface/Brand') with                          
	(          
		LicenseCode varchar(100),          
		BillNo  varchar(50),              
		BrandCode varchar(50),          
		Quantity numeric(18,0),          
		Rate  numeric(18,0),          
		PriceSeq int          
	)	  
	--select * from @tempintfile
	--#Insert of XML

	declare @tempbrand table          
	(          
		idn numeric(18,0) identity,          
		billno varchar(50),          
		BrandOpeningId numeric(18,0),          
		BottleQty numeric(18,0),          
		BottleRate numeric(18,0),          
		sPeg numeric(18,0),          
		sPegRate numeric(18,0),          
		LPeg numeric(18,0),          
		LPegRate numeric(18,0),          
		Licenseid numeric(18,0),      
		LicenseCodeId numeric(18,0)      
	)          
		          
	declare @tempbranddel table          
	(          
		idn numeric(18,0) identity,          
		billno varchar(50),          
		BrandOpeningId numeric(18,0),          
		BottleQty numeric(18,0),          
		BottleRate numeric(18,0),          
		sPeg numeric(18,0),          
		sPegRate numeric(18,0),          
		LPeg numeric(18,0),          
		LPegRate numeric(18,0),          
		Licenseid numeric(18,0),      
		LicenseCodeId numeric(18,0)      
	)
 
	declare @tempbranddelstock table          
	(          
		idn numeric(18,0) identity,          
		billno varchar(50),          
		BrandOpeningId numeric(18,0),          
		BottleQty numeric(18,0),          
		BottleRate numeric(18,0),          
		sPeg numeric(18,0),          
		sPegRate numeric(18,0),          
		LPeg numeric(18,0),          
		LPegRate numeric(18,0),          
		Licenseid numeric(18,0),      
		LicenseCodeId numeric(18,0)      
	)
      
	if @IsPriceSeqAvail = 1
	begin				        
		insert into @tempbrand(billno, BrandOpeningId, BottleQty, BottleRate, sPeg, sPegRate, LPeg, LPegRate, Licenseid,LicenseCodeId)          
		select temp.billno, code.BrandOpeningID,           
		Case          
		when p.bottle = temp.priceseq then temp.quantity
		End as BottleQty,          
		Case          
		when p.bottle = temp.priceseq then temp.rate
		End as BottleRate,          
		Case          
		when p.speg = temp.priceseq then temp.quantity
		End as sPegQty,          
		Case          
		when p.speg = temp.priceseq then temp.rate
		End as sPegRate,          
		Case          
		when p.lpeg = temp.priceseq then temp.quantity 
		End as lPegQty,          
		Case  
		when p.lpeg = temp.priceseq then temp.rate 
		End as lPegRate,          
		lc.LicenseID,      
		lc.LicenseCodeID          
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		join tbl_brandhead bh on bh.brandid = code.brandid          
		join tbl_category cat on cat.categoryid = bh.categoryid
		join tbl_catgPriceSequence p on p.categoryid = cat.categoryid

		insert into @tempbranddel(billno, BrandOpeningId, BottleQty, BottleRate, sPeg, sPegRate, LPeg,LPegRate, Licenseid,LicenseCodeId)          
		select temp.billno, code.BrandOpeningID,           
		isnull(Case          
		when p.bottle = temp.priceseq then temp.quantity
		End,0) as BottleQty,          
		Case          
		when p.bottle = temp.priceseq then temp.rate
		End as BottleRate,          
		isnull(Case          
		when p.speg = temp.priceseq then temp.quantity
		End,0) as sPegQty,          
		Case          
		when p.speg = temp.priceseq then temp.rate
		End as sPegRate,          
		isnull(Case           
		when p.lpeg = temp.priceseq then temp.quantity
		End,0) as lPegQty,          
		Case          
		when p.lpeg = temp.priceseq then temp.rate
		End as lPegRate,          
		lc.LicenseID,      
		lc.LicenseCodeID          
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		join tbl_brandhead bh on bh.brandid = code.brandid          
		join tbl_category cat on cat.categoryid = bh.categoryid   
		join tbl_catgPriceSequence p on p.categoryid = cat.categoryid

		insert into @tempbranddelstock(billno, BrandOpeningId, BottleQty, BottleRate, sPeg, sPegRate, LPeg,LPegRate, Licenseid,LicenseCodeId)          
		select temp.billno, code.BrandOpeningID,           
		isnull(Case          
		when p.bottle = temp.priceseq then temp.quantity          
		End,0) as BottleQty,          
		Case          
		when p.bottle = temp.priceseq then temp.rate 
		End as BottleRate,          
		isnull(Case          
		when p.speg = temp.priceseq then temp.quantity  
		End,0) as sPegQty,          
		Case          
		when p.speg = temp.priceseq then temp.rate  
		End as sPegRate,          
		isnull(Case           
		when p.lpeg = temp.priceseq then temp.quantity          
		End,0) as lPegQty,          
		Case          
		when p.lpeg = temp.priceseq then temp.rate  
		End as lPegRate,    
		lc.LicenseID,      
		lc.LicenseCodeID          
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		join tbl_brandhead bh on bh.brandid = code.brandid          
		join tbl_category cat on cat.categoryid = bh.categoryid
		join tbl_catgPriceSequence p on p.categoryid = cat.categoryid

		delete from @tempbrand where BottleQty is null and sPeg is null and LPeg is null
		delete from @tempbranddel where BottleQty is null and sPeg is null and LPeg is null
		delete from @tempbranddelstock where BottleQty is null and sPeg is null and LPeg is null

		insert into @Nobrandcode
		(BillNo, BrandCode, Quantity, Rate, LicenseID)
		select 
		temp.BillNo, temp.BrandCode, temp.Quantity, temp.Rate, lc.LicenseID
		--@Outstrbrandcode = @Outstrbrandcode + convert(varchar,temp.BrandCode) + ','
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		left outer join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		where code.BrandCode is null
        
	end
	else
	begin
			
		insert into @tempbrand(billno, BrandOpeningId, BottleQty, BottleRate, sPeg, sPegRate, LPeg, LPegRate, Licenseid,LicenseCodeId)          
		select temp.billno, code.BrandOpeningID,           
		isnull(Case          
		when code.TypeID = 1 then temp.quantity          
		End,0) as BottleQty, 
		Case          
		when code.TypeID = 1 then temp.rate          
		End as BottleRate,          
		isnull(Case          
		when code.TypeID = 2 then temp.quantity          
		End,0) as sPegQty,          
		Case          
		when code.TypeID = 2 then temp.rate          
		End as sPegRate,          
		isnull(Case          
		when code.TypeID = 3 then temp.quantity          
		End,0) as lPegQty,          
		Case          
		when code.TypeID = 3 then temp.rate          
		End as lPegRate,          
		lc.LicenseID,      
		lc.LicenseCodeID          
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		--join tbl_brandhead bh on bh.brandid = code.brandid          
		--join tbl_category cat on cat.categoryid = bh.categoryid          
		
		insert into @tempbranddel(billno, BrandOpeningId, BottleQty, BottleRate, sPeg, sPegRate, LPeg,LPegRate, Licenseid,LicenseCodeId)          
		select temp.billno, code.BrandOpeningID,           
		Case          
		when code.TypeID = 1 then temp.quantity          
		End as BottleQty,          
		Case          
		when code.TypeID = 1 then temp.rate          
		End as BottleRate,          
		Case          
		when code.TypeID = 2 then temp.quantity          
		End as sPegQty,          
		Case          
		when code.TypeID = 2 then temp.rate          
		End as sPegRate,          
		Case           
		when code.TypeID = 3 then temp.quantity          
		End as lPegQty,          
		Case          
		when code.TypeID = 3 then temp.rate          
		End as lPegRate,          
		lc.LicenseID, 
		lc.LicenseCodeID   
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		--join tbl_brandhead bh on bh.brandid = code.brandid          
		--join tbl_category cat on cat.categoryid = bh.categoryid

		insert into @tempbranddelstock(billno, BrandOpeningId, BottleQty, BottleRate, sPeg, sPegRate, LPeg,LPegRate, Licenseid,LicenseCodeId)          
		select temp.billno, code.BrandOpeningID,           
		Case          
		when code.TypeID = 1 then temp.quantity          
		End as BottleQty,          
		Case          
		when code.TypeID = 1 then temp.rate          
		End as BottleRate,          
		Case          
		when code.TypeID = 2 then temp.quantity          
		End as sPegQty,          
		Case          
		when code.TypeID = 2 then temp.rate          
		End as sPegRate,          
		Case           
		when code.TypeID = 3 then temp.quantity          
		End as lPegQty,          
		Case          
		when code.TypeID = 3 then temp.rate          
		End as lPegRate,          
		lc.LicenseID,      
		lc.LicenseCodeID          
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		--join tbl_brandhead bh on bh.brandid = code.brandid          
		--join tbl_category cat on cat.categoryid = bh.categoryid

		insert into @Nobrandcode
		(BillNo, BrandCode, Quantity, Rate, LicenseID)
		select 
		temp.BillNo, temp.BrandCode, temp.Quantity, temp.Rate, lc.LicenseID
		--@Outstrbrandcode = @Outstrbrandcode + convert(varchar,temp.BrandCode) + ','
		from @tempintfile temp          
		join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
		left outer join tbl_assignbrandcode code on code.BrandCode = temp.BrandCode and code.LicenseID = lc.LicenseID          
		where code.BrandCode is null
	end

	--select * from @tempbranddel
	
	--###This below block is for cocktail insert and also brand code not found list
	declare @tempcocktail table          
	(
		tempcockidn numeric(18,0) identity(1,1),
		billno varchar(50),              
		Cocktailid numeric(18,0),      
		Quantity numeric(14,2),      
		Rate numeric(14,2),      
		LicenseId numeric(18,0),      
		LicenseCodeId numeric(18,0),      
		cocktailtotal numeric(14,2)      
	)

	insert into @tempcocktail      
	(billno, Cocktailid, Quantity, Rate, LicenseId, LicenseCodeId, cocktailtotal)      
	select      
	temp.billno, code.cocktailid, temp.Quantity, temp.Rate, lc.LicenseID, lc.LicenseCodeId, temp.Quantity * temp.Rate      
	from @tempintfile temp          
	join Tbl_LicenseCode lc on lc.licensecode = temp.licensecode          
	join tbl_assigncocktailcode code on code.Cocktailcode = temp.BrandCode and code.LicenseID = lc.LicenseID          
	--join tbl_cocktail c on c.cocktailid = code.cocktailid
	--join tbl_cocktaildetail cd on code.cocktailid = cd.cocktailid and cd.Licenceid = code.LicenseID

	delete n
	from @Nobrandcode n
	join tbl_assigncocktailcode code on code.Cocktailcode = n.BrandCode and code.LicenseID = n.LicenseID

	declare @cocktailbrand table      
	(
		cocktailidn numeric(18,0) identity(1,1),
		cocktailid numeric(18,0),      
		brandopeningid numeric(18,0),      
		sPeg numeric(18,0),
		licenseid numeric(18,0),
		billno varchar(50),
		tempcockidn numeric(18,0)
	)

	insert into @cocktailbrand      
	(cocktailid, brandopeningid, sPeg, licenseid, billno, tempcockidn)      
	Select       
	det.cocktailid, det.Brandopeningid,       
	temp.quantity*det.Speg,
	det.Licenceid,
	temp.billno,
	temp.tempcockidn       
	from @tempCocktail temp      
	join tbl_cocktaildetail det on det.cocktailid = temp.cocktailid and temp.LicenseId = det.Licenceid	 

	declare @cocktailbranddelstock table      
	(
		cocktailidn numeric(18,0) identity(1,1),
		cocktailid numeric(18,0),      
		brandopeningid numeric(18,0),      
		sPeg numeric(18,0),
		licenseid numeric(18,0),
		billno varchar(50),
		tempcockidn numeric(18,0)
	)
	insert into @cocktailbranddelstock      
	(cocktailid, brandopeningid, sPeg, licenseid, billno, tempcockidn)      
	Select       
	det.cocktailid, det.Brandopeningid,       
	temp.quantity*det.Speg,
	det.Licenceid,
	temp.billno,
	temp.tempcockidn       
	from @tempCocktail temp      
	join tbl_cocktaildetail det on det.cocktailid = temp.cocktailid and temp.LicenseId = det.Licenceid
	--###This below block is for cocktail insert and also brand code not found list  

	--#SET STOCK FOR EACH BRANDOPENINGID Irrespective of License beacause brandopeningid varies
	declare @brandstock table
	(
		brandopeningid numeric(18,0),
		stock numeric(18,0)
	)
	insert into @brandstock
	(brandopeningid, stock)
	select
	distinct BrandOpeningID, 0 
	from @tempbrand
	union
	select distinct BrandOpeningID, 0
	from @cocktailbranddelstock

	set @licenseid = 0
	set @BrandOpeningID = 0
	set @CategorySizeLinkUpID = 0
	set @BrandID = 0
	set @stockqty = 0
	set @saleqty = 0
	set @idn = 0

	while(select count(*) from @tempbranddelstock)>0              
	begin
		set @stockqty = 0          

		select top 1 @idn = idn from @tempbranddelstock order by idn

		select @BrandOpeningID = BrandOpeningID, @licenseid = licenseid from @tempbranddelstock where idn = @idn          

		select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID           
		from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID          

		insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output          
		
		update @brandstock set stock = @stockqty where BrandOpeningID = @BrandOpeningID

		delete from @tempbranddelstock where idn = @idn
	end

	set @licenseid = 0
	set @BrandOpeningID = 0
	set @CategorySizeLinkUpID = 0
	set @BrandID = 0
	set @stockqty = 0
	set @saleqty = 0
	set @idn = 0

	while(select count(*) from @cocktailbranddelstock)>0              
	begin
		set @stockqty = 0          

		select top 1 @idn = cocktailidn from @cocktailbranddelstock order by cocktailidn

		select @BrandOpeningID = BrandOpeningID, @licenseid = licenseid from @cocktailbranddelstock where cocktailidn = @idn          

		select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID           
		from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID          
		
		--select @date, @brandid, @licenseid, @CategorySizeLinkUpID
		insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output          
		
		update @brandstock set stock = @stockqty where BrandOpeningID = @BrandOpeningID

		delete from @cocktailbranddelstock where cocktailidn = @idn
	end

--	select * from @brandstock
--
--select * from tbl_cocktaildetail where cocktailid = 22
--select * from vw_brandopeningdetails where brandopeningid in( 325, 450)

	



	set @licenseid = 0
	set @BrandOpeningID = 0
	set @CategorySizeLinkUpID = 0
	set @BrandID = 0
	set @stockqty = 0
	set @saleqty = 0
	set @idn = 0

	Update @tempbranddel set BottleQty = isnull(BottleQty,0), 
	Speg = isnull(Speg,0), Lpeg = isnull(Lpeg,0)

	while(select count(idn) from @tempbranddel) > 0
	begin
		set @stockqty = 0
		select top 1 @idn = idn from @tempbranddel order by idn

		select @BrandOpeningID = BrandOpeningID, @licenseid = licenseid from @tempbranddel where idn = @idn                    
		select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID 

		select @saleqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, temp.BottleQty, temp.Speg+(temp.Lpeg*2)) 
		from @tempbranddel temp
		where temp.idn = @idn

		select @stockqty = stock from @brandstock where BrandOpeningID = @BrandOpeningID

		--print @saleqty, @stockqty, @CategorySizeLinkUpID

		if @saleqty <= @stockqty
		begin
			update @brandstock set stock = stock - @saleqty where BrandOpeningID = @BrandOpeningID
		end
		else
		begin
			insert into @validatetable          
			(BrandOpeningID,brandid, stock,isnagative, idn, stockqty, saleqty)          
			values           
			(@BrandOpeningID,@BrandID, 
			convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +',' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)),1
			,@idn, @stockqty, @saleqty)			
		end
		insert into @validatebrandstock 
		(idn, BrandOpeningID, stockqty, saleqty)
		values
		(@idn, @BrandOpeningID, @stockqty, @saleqty)

		delete from @tempbranddel where idn = @idn
	end

	--COCKTAIL BLOCK



	set @licenseid = 0
	set @BrandOpeningID = 0
	set @CategorySizeLinkUpID = 0
	set @BrandID = 0
	set @stockqty = 0
	set @saleqty = 0
	set @idn = 0

	set @StockIN = 'M'	
	set @tempcockidn = 0
	set @cocktailidn = 0
     

	--select * from @cocktailbrand
	--select * from @brandstock	

	while(select count(*) from @cocktailbrand) > 0      
	begin
		set @stockqty = 0

		select top 1 @BrandOpeningID = BrandOpeningID, @licenseid = licenseid, @tempcockidn = tempcockidn, @cocktailidn = cocktailidn 
		from @cocktailbrand order by cocktailidn
      
		select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID       
		from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID      

		select @StockIN = StockIN from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID   
      
		insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output

		if @StockIN <> 'M'
		begin
			select @saleqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, 0, sPeg) from @cocktailbrand where cocktailidn = @cocktailidn
		end
		else
		begin
			select @saleqty = dbo.Fun_CalcunitsForFLR4(@CategorySizeLinkUpID, 0, sPeg) from @cocktailbrand where cocktailidn = @cocktailidn
		end
		
		select @stockqty = stock from @brandstock where BrandOpeningID = @BrandOpeningID

		if @saleqty <= @stockqty
		begin
			update @brandstock set stock = stock - @saleqty where BrandOpeningID = @BrandOpeningID
		end
		else
		begin
			insert into @validatecocktail (tempcockidn, BrandOpeningID) values (@tempcockidn, @BrandOpeningID)
		end

		if exists(select stockqty from @validatecocktailstock where tempcockidn = @tempcockidn)
		begin
			update @validatecocktailstock set stockqty = stockqty + ',' + convert(varchar,@stockqty), saleqty = saleqty + ',' +  convert(varchar,@saleqty)
			where tempcockidn = @tempcockidn 
		end
		else
		begin
			insert into @validatecocktailstock(tempcockidn, stockqty, saleqty)
			values(@tempcockidn, @stockqty, @saleqty)
		end
			
		delete from @cocktailbrand where cocktailidn = @cocktailidn       
	end

	--select * from @validatecocktail
	
	insert into @validatecocktaildistinct
	select distinct tempcockidn from @validatecocktail

	insert into @validatecocktaildistinctstock
	select distinct tempcockidn, stockqty, saleqty from @validatecocktailstock


	Select
	vw.LicenseID, vw.LicenseDesc as License,
	b.billno as [Bill No], b.BrandOpeningId, vw.brandDesc as [Brand], vw.alias as [size],
	isnull(b.sPeg,0) as sPeg, isnull(b.sPegRate,0) as sPegRate, 
	isnull(b.LPeg,0) as LPeg, isnull(b.LPegRate,0) as LPegRate,           
	isnull(b.BottleQty,0) as BottleQty, isnull(b.BottleRate,0) as BottleRate,
	'' as Stock, 
	--v.isnagative as IsNegative, 
	convert(bit,case
		when vs.saleqty <= vs.stockqty then 0
		else 1
	end) as  IsNegative,
	--convert(bit,0) as IsNegative,
	b.LicenseCodeId, vs.stockqty, vw.CategorySizeLinkUpID, vs.saleqty
	from @tempbrand b
	join vw_brandopeningdetails vw on vw.brandopeningid = b.brandopeningid and b.licenseid = vw.licenseid
	--left outer join @validatetable v on b.BrandOpeningID = v.BrandOpeningID and b.idn = v.idn
	left outer join @validatebrandstock vs on b.BrandOpeningID = vs.BrandOpeningID and b.idn = vs.idn

	order by IsNegative desc, b.billno--vw.brandDesc

	select temp.billno, c.cocktailname, temp.Cocktailid, temp.Quantity, temp.Rate, temp.LicenseId, temp.LicenseCodeId, temp.cocktailtotal,      
	--convert(bit,0) as IsCocktailNegative, v.stockqty, v.saleqty      
	convert(bit,case when v.tempcockidn is null then 0 else 1 end) as IsCocktailNegative   
	from @tempcocktail temp    
	join tbl_cocktail c on temp.cocktailid = c.cocktailid      
	--left outer join (select distinct cocktailid, billno from @validatecocktail) v on v.cocktailid = c.cocktailid and v.billno = temp.billno
	left outer join @validatecocktaildistinct v on v.tempcockidn = temp.tempcockidn
	--left outer join @validatecocktaildistinctstock v on v.tempcockidn = temp.tempcockidn  
	order by IsCocktailNegative desc, temp.billno--c.cocktailname

	select BillNo, BrandCode, Quantity, Rate from @Nobrandcode

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Fun_Calcspeg]') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION [dbo].[Fun_Calcspeg]
GO

CREATE Function [dbo].[Fun_Calcspeg](@noofpegs numeric(18,3), @CategorySizeLinkID numeric(18,0), @PegType char(1))  
Returns numeric(18,3)
As
Begin
	declare @Speg int
	declare @noofbottle int
	set @noofbottle = 0
	declare @type char(1)
	declare @bottlesize int
	declare @PegSize numeric(18,0)
	
	select @Speg = Speg, @type = StockIN, @bottlesize = ML, 
	@PegSize =
	case 
		when @PegType = 'S' then PegSize
		else PegSize * 2
	end
	from tbl_categorysizelinkup where CategorySizeLinkID = @CategorySizeLinkID
	
	if lower(@type) = 'm'
	begin		
		set @noofpegs = @noofpegs/ @PegSize
	end
	else
	begin
		if @PegType = 'S'
		begin
			set @noofpegs = @noofpegs
		end
		else
		begin
			set @noofpegs = @noofpegs/2
		end
	end
	return @noofpegs  
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[spr_SaveSale]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[spr_SaveSale]
GO

Create procedure [dbo].[spr_SaveSale]
@billID numeric(18,0),
@BillNo varchar(50),          
@BillDate smalldatetime,           
@LicenseID numeric(18,0),             
@BrandSaleXML XML,           
@CocktailSaleXML XML,          
@PermitHolderXML XML,             
@Outbit bit output,                    
@Username varchar(100),                      
@OutMsg varchar(100) output              
as              
begin

	exec Spr_CheckDate @BillDate,@LicenseID,@outbit output
	
	if @outbit = 1
	begin

		if @billID<>0
		begin
			exec Spr_DeleteSale @billID, @Outbit output, @OutMsg output
			if @Outbit = 1
			begin
				exec Spr_SaveInterFaceFile @BillDate, @BrandSaleXML, @CocktailSaleXML, @PermitHolderXML, @Username, 2, @LicenseID, @BillNo, @Outbit output, @OutMsg output

				if @Outbit = 1
				begin
					update Tbl_BillMaster set CurrentBillNo = CurrentBillNo + 1 where LicenseID = @LicenseID
				end
			end
		end
		else
		begin
			exec Spr_SaveInterFaceFile @BillDate, @BrandSaleXML, @CocktailSaleXML, @PermitHolderXML, @Username, 2, @LicenseID, @BillNo, @Outbit output, @OutMsg output
		
			if @Outbit = 1
			begin
				update Tbl_BillMaster set CurrentBillNo = CurrentBillNo + 1 where LicenseID = @LicenseID
			end
		end		
	end
	else
	begin
	
		set @Outbit = 0
		set @OutMsg = 'Frezz Date Exists'

	end
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveAutoBill]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveAutoBill]
GO

CREATE procedure [dbo].[Spr_SaveAutoBill]      
@autodate datetime,      
@LicenseID numeric(18,0),              
@XmlDocBrand xml,              
@XmlDocCocktail xml,              
@XmlDocPermit xml,              
@Username  varchar(100),              
@Outbit bit output,                          
@OutMsg varchar(100) output                
as              
begin              
      
  declare @hdocPermit int               
  exec sp_xml_preparedocument @hdocPermit output,@XmlDocPermit              
      
  declare @tempPermit table              
  (              
   billno varchar(50),        
   permitholderid numeric(18,0)              
  )              
  insert into @tempPermit(billno,permitholderid)              
  select distinct billno,permitholderid              
  From OpenXML(@hdocPermit,'/Trans/permitSale/permit') with                          
  (                          
   billno varchar(50),        
   permitholderid numeric(18,0)              
  )      
      
 exec Spr_SaveInterFaceFile @autodate, @XmlDocBrand, @XmlDocCocktail, @XmlDocPermit, @Username, 3, @LicenseID, '', @Outbit output, @OutMsg output      
      
 if @Outbit = 1      
 begin      
                    
  declare @count numeric(18,0)      
  set @count = 0      
      
  select @count = COUNT(billno) from @tempPermit       
      
  update Tbl_BillMaster set CurrentBillNo = CurrentBillNo + @count where LicenseID = @LicenseID      
 End      
 --print @Outbit      
 --print @OutMsg      
 --print 'procedure'      
 set @OutMsg = 'Saved Successfully'      
      
end 
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveInterFaceFile]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveInterFaceFile]
GO

--Created By : Shiva            
--SaleType = 1 - Interface file, 2- Normal sale, 3 - Autobill    
Create procedure [dbo].[Spr_SaveInterFaceFile]
@Billdate datetime,                      
@XmlDocBrand xml,              
@XmlDocCocktail xml,              
@XmlDocPermit xml,    
@Username  varchar(100),    
@SaleType int = 1,    
@AutoBillLicenseID numeric(18,0) = 0,    
@BillNoSale varchar(50) = '',              
@Outbit bit output,                          
@OutMsg varchar(100) output    
as              
begin    

declare @billno varchar(50)    
declare @Curbillno varchar(50)    
declare @billid int                    
declare @hdocBrand as int              

exec sp_xml_preparedocument @hdocBrand output,@XmlDocBrand              

declare @tempBrand table              
(       
	LicenseID   numeric(18,0),    
	LicenseCodeID   numeric(18,0),                 
	billno varchar(50),              
	BrandOpeningID numeric(18,0),              
	BottleQty numeric(18,0),               
	Bottlerate numeric(14,2),              
	Speg numeric(18,0),              
	SpegRate numeric(14,2),              
	Lpeg numeric(18,0),              
	LpegRate numeric(14,2),              
	CategorytaxID numeric(18,0),              
	Taxper numeric(14,2),              
	TotalAmount numeric(14,2)              
)

-------Unused Table----------
--Used for stock procedure          
declare @inserttemptable table     
(          
	brandid numeric(18,0),        
	BrandStock varchar(200)          
)      
-------Unused Table----------       

if @SaleType = 1    
begin    
	insert into @tempBrand    
	(LicenseID,LicenseCodeID,billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount)              
	select LicenseID,LicenseCodeID,billno,BrandOpeningID,BottleQty,BottleRate,sPeg,sPegRate,lPeg,lPegRate,    
	null,0,0    
	From OpenXML(@hdocBrand,'/Interface/SaleInterface/Brand') with                          
	(       
	LicenseID  numeric(18,0),    
	LicenseCodeID numeric(18,0),                           
	BillNo varchar(50),              
	BrandOpeningID numeric(18,0),    
	sPeg numeric(18,0),              
	sPegRate numeric(14,2),    
	lPeg numeric(18,0),              
	lPegRate numeric(14,2),                
	BottleQty numeric(18,0),               
	BottleRate numeric(14,2)                
	)    
End    
else if @SaleType = 2    
begin    

	insert into @tempBrand    
	(LicenseID,LicenseCodeID,billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount)              
	select @AutoBillLicenseID, null, @BillNoSale,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,    
	null,0,0    
	From OpenXML(@hdocBrand,'/Trans/Sale/Brand') with                      
	(                
	BrandOpeningID numeric(18,0),              
	BottleQty numeric(18,0),              
	Bottlerate numeric(14,2),              
	Speg numeric(18,0),              
	SpegRate numeric(14,2),              
	Lpeg numeric(18,0),              
	LpegRate numeric(14,2),              
	CategorytaxID numeric(18,0),              
	Taxper numeric(14,2),              
	TotalAmount   numeric(14,2)                 
	)
end    
else    
begin    

	insert into @tempBrand    
	(LicenseID,LicenseCodeID,billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount)              
	select @AutoBillLicenseID, null,billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,    
	null,0,0    
	From OpenXML(@hdocBrand,'/Trans/Sale/Brand') with                        
	(                        
	billno varchar(50),      
	BrandOpeningID numeric(18,0),            
	BottleQty numeric(18,0),             
	Bottlerate numeric(14,2),            
	Speg numeric(18,0),            
	SpegRate numeric(14,2),            
	Lpeg numeric(18,0),            
	LpegRate numeric(14,2),            
	CategorytaxID numeric(18,0),            
	Taxper numeric(14,2),              
	TotalAmount numeric(14,2)               
	)    
end    

--select * from @tempBrand              

declare @hdocCocktail int               
exec sp_xml_preparedocument @hdocCocktail output,@XmlDocCocktail              

declare @tempCocktail table              
(      
LicenseID   numeric(18,0),     
LicenseCodeID numeric(18,0),                
billno varchar(50),              
Cocktailid numeric(18,0),              
Qty numeric(14,2),              
Rate numeric(14,2),              
CategoryTaxTypeId numeric(18,0),              
TaxPercetage numeric(14,2),              
cocktailtotal numeric(14,2)              
)              

if @SaleType = 1    
begin    

	insert into @tempCocktail(LicenseID,LicenseCodeID,billno,Cocktailid,Qty,Rate,CategoryTaxTypeId,TaxPercetage,cocktailtotal)             
	select LicenseID,LicenseCodeID,billno,Cocktailid,Qty,Rate,          
	case when CategoryTaxTypeId=0           
	then null           
	else CategoryTaxTypeId end,TaxPercetage,cocktailtotal              
	From OpenXML(@hdocCocktail,'/Interface/SaleInterfacePermit/Cocktail') with                          
	(    
	LicenseID numeric(18,0),     
	LicenseCodeID numeric(18,0),       
	billno varchar(50),              
	Cocktailid numeric(18,0),              
	Qty numeric(14,2),              
	Rate numeric(14,2),              
	CategoryTaxTypeId numeric(18,0),              
	TaxPercetage numeric(14,2),              
	cocktailtotal numeric(14,2)              
	)                  
end    
else if @SaleType = 2    
Begin    

	insert into @tempCocktail(LicenseID,LicenseCodeID,billno,Cocktailid,Qty,Rate,CategoryTaxTypeId,TaxPercetage,cocktailtotal)             
	select @AutoBillLicenseID,null,@BillNoSale,Cocktailid,Quantity,Rate,          
	case when CategoryTaxTypeId=0           
	then null           
	else CategoryTaxTypeId end,TacPercentage,amount    
	From OpenXML(@hdocCocktail,'/Trans/Sale/Cocktail') with                      
	(                
	Cocktailid numeric(18,0),              
	Quantity numeric(14,2),              
	Rate numeric(14,2),              
	CategoryTaxTypeId numeric(18,0),              
	TacPercentage   numeric(14,2),      
	amount numeric(14,2)    
	)    

End    
else    
begin    

	insert into @tempCocktail(LicenseID,LicenseCodeID,billno,Cocktailid,Qty,Rate,CategoryTaxTypeId,TaxPercetage,cocktailtotal)             
	select @AutoBillLicenseID,null,billno,Cocktailid,Qty,Rate,          
	case when CategoryTaxTypeId=0           
	then null           
	else CategoryTaxTypeId end,TaxPercetage,cocktailtotal              
	From OpenXML(@hdocCocktail,'/Trans/cocktailSale/Cocktail') with                        
	(                        
	billno varchar(50),      
	Cocktailid numeric(18,0),            
	Qty numeric(14,2),            
	Rate numeric(14,2),            
	CategoryTaxTypeId numeric(18,0),            
	TaxPercetage numeric(14,2),            
	cocktailtotal numeric(14,2)            
	)      

end    

--select * from @tempCocktail              

declare @hdocPermit int               
exec sp_xml_preparedocument @hdocPermit output,@XmlDocPermit              

declare @tempPermit table              
(              
billno varchar(50),              
permitholderid numeric(18,0)              
)    

if @SaleType = 1    
begin    

	insert into @tempPermit(billno,permitholderid)              
	select distinct billno,permitholderid    
	From OpenXML(@hdocPermit,'/Interface/SaleInterfacePermit/Permit') with                        
	(                        
	billno varchar(50),      
	permitholderid numeric(18,0)            
	)     

end 
else if @SaleType = 2    
begin    

	insert into @tempPermit(billno,permitholderid)              
	select distinct @BillNoSale,PermitHolderID    
	From OpenXML(@hdocPermit,'/Trans/Sale/Permit') with                      
	(                
	PermitHolderID numeric(18,0)    
	)    

end    
else    
begin    
	insert into @tempPermit(billno,permitholderid)              
	select distinct billno,permitholderid              
	From OpenXML(@hdocPermit,'/Trans/permitSale/permit') with                        
	(                        
	billno varchar(50),      
	permitholderid numeric(18,0)            
	)    
end              


--select * from @tempPermit              
--select billno from @tempBrand              
/*              
--####################################################################################              
--####################################################################################    
TABLE CREATION DONE    
--####################################################################################    
--####################################################################################              
*/    
declare @tempBrandBillNo table              
(    
billno numeric(18,0) identity(1,1),    
BrandOpeningID numeric(18,0),              
BottleQty numeric(18,0),               
Bottlerate numeric(14,2),              
Speg numeric(18,0),              
SpegRate numeric(14,2),              
Lpeg numeric(18,0),              
LpegRate numeric(14,2),              
CategorytaxID numeric(18,0),              
Taxper numeric(14,2),              
TotalAmount numeric(14,2)              
)    
declare @tmpFIFO table    
(    
FifoRecordsID numeric(18,0),    
UnitQty numeric(18,0),    
MasterPurRate numeric(14,2),    
PurchaseRate numeric(14,2)    
)    

declare @CategorySizeLinkUpID numeric(18,0)          
declare @unitqty numeric(18,0)
declare @locPurchaseUnitQty numeric(18,0)       
declare @BrandOpeningID numeric(18,0)          
declare @MasterPurRate numeric(14,2)          
declare @PurchaseRate numeric(14,2)
declare @MasterUnitBottleRate numeric(14,2)
declare @PurchaseUnitBottleRate numeric(14,2)
declare @id numeric(18,0)        
declare @type char(1)     
declare @stockin char(1)          
declare @PegSize numeric(18,0)    
declare @tempDeduction numeric(18,0)
declare @locbrandopquantity numeric(18,0)      
declare @locpurchaseqty numeric(18,0)      
declare @stockqty numeric(18,0)
declare @BrandID numeric(18,0)      
declare @licenseid numeric(18,0)      
declare @sumUnitQty numeric(18,0)      

declare brandCursor cursor for              
select distinct(billno) from @tempPermit          

open brandCursor              
fetch next from brandCursor into @billno              
while @@fetch_status=0              
begin    
	
	set @Curbillno = @billno    
	
	if ((select count(*) from @tempBrand where billno = @billno) > 0)    
	begin    
		insert into tbl_salehead(BillNo,BillDate,LicenseID,LicenseCodeID,Oprc,dtc)              
		select top 1 billno,@Billdate,LicenseID,LicenseCodeID,@Username,getdate() from @tempBrand where billno = @billno                                  
		set @BillId=scope_identity()    

		insert into tbl_salepermit(BillId,PermitHolderID,PermitHolderName,PermitExpireDate,PermitTypeID,Oprc,Dtc,PermitHolderNumber)              
		select @billid,tp.permitholderid,phm.PermitHolderName,phm.PermitExpireDate,phm.PermitTypeID,@username,getdate(),PermitHolderNumber               
		from @tempPermit tp              
		join Tbl_PermitHolderMaster phm on tp.permitholderid=phm.permitholderid                
		where Billno = @billno        
	end    
	else    
	begin    
		insert into tbl_salehead(BillNo,BillDate,LicenseID,LicenseCodeID,Oprc,dtc)              
		select top 1 billno,@Billdate,LicenseID,LicenseCodeID,@Username,getdate() from @tempCocktail where billno = @billno                                  
		set @BillId=scope_identity()    

		insert into tbl_salepermit(BillId,PermitHolderID,PermitHolderName,PermitExpireDate,PermitTypeID,Oprc,Dtc,PermitHolderNumber)              
		select @billid,tp.permitholderid,phm.PermitHolderName,phm.PermitExpireDate,phm.PermitTypeID,@username,getdate(),PermitHolderNumber              
		from @tempPermit tp              
		join Tbl_PermitHolderMaster phm on tp.permitholderid=phm.permitholderid                
		where Billno = @billno           
	end    

	delete from @tempBrandBillNo    

	insert into @tempBrandBillNo    
	(BrandOpeningID, BottleQty, Bottlerate, Speg, SpegRate, Lpeg, LpegRate, CategorytaxID,Taxper, TotalAmount)    
	select     
	BrandOpeningID, BottleQty, Bottlerate, 0, 0, 0, 0, CategorytaxID,Taxper, TotalAmount    
	from @tempBrand 
	where billNo = @billno 
	and BottleQty <> 0
	union all
	select     
	BrandOpeningID, 0, 0, Speg, SpegRate, 0, 0, CategorytaxID,Taxper, TotalAmount    
	from @tempBrand 
	where billNo = @billno 
	and Speg <> 0
	union all
	select     
	BrandOpeningID, 0, 0, 0, 0, Lpeg, LpegRate, CategorytaxID,Taxper, TotalAmount    
	from @tempBrand 
	where billNo = @billno and Lpeg <> 0

	--select * from @tempBrandBillNo

	--srart of brand saving loop    
	While(select count(billno) from @tempBrandBillNo) > 0    
	begin    

		select top 1 @billno = billno  from @tempBrandBillNo order by billno
		--select @billno

		set @CategorySizeLinkUpID = 0          
		set @unitqty = 0          
		set @BrandOpeningID = 0          
		set @MasterPurRate = 0          
		set @PurchaseRate = 0          
		set @id = 0    
		set @stockqty = 0
		set @BrandID = 0
		set @licenseid = 0

		select @CategorySizeLinkUpID = bo.CategorySizeLinkUpID, @BrandOpeningID = bo.BrandOpeningID, @BrandID = BrandID, @licenseid = licenseid          
		from tbl_brandopening bo          
		join @tempBrandBillNo temp on bo.BrandOpeningID = temp.BrandOpeningID          
		where temp.billno=@billno          

		select @stockin = StockIN, @PegSize = PegSize from Tbl_CategorySizeLinkup where CategorySizeLinkID = @CategorySizeLinkUpID

		Select @unitqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, BottleQty, Speg + (Lpeg * 2))          
		from @tempBrandBillNo where billno=@billno

		insert into @inserttemptable exec Spr_FetchBrandQuntity @Billdate, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output

		if @unitqty <= @stockqty
		begin

			--select @unitqty

			delete from @tmpFIFO    

			insert into @tmpFIFO    
			(FifoRecordsID, UnitQty, MasterPurRate, PurchaseRate)    
			select     
			f.FifoRecordsID, isnull(f.UnitQty,0), isnull(f.MasterPurRate,0), isnull(f.PurchaseRate,0)     
			from tbl_fiforecords f where f.brandopeningid = @BrandOpeningID and f.UnitQty > 0    
			union all    
			select
			f.FifoRecordsID, isnull(f.UnitQty,0), isnull(f.MasterPurRate,0), isnull(f.PurchaseRate,0)
			from tbl_fiforecords f
			join Tbl_TransferHeadMst tr on tr.TransferHeadID = f.TrnTransferHeadID
			where f.TrnforBrandOpeningID = @BrandOpeningID and f.UnitQty > 0 and tr.ForLicenseID is not null
			order by f.FifoRecordsID

			--select * from @tmpFIFO

			set @tempDeduction = 0
			set @locbrandopquantity = 0      
			set @locpurchaseqty = 0
			set @locPurchaseUnitQty = 0   

			if (select PurchaseUnitQty from tbl_brandopening where BrandOpeningID = @BrandOpeningID) <> 0      
			begin		
				select @locPurchaseUnitQty = PurchaseUnitQty from tbl_brandopening where BrandOpeningID = @BrandOpeningID     
				--select @locPurchaseUnitQty

				if @unitqty >= @locPurchaseUnitQty
				begin
					Update tbl_brandopening              
					set PurchaseUnitQty = 0 , @MasterPurRate = PurchaseUnitRate, @PurchaseRate = PurchaseUnitRate,
					@MasterUnitBottleRate = MasterUnitBottleRate, @PurchaseUnitBottleRate = MasterUnitBottleRate              
					where BrandOpeningID = @BrandOpeningID   
					set @unitqty = @unitqty - @locPurchaseUnitQty
					set @tempDeduction = @locPurchaseUnitQty
				end
				else
				begin
					Update tbl_brandopening              
					set PurchaseUnitQty = PurchaseUnitQty - @unitqty, @MasterPurRate = PurchaseUnitRate, @PurchaseRate = PurchaseUnitRate,
					@MasterUnitBottleRate = MasterUnitBottleRate, @PurchaseUnitBottleRate = MasterUnitBottleRate              
					where BrandOpeningID = @BrandOpeningID 
					set @tempDeduction = @unitqty
					set @unitqty = 0
				end

				set @type = ''

				Select @type =       
				case 
				when BottleQty <> 0 then 'B'      
				when Speg <> 0 then 'S'      
				when Lpeg <> 0 then 'L'      
				end      
				from @tempBrandBillNo where billno=@billno

				if @type = 'B'      
				begin    
				insert into Tbl_SaleDetail        
				(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc, MasterPurRate, PurchaseRate, 
				UnitQty, CostType, MasterUnitBottleRate, PurchaseUnitBottleRate)
				Select @BillId,br.BrandOpeningID,dbo.Fun_CalcBottleDecimal(@tempDeduction, bo.CategorySizeLinkUpID),      
				br.Bottlerate,br.Speg,br.SpegRate,br.Lpeg,br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,@username,getdate(),
				@MasterPurRate, @PurchaseRate,
				@tempDeduction, @type, @MasterUnitBottleRate, @PurchaseUnitBottleRate 
				from @tempBrandBillNo br      
				join tbl_brandopening bo on bo.BrandOpeningID = br.BrandOpeningID where br.billno=@billno      
				End      

				if @type = 'S'      
				begin      
				insert into Tbl_SaleDetail        
				(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc, MasterPurRate, PurchaseRate, 
				UnitQty, MasterUnitBottleRate, PurchaseUnitBottleRate)
				Select @BillId, br.BrandOpeningID,br.BottleQty,br.Bottlerate,    
				dbo.Fun_Calcspeg(@tempDeduction, bo.CategorySizeLinkUpID, 'S'), br.SpegRate,br.Lpeg,br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,    
				@username,getdate(), @MasterPurRate, @PurchaseRate, 
				@tempDeduction, @MasterUnitBottleRate, @PurchaseUnitBottleRate 
				from @tempBrandBillNo br    
				join tbl_brandopening bo on bo.brandopeningid = br.brandopeningid    
				where br.billno=@billno      
				end      

				if @type = 'L'      
				begin      
				insert into Tbl_SaleDetail        
				(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc, MasterPurRate, PurchaseRate, 
				UnitQty, MasterUnitBottleRate, PurchaseUnitBottleRate)        
				Select @BillId,br.BrandOpeningID,br.BottleQty,br.Bottlerate,br.sPeg,br.SpegRate,    
				dbo.Fun_Calcspeg(@tempDeduction, bo.CategorySizeLinkUpID, 'L'),     
				br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,@username,getdate(),     
				@MasterPurRate,
				@PurchaseRate, @tempDeduction, @MasterUnitBottleRate, @PurchaseUnitBottleRate         
				from @tempBrandBillNo br    
				join tbl_brandopening bo on bo.brandopeningid = br.brandopeningid    
				where br.billno=@billno      
				end
			End
			--select @unitqty

			if @unitqty > 0
			begin

				--check check is for timeout because of no consumption found
				set @sumUnitQty = 0
				select @sumUnitQty = sum(UnitQty) from @tmpFIFO

				if (@unitqty <= @sumUnitQty)
				begin

					while(@unitqty > 0)    
					begin

						set @type = ''

						Select @type =       
						case       
							when BottleQty <> 0 then 'B'      
							when Speg <> 0 then 'S'      
							when Lpeg <> 0 then 'L'      
						end      
						from @tempBrandBillNo where billno=@billno

						select top 1 @id = FifoRecordsID, @locpurchaseqty = UnitQty from @tmpFIFO order by FifoRecordsID
    
						if @unitqty <= @locpurchaseqty    
						begin    
							--select @id, @unitqty    

							update fi    
							set UnitQty = temp.UnitQty - @unitqty, @MasterPurRate = fi.MasterPurRate, @PurchaseRate = fi.PurchaseRate,
							@MasterUnitBottleRate = fi.MasterUnitBottleRate, @PurchaseUnitBottleRate = fi.PurchaseUnitBottleRate    
							from @tmpFIFO temp 
							join tbl_fiforecords fi on fi.FifoRecordsID = temp.FifoRecordsID    
							where fi.FifoRecordsID = @id
							--select 'while 1 '+@type

							if @type = 'B'      
							begin        
							insert into Tbl_SaleDetail        
							(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc, 
							MasterPurRate, PurchaseRate, UnitQty, FifoRecordsID, CostType, MasterUnitBottleRate, PurchaseUnitBottleRate)    
							Select @BillId,br.BrandOpeningID,dbo.Fun_CalcBottleDecimal(@unitqty, bo.CategorySizeLinkUpID),br.Bottlerate,br.Speg,   							br.SpegRate,br.Lpeg,br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,@username,getdate(), 
							@MasterPurRate, @PurchaseRate,
							@unitqty, @id, @type, @MasterUnitBottleRate, @PurchaseUnitBottleRate    
							from @tempBrandBillNo br      
							join tbl_brandopening bo on bo.BrandOpeningID = br.BrandOpeningID where br.billno=@billno and bo.BrandOpeningID = @BrandOpeningID    
							End      

							if @type = 'S'      
							begin      
							insert into Tbl_SaleDetail        
							(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc, 
							MasterPurRate, PurchaseRate, UnitQty, FifoRecordsID, MasterUnitBottleRate, PurchaseUnitBottleRate)
							Select @BillId,br.BrandOpeningID,br.BottleQty,br.Bottlerate,      
							dbo.Fun_Calcspeg(@unitqty, bo.CategorySizeLinkUpID, 'S'), br.SpegRate,br.Lpeg,br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,    
							@username,getdate(),     
							@MasterPurRate, @PurchaseRate, @unitqty, @id, @MasterUnitBottleRate, @PurchaseUnitBottleRate          
							from @tempBrandBillNo br    
							join tbl_brandopening bo on bo.brandopeningid = br.brandopeningid    
							where br.billno=@billno and br.BrandOpeningID = @BrandOpeningID    
							end      

							if @type = 'L'     
							begin      
							insert into Tbl_SaleDetail        
							(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc, 
							MasterPurRate, PurchaseRate, UnitQty, FifoRecordsID, MasterUnitBottleRate, PurchaseUnitBottleRate)        
							Select @BillId,br.BrandOpeningID,br.BottleQty,br.Bottlerate,br.sPeg,br.SpegRate,    
							dbo.Fun_Calcspeg(@unitqty, bo.CategorySizeLinkUpID, 'L'),    
							br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,@username,getdate(),     
							@MasterPurRate, @PurchaseRate, @unitqty, @id, @MasterUnitBottleRate, @PurchaseUnitBottleRate              
							from @tempBrandBillNo br    
							join tbl_brandopening bo on bo.brandopeningid = br.brandopeningid    
							where br.billno=@billno and br.BrandOpeningID = @BrandOpeningID    
							end
						end    
						else    
						begin    
							update fi    
							set UnitQty = temp.UnitQty - @locpurchaseqty, @MasterPurRate = fi.MasterPurRate, @PurchaseRate = fi.PurchaseRate,
							@MasterUnitBottleRate = fi.MasterUnitBottleRate, @PurchaseUnitBottleRate = fi.PurchaseUnitBottleRate        
							from @tmpFIFO temp    
							join tbl_fiforecords fi on fi.FifoRecordsID = temp.FifoRecordsID    
							where fi.FifoRecordsID = @id    

							--select @id, @locpurchaseqty    

							if @type = 'B'      
							begin        
							insert into Tbl_SaleDetail        
							(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc,     
							MasterPurRate, PurchaseRate, UnitQty, FifoRecordsID, CostType, MasterUnitBottleRate, PurchaseUnitBottleRate)
							Select @BillId,br.BrandOpeningID,dbo.Fun_CalcBottleDecimal(@locpurchaseqty, bo.CategorySizeLinkUpID),br.Bottlerate,br.Speg,   br.SpegRate,br.Lpeg,br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,@username,getdate(),     
							@MasterPurRate, @PurchaseRate, @locpurchaseqty, @id, @type, @MasterUnitBottleRate, @PurchaseUnitBottleRate     
							from @tempBrandBillNo br      
							join tbl_brandopening bo on bo.BrandOpeningID = br.BrandOpeningID     
							where br.billno=@billno and bo.BrandOpeningID = @BrandOpeningID    
							End      

							if @type = 'S'      
							begin      
							insert into Tbl_SaleDetail        
							(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc, 
							MasterPurRate, PurchaseRate, UnitQty, FifoRecordsID, MasterUnitBottleRate, PurchaseUnitBottleRate)   
							Select @BillId, br.BrandOpeningID,br.BottleQty,br.Bottlerate,    
							dbo.Fun_Calcspeg(@locpurchaseqty, bo.CategorySizeLinkUpID, 'S'),    
							br.SpegRate,br.Lpeg,br.LpegRate,br.CategorytaxID,    
							br.Taxper,br.TotalAmount,@username,getdate(),     
							@MasterPurRate, @PurchaseRate, @locpurchaseqty, @id, @MasterUnitBottleRate, @PurchaseUnitBottleRate             
							from @tempBrandBillNo br    
							join tbl_brandopening bo on bo.BrandOpeningID = br.BrandOpeningID     
							where br.billno=@billno and br.BrandOpeningID = @BrandOpeningID    
							end      

							if @type = 'L'      
							begin      
							insert into Tbl_SaleDetail        
							(BillId,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount,oprc,dtc,
							MasterPurRate, PurchaseRate, UnitQty, FifoRecordsID, MasterUnitBottleRate, PurchaseUnitBottleRate)
							Select @BillId,br.BrandOpeningID,br.BottleQty,br.Bottlerate,br.sPeg,br.SpegRate,    
							dbo.Fun_Calcspeg(@locpurchaseqty, bo.CategorySizeLinkUpID, 'L'),    
							br.LpegRate,br.CategorytaxID,br.Taxper,br.TotalAmount,@username,getdate(),     
							@MasterPurRate, @PurchaseRate, @locpurchaseqty, @id, @MasterUnitBottleRate, @PurchaseUnitBottleRate                     
							from @tempBrandBillNo br    
							join tbl_brandopening bo on bo.BrandOpeningID = br.BrandOpeningID     
							where br.billno=@billno and br.BrandOpeningID = @BrandOpeningID    
							end
						end    

						select @unitqty = @unitqty - @locpurchaseqty    
						delete from @tmpFIFO where FifoRecordsID = @id
					end     
				end
			end   
			--jumptoFIFO:
			Update tbl_saledetail
			set TotalAmount = (BottleQty * Bottlerate) + (Speg * SpegRate) + (Lpeg * LpegRate)
			where BillId = @BillId

		end
		delete from @tempBrandBillNo where billno = @billno    
	end
	--End of brand saving loop    


	declare @cocktaillocbrandopquantity numeric(18,0)   
	declare @cocktaillocpurchaseqty numeric(18,0)      
	declare @cocktailBrandOpeningid numeric(18,0)    
	declare @cocktailCocktailSaleId numeric(18,0)      
	declare @cocktailunitqty numeric(18,0)

	declare @tempCocktailBillNo table              
	(    
	billno numeric(18,0) identity(1,1),    
	LicenseID   numeric(18,0),     
	LicenseCodeID numeric(18,0),     
	Cocktailid numeric(18,0),              
	Qty numeric(14,2),              
	Rate numeric(14,2),              
	CategoryTaxTypeId numeric(18,0),              
	TaxPercetage numeric(14,2),              
	cocktailtotal numeric(14,2)              
	)    
	insert into @tempCocktailBillNo    
	(LicenseID, LicenseCodeID, Cocktailid, Qty, Rate, CategoryTaxTypeId, TaxPercetage, cocktailtotal)    
	select    
	LicenseID, LicenseCodeID, Cocktailid, Qty, Rate, CategoryTaxTypeId, TaxPercetage, cocktailtotal    
	from @tempCocktail    
	where billno = @Curbillno    

	declare @cocktailinfo table    
	(    
	CocktailSaleId numeric(18,0),    
	BrandOpeningid numeric(18,0),    
	Speg numeric(14,2)    
	)    

	declare @tenptable table                  
	(    
	LicenseId numeric(18,0),                
	CocktailSaleId numeric(18,0),                  
	Cocktailid numeric(18,0),    
	Quantity numeric(18,0),    
	BillId numeric(18,0)    
	)     

	declare @tmpFIFOcocktail table    
	(    
	FifoRecordsID numeric(18,0), 
	UnitQty numeric(18,0),    
	MasterPurRate numeric(14,2),    
	PurchaseRate numeric(14,2)    
	)
	--select * from @tempCocktailBillNo
    
	
	while(select count(billno) from @tempCocktailBillNo) > 0    
	begin    
		select top 1 @billno = billno from @tempCocktailBillNo order by billno    

		--select @billno    

		--sachin          
		insert into Tbl_SaleCocktailHead              
		(BillId,Cocktailid,Quantity,Rate,CategoryTaxTypeId,TacPercentage,LicenseId,cocktailtotal,Oprc,dtc)          
		Select @BillId,Cocktailid,Qty,Rate,            
		case CategoryTaxTypeId when 0 then null else CategoryTaxTypeId end,            
		TaxPercetage,LicenseID,cocktailtotal,@Username,getdate()            
		from @tempCocktailBillNo where billno=@billno              

		--select @BillId    

		delete from @tenptable                 

		insert into @tenptable(LicenseId,CocktailSaleId,Cocktailid, Quantity, BillId)   
		select sc.LicenseId,sc.CocktailSaleId,sc.Cocktailid, sc.Quantity, @billno    
		from tbl_salecocktailhead sc    
		join @tempCocktailBillNo temp on sc.Cocktailid = temp.Cocktailid and sc.licenseid = temp.licenseid   
		where sc.BillId = @BillId and temp.billno = @billno   

		--select * from @tenptable    

		delete from @cocktailinfo    

		insert into @cocktailinfo(CocktailSaleId, BrandOpeningid, Speg)    
		select                
		temp.CocktailSaleId, dtl.BrandOpeningid, temp.Quantity * dtl.Speg    
		from @tenptable temp                
		join tbl_cocktaildetail dtl on dtl.CocktailID = temp.CocktailID and dtl.Licenceid = temp.LicenseId   
		where temp.billid = @billno    

		--select * from @cocktailinfo

		
		while(select count(BrandOpeningid) from @cocktailinfo) > 0    
		begin

			set @cocktailBrandOpeningid = 0    
			set @cocktailunitqty = 0    
			set @cocktailCocktailSaleId = 0  
			set @stockqty = 0
			set @BrandID = 0
			set @licenseid = 0

			select top 1 @cocktailBrandOpeningid = BrandOpeningid, @cocktailunitqty = speg, @cocktailCocktailSaleId = CocktailSaleId    
			from @cocktailinfo order by BrandOpeningid    

			select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID, @licenseid = licenseid            
			from Tbl_BrandOpening where BrandOpeningID = @cocktailBrandOpeningid

			insert into @inserttemptable exec Spr_FetchBrandQuntity @Billdate, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output
			
			--select @cocktailunitqty, @stockqty
    
			
			if @cocktailunitqty <= @stockqty
			begin

				delete from @tmpFIFOcocktail    

				insert into @tmpFIFOcocktail    
				(FifoRecordsID, UnitQty, MasterPurRate, PurchaseRate)    
				select     
				f.FifoRecordsID, isnull(f.UnitQty,0), isnull(f.MasterPurRate,0), isnull(f.PurchaseRate,0)     
				from tbl_fiforecords f where f.brandopeningid = @cocktailBrandOpeningid and f.UnitQty > 0    
				union all    
				select
				f.FifoRecordsID, isnull(f.UnitQty,0), isnull(f.MasterPurRate,0), isnull(f.PurchaseRate,0)       
				from tbl_fiforecords f
				join Tbl_TransferHeadMst tr on tr.TransferHeadID = f.TrnTransferHeadID
				where f.TrnforBrandOpeningID = @cocktailBrandOpeningid and f.UnitQty > 0 and tr.ForLicenseID is not null
				order by f.FifoRecordsID

				set @tempDeduction = 0
				set @cocktaillocbrandopquantity = 0      
				set @cocktaillocpurchaseqty = 0
          
				if (select PurchaseUnitQty from tbl_brandopening where BrandOpeningID = @cocktailBrandOpeningid) <> 0      
				begin

					select @locPurchaseUnitQty = PurchaseUnitQty from tbl_brandopening where BrandOpeningID = @cocktailBrandOpeningid     

					if @cocktailunitqty >= @locPurchaseUnitQty
					begin
						Update tbl_brandopening              
						set PurchaseUnitQty = 0 , @MasterPurRate = PurchaseUnitRate, @PurchaseRate = PurchaseUnitRate
						where BrandOpeningID = @cocktailBrandOpeningid   
						set @cocktailunitqty = @cocktailunitqty - @locPurchaseUnitQty
						set @tempDeduction = @locPurchaseUnitQty
					end
					else
					begin
						Update tbl_brandopening              
						set PurchaseUnitQty = PurchaseUnitQty - @cocktailunitqty, @MasterPurRate = PurchaseUnitRate, @PurchaseRate = PurchaseUnitRate
						where BrandOpeningID = @cocktailBrandOpeningid 
						set @tempDeduction = @cocktailunitqty
						set @cocktailunitqty = 0
					end

					insert into tbl_salecocktaildetail                
					(CocktailSaleId,BrandOpeningid,Speg,Oprc,Dtc, MasterPurRate, PurchaseRate, UnitQty)    
					select    
					@cocktailCocktailSaleId, @cocktailBrandOpeningid, @tempDeduction, @username, getdate(), @MasterPurRate, @PurchaseRate, 
					@tempDeduction 
				End

				--check check is for timeout because of no consumption found
				set @sumUnitQty = 0
				select @sumUnitQty = sum(UnitQty) from @tmpFIFOcocktail

				if (@cocktailunitqty <= @sumUnitQty)
				begin
					while(@cocktailunitqty > 0)    
					begin
    
						select top 1 @id = FifoRecordsID, @cocktaillocpurchaseqty = UnitQty from @tmpFIFOcocktail order by FifoRecordsID    
						if @cocktailunitqty <= @cocktaillocpurchaseqty    
						begin    
							--select @id, @cocktailunitqty    
							update fi    
							set UnitQty = temp.UnitQty - @cocktailunitqty, @MasterPurRate = fi.MasterPurRate, @PurchaseRate = fi.PurchaseRate    
							from @tmpFIFOcocktail temp    
							join tbl_fiforecords fi on fi.FifoRecordsID = temp.FifoRecordsID    
							where fi.FifoRecordsID = @id    

							insert into tbl_salecocktaildetail                
							(CocktailSaleId,BrandOpeningid,Speg,Oprc,Dtc, MasterPurRate, PurchaseRate, UnitQty, FifoRecordsID)    
							select    
							@cocktailCocktailSaleId, @cocktailBrandOpeningid, @cocktailunitqty, @username, getdate(), @MasterPurRate, 
							@PurchaseRate, @cocktailunitqty, @id
						end    
						else    
						begin    
							update fi    
							set UnitQty = temp.UnitQty - @cocktaillocpurchaseqty, @MasterPurRate = fi.MasterPurRate, @PurchaseRate = fi.PurchaseRate    
							from @tmpFIFOcocktail temp    
							join tbl_fiforecords fi on fi.FifoRecordsID = temp.FifoRecordsID    
							where fi.FifoRecordsID = @id    

							--select @id, @cocktaillocpurchaseqty    

							insert into tbl_salecocktaildetail                
							(CocktailSaleId,BrandOpeningid,Speg,Oprc,Dtc, MasterPurRate, PurchaseRate, 
							UnitQty, FifoRecordsID)        
							select    
							@cocktailCocktailSaleId, @cocktailBrandOpeningid, @cocktaillocpurchaseqty, @username, getdate(), @MasterPurRate, @PurchaseRate, 
							@cocktaillocpurchaseqty, @id    
						end    

						select @cocktailunitqty = @cocktailunitqty - @cocktaillocpurchaseqty    
						delete from @tmpFIFOcocktail where FifoRecordsID = @id     
					end
				end
			end
			
			update tbl_salecocktailhead
			set cocktailtotal = (Quantity * Rate)
			where CocktailSaleId = @cocktailCocktailSaleId

			delete from @cocktailinfo where BrandOpeningid = @cocktailBrandOpeningid    
		end	
		
		delete from @tempCocktailBillNo where billno = @billno    
	end            
	
	set @billno = @Curbillno    

	fetch next from brandCursor into @billno               
End                            
CLOSE brandCursor                    
DEALLOCATE brandCursor               


set @Outbit = 1                          
set @OutMsg = 'Saved Successfully'               

end
GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchSaleMaster]')  AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchSaleMaster]  
GO  

CREATE Procedure [dbo].[Spr_FetchSaleMaster]
@licenseid numeric(18,0),                                 
@BillID numeric(18,0),                                  
@billno varchar(50)='',                                  
--@billDate smallDateTime='1-Jan-1900'                                  
@FromDate datetime='1-Jan-1900',          
@ToDate datetime='1-Jan-1900'            
as                                  
Begin                                  
If @BillId=0                                  
begin                            
declare @strSelect varchar(max)                                              
  declare @strWhere varchar(max)                                              
  set @strSelect = ''                                              
  set @strWhere = ''                                                   
                                                
    Set @strSelect ='Select sh.BillId,sh.BillNo,convert(varchar,sh.BillDate,106) as BillDate,sh.LicenseId,l.LicenseNo as LicenseCode, l.licensedesc,   
					 convert(bit,1) as ''IsOneDayPermit'',sp.PermitHolderNumber,sp.PermitHolderName
	from Tbl_SaleHead sh                       
	join tbl_license l on sh.licenseid=l.licenseid  
	join tbl_salePermit sp on sp.BillId=sh.BillId
	where sh.licenseid='+convert(varchar,@licenseID)+''                                 
                                  
if @billno <> ''                                                            
begin                                                             
 set @strWhere=@strWhere + ' and billno like ''%'+ltrim(rtrim(@billno))+'%'''                                          
end                                     
                                  
--if @billDate <> '1-Jan-1900'                                  
-- begin                                     
--set @strwhere= @Strwhere + ' and convert(varchar,billDate,106) ='''+convert(varchar,@billDate,106)+''''                                  
--       end                 
          
if @FromDate <> '1-Jan-1900' and @ToDate <> '1-Jan-1900'               
  begin                 
   set @strWhere=@strWhere + ' and convert(smalldatetime,convert(varchar,billDate,102)) between  convert(smalldatetime,''' +  convert(varchar,@FromDate,102) + ''')   
                               and  convert(smalldatetime,''' + convert(varchar,@ToDate,102) + ''')'                
   end          
          
                     
print  (@strSelect + @strWhere)                                     
 exec  (@strSelect + @strWhere)                                     
                                  
end                                  
Else                                  
begin                                  
--Select BillId,BillNo,BillDate,LicenseId,LicenseCode,Oprc,Oprm,Dtc,Dtm from Tbl_SaleHead where BillId=@BillId                                  
select sh.BillId,sh.BillNo,sh.BillDate,sh.LicenseId,sh.LicenseCodeID from tbl_salehead sh  where sh.billId=@billid                           
select sd.BilldetailId,sd.BillId,sd.BrandOpeningID,sd.BottleQty,sd.Bottlerate,sd.Speg,sd.SpegRate,sd.Lpeg,sd.LpegRate,            
sd.CategorytaxID,sd.Taxper,sd.TotalAmount,bh.branddesc,c.sizeID,c.Alias,ct.Taxtype from tbl_saledetail sd                           
---For TaxtYpeID                      
 left outer join Tbl_categoryTax ct on sd.CategoryTaxId=ct.CategoryTaxId                       
----                      
---For BrandName                          
 join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID                          
  join tbl_brandhead bh on bh.brandid=bo.brandid                           
---End                          
---For Size And Alias                        
join tbl_salehead sh1 on sh1.billid=sd.billid                        
 join tbl_categorysizelinkup c on sh1.licenseid=c.licenseid and c.CategorySizeLinkID = bo.CategorySizeLinkUpID                        
----End             
          
---Comment By Shiva          
 --join  tbl_salehead sh on sd.billid=sh.billid where sh.billid=@billId and sh.billno=@billno and sh.billdate=@billDate                     
--------          
          
----By Shiva                     
 join  tbl_salehead sh on sd.billid=sh.billid     
where sh.billid=@billId --and sh.billno=@billno and sh.billdate between @FromDate and @ToDate                   
    ---End Shiva                  
                      
                          
select sck.CocktailSaleId,sck.BillId,sck.Cocktailid,c.CocktailName,sck.Quantity,sck.Rate,sck.CategoryTaxTypeId,sck.TacPercentage,sck.LicenseId,sck.LicenseCodeId,sck.cocktailtotal,    
isnull(ct.categorytaxid, 0) as categorytaxid, isnull(ct.taxtype,'') as taxtype    
from tbl_salecocktailhead sck                         
---For TaxtYpeID                      
left outer join Tbl_categoryTax ct on sck.CategoryTaxTypeId=ct.CategoryTaxId               
  ---For CocktailName  
join tbl_cocktail c on c.cocktailID =sck.cocktailID  
        
        ---Comment By Shiva          
            
--join tbl_salehead sh on sck.billid=sh.billid where sh.billid=@billId and sh.billno=@billno and sh.billdate=@billDate                     
      ---End Comment By Shiva          
---By Shiva          
    join tbl_salehead sh on sck.billid=sh.billid where sh.billid=@billId --and sh.billno=@billno and sh.billdate between @FromDate and @ToDate              
                       
select sp.salepermitid,sp.BillId,sp.permitHolderID,sp.PermitHolderName,                        
case                        
when sp.PermitExpireDate='1-1-1900' then 'Life Time' else convert(varchar,sp.PermitExpireDate,106) end as PermitExpireDate,sp.PermitTypeID,p.PermitHolderNumber,ptm.permitdesc from tbl_salepermit sp                          
join tbl_salehead sh on sp.billid=sh.billid                          
join tbl_permitholdermaster p on p.PermitHolderID=sp.PermitHolderID                       
join Tbl_PermitTypeMaster ptm on sp.permittypeid=ptm.permittypeid               
          
--Comment By Shiva                 
  --where sh.billid=@billId and sh.billno=@billno and sh.billdate=@billDate              
---End Comment                 
          
where sh.billid=@billId --and sh.billno=@billno and sh.billdate between @FromDate and @ToDate                  
                         
End                                  
end  
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchpurchase]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchpurchase] 
GO 

create Procedure [dbo].[Spr_fetchpurchase] 
@licenseID numeric(18,0),                            
@PurchaseId numeric(18,0)=0,                              
--@PurchaseDate datetime='',                              
@FromDate datetime,      
@ToDate datetime,      
      
@TPNo varchar(50)='',                              
@INVoiceNo varchar(50)=''                              
As                              
Begin                              
if @PurchaseId <> 0                              
Begin                              
select p.PurchaseId,p.SupplierId,s.SupplierName,TPno,isnull(InvoiceNo,0) as InvoiceNo ,Purchasedate,                              
                      isnull(OtherchargeType,0) as OtherchargeType ,isnull(Othercharge,0) as Othercharge,isnull(Discountper,0) as Discountper,isnull(Discount,0) as Discount,ForLicenseId, p.LicenseId,BottleRate,isnull(FreeQty,0)as FreeQty,        
                      isnull(Noofbox,0)  as Noofbox,              
                       p.LicenseId ,pd.BrandOpeningID ,bh.branddesc,SQuantity,isnull(batchNo,0) as batchNo ,isnull(Mfg,0) as Mfg,                              
                      pd.SRate,isnull(BottleQty,0)as BottleQty ,pd.CategoryTaxId ,c.Taxtype,isnull(taxper,0) as taxper ,ct.Alias From tbl_Purchasehead p                              
                 left join Tbl_Purchasedetail pd on p.purchaseid=pd.purchaseid                              
                left join tbl_Supplier s on p.Supplierid=s.supplierid                              
                left join tbl_brandopening b on pd.BrandOpeningID=b.BrandOpeningID                              
                left join tbl_brandhead bh on b.brandid=bh.brandid                              
                left join tbl_categorytax c on pd.categorytaxId=c.CategoryTaxId                     
                left join tbl_categorysizelinkup ct on b.CategorySizeLinkUpID=ct.CategorySizeLinkID                             
                 where p.PurchaseId=@PurchaseId              
  End                              
Else                              
 Begin                              
  declare @StrSelect varchar(max)                                  
  declare @StrWhere varchar(max)                                 
  set @StrSelect=''                              
  set @StrWhere=''                              
     set @StrSelect= 'select p.PurchaseId,TPno,InvoiceNo,Purchasedate,                              
                      OtherchargeType,Othercharge,Discountper,Discount,ForLicenseId,l1.LicenseDesc as ForLicense,                           
                      p.LicenseId ,l.LicenseDesc as License From tbl_Purchasehead p               
                      join tbl_license l on l.LicenseID=p.LicenseId                         
                      left outer join tbl_license l1 on l1.LicenseID=p.ForLicenseId                    
          where p.licenseid='+convert(varchar,@licenseId)+''                              
--       if @PurchaseDate <> '1-Jan-1900'                                    
--     begin                              
--     set @strwhere= @Strwhere + ' and convert(varchar,Purchasedate,106) ='''+convert(varchar,@PurchaseDate,106)+''''                          
--     End         
      
if @FromDate <> '1-Jan-1900' and @ToDate <> '1-Jan-1900'           
  begin             
   set @strWhere=@strWhere + '  and convert(smalldatetime,convert(varchar,p.Purchasedate,102)) between  convert(smalldatetime,''' +  convert(varchar,@FromDate,102) + ''')   
                               and  convert(smalldatetime,''' + convert(varchar,@ToDate,102) + ''')'   
      
       
  end          
      
	 if @licenseID > 0                     
begin                     
   set @strWhere = @strWhere + ' and p.licenseid = '+convert(varchar,@licenseID)                 
end       

                            
       if @TPNo <> ''                              
     Begin                              
     set @Strwhere=@strwhere + ' and  p.TpNo like ''%'+ltrim(rtrim(@TPNo))+'%'''                              
     End                               
    If @INVoiceNo <>''                              
     Begin                     
     set @strwhere=@Strwhere + ' and p.INVoiceNo like ''%'+ltrim(rtrim(@INVoiceNo))+'%'''                
     End                              
   print (@strSelect + @strWhere)                                                
  exec  (@strSelect + @strWhere)                               
                                       
 End                              
End                 
                           

 go
 
IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchTransferHeadDetails]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchTransferHeadDetails]        
GO    

Create Procedure [dbo].[Spr_FetchTransferHeadDetails]
@licenseid numeric(18,0),            
@TransferHeadID numeric(18,0),                      
@Tpno varchar(50)='',                    
@InvioceNo varchar(50)='',                    
--@TransferDate datetime=''        
@FromDate datetime,      
@ToDate datetime                
as                      
Begin                      
	if @TransferHeadID=0                    
	begin                    
		declare @strSelect varchar(max)                                
		declare @strWhere varchar(max)                                
		set @strSelect = ''                                
		set @strWhere = ''                     

		Set @strSelect ='select t.TransferHeadID,Convert(varchar,t.TransferDate,106) as TransferDate,t.Tpno,t.InvioceNo,t.LicenseID,t.Deptid,t.ForLicenseID,
		t.FLIV, frml.LicenseDesc as [From license], l.LicenseDesc as [To license], isnull(ltrim(rtrim(t.FLIVAddress)),'''') as FLIVAddress
		from Tbl_TransferHeadMst t
		join tbl_license frml on t.licenseid = frml.licenseid
		left outer join tbl_license l on t.forlicenseid = l.licenseid
		where (t.licenseid='+CONVERT(varchar,@licenseid)+' or t.forlicenseid = '+CONVERT(varchar,@licenseid)+')'

		if @Tpno <> ''                                            
		Begin                                            
			set @strWhere=@strWhere + ' and t.Tpno like ''%'+ltrim(rtrim(@Tpno))+'%'''                                            
		End                         

		If @InvioceNo <>''                                            
		Begin                                            
			set @strWhere=@strWhere + ' and t.InvioceNo like ''%'+ltrim(rtrim(@InvioceNo))+'%'''                                            
		End                        

		-- if @TransferDate <> '1-jan-1900'                    
		--  begin                       
		-- set @strWhere= @strWhere + ' and convert(varchar,TransferDate,106) ='''+convert(varchar,@TransferDate,106)+''''                    
		--  end                  

		if @FromDate <> '1-Jan-1900' and @ToDate <> '1-Jan-1900'           
		begin             
			set @strWhere=@strWhere + ' and convert(smalldatetime,convert(varchar,t.transferdate,102)) between  convert(smalldatetime,''' +  convert(varchar,@FromDate,102) + ''')   
			and  convert(smalldatetime,''' + convert(varchar,@ToDate,102) + ''')'   

		end          
		print (@strSelect + @strWhere)                                                              
		exec  (@strSelect + @strWhere)                     
	end                    

	else                      
	begin
	
	
		declare @tempTransfer table
		(
			TranferDetailID numeric(18,0) identity(1,1),
			TransferHeadID numeric(18,0),
			BrandOpeningID numeric(18,0),
			Against varchar(10),
			bottlerate numeric(18,0),
			bottleqty numeric(18,3),
			spegrate numeric(18,0),
			spegqty numeric(18,3),
			Box varchar(10),
			Batch varchar(50),
			mfg varchar(50),
			TrDetailTPNo varchar(50),
			Remarks varchar(500),
			forBrandOpeningID numeric(18,0)
		)
		insert into @tempTransfer
		(TransferHeadID, BrandOpeningID, Against, bottlerate, bottleqty, spegrate, spegqty, Box, Batch, mfg, TrDetailTPNo, Remarks, forBrandOpeningID)
		select  
		t.TransferHeadID, t.BrandOpeningID, case when t.Against='Ge' then 'General' else 'TP' end as Against, t.bottlerate ,sum(t.bottleqty) ,t.spegrate, sum(t.spegqty), 
		t.Box ,t.Batch ,t.mfg, t.TrDetailTPNo, t.Remarks, t.forBrandOpeningID 
		from Tbl_TransferDetailsMst t
		where t.TransferHeadID = @TransferHeadID
		group by t.TransferHeadID, t.BrandOpeningID, t.Against, t.bottlerate,t .spegrate, t.Box , t.Batch , t.mfg, t.TrDetailTPNo, t.Remarks, t.forBrandOpeningID 
	
	                      
		select th.TransferHeadID,Convert(varchar,th.TransferDate,106) as TransferDate,ltrim(rtrim(th.Tpno)) as Tpno,ltrim(rtrim(th.InvioceNo)) as InvioceNo,        
		th.LicenseID,th.Deptid,th.ForLicenseID,ltrim(rtrim(th.FLIV)) as FLIV, isnull(ltrim(rtrim(th.FLIVAddress)),'''') as FLIVAddress         
		from Tbl_TransferHeadMst th         
		where th.TransferHeadID=@TransferHeadID        
	
		--select * from @tempTransfer

		select td.TranferDetailID,td.TransferHeadID,td.BrandOpeningID,        
		td.Against as Against,td.TrDetailTPNo,td.Batch,td.mfg,td.Box,td.Remarks,bh.branddesc,  
		c.SizeID,c.Alias,convert(int,td.spegqty) as spegqty,td.spegrate,convert(int,td.bottleqty) as bottleqty,td.bottlerate, td.forBrandOpeningID   
		from @tempTransfer td                 
		---For BrandName                  
		join tbl_brandopening bo on td.BrandOpeningID=bo.BrandOpeningID                  
		join tbl_brandhead bh on bh.brandid=bo.brandid                   
		---End                  
		---For Size---                
		join Tbl_TransferHeadMst th on th.transferheadid=td.transferheadid                
		join tbl_categorysizelinkup c on c.CategorySizeLinkID = bo.CategorySizeLinkUpID                 

		---end                
		where td.TransferHeadID=@TransferHeadID --and td.TrDetailTPNo=@Tpno               
	end                    

end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchTransferReports') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchTransferReports
GO

CREATE Procedure Spr_FetchTransferReports        
@ToLicenseID numeric(18,0),    
@category varchar(100)='',      
@brand varchar(100)='',      
@size varchar(100)='',      
@cocktail varchar(100)='',      
@LicenseID numeric(18,0),                             
@Tpno varchar(50)='',                            
@InvioceNo varchar(50)='',                            
@FromDate datetime,              
@ToDate datetime,
@FLIVAddress varchar(200)                        
as                              
Begin                              
                       
  declare @strSelect varchar(max)                                        
  declare @strWhere varchar(max)                                        
  set @strSelect = ''                                        
  set @strWhere = ''                             
                            
Set @strSelect ='select Convert(varchar,th.TransferDate,106) as [Transfer Date],l.Licensedesc as [From License],lf.licenseDesc as [To License],bo.BrandDesc as Brand,bo.alias,        
th.TpNo,th.InvioceNo,td.Batch,td.Mfg,td.Box,td.Remarks,td.SpegQty,td.SpegRate,td.BottleQty,td.BottleRate      
from Tbl_TransferHeadMst th        
join Tbl_TransferDetailsMst td on td.TransferHeadID=th.TransferHeadID        
join tbl_license l on l.licenseid=th.LicenseID        
left outer join tbl_license lf on lf.licenseid=th.ForLicenseID        
JOIN vw_BrandOpeningDetails bo on bo.brandopeningid=td.BrandOpeningID        
where (th.licenseID='+Convert(varchar,@licenseId) +' or th.forlicenseid = '+CONVERT(varchar,@licenseid)+')'      
      
      
  
if @ToLicenseID >0    
Begin    
set @strwhere=@strwhere + 'and th.forlicenseid ='''+convert(varchar,@ToLicenseID)+''''    
End    
          
if @FLIVAddress <> ''    
Begin    
set @strwhere=@strwhere + 'and th.FLIVAddress like''%'+convert(varchar,@FLIVAddress)+'%'''    
End       
          
 if @category <> ''                                                    
   Begin                                                    
   set @strWhere=@strWhere + ' and bo.categorydesc like ''%'+ltrim(rtrim(@category))+'%'''                                                   
   End       
 if @brand <> ''                                                    
   Begin                                                    
   set @strWhere=@strWhere + ' and bo.branddesc like ''%'+ltrim(rtrim(@brand))+'%'''                                                   
   End       
 if @size <> ''                                                    
   Begin                                                    
   set @strWhere=@strWhere + ' and bo.alias like ''%'+ltrim(rtrim(@size))+'%'''                                                   
   End       
         
     if @Tpno <> ''                                                    
     Begin                                                    
     set @strWhere=@strWhere + ' and th.Tpno like ''%'+ltrim(rtrim(@Tpno))+'%'''                                                   
     End                                 
                                                
     If @InvioceNo <>''                                                    
     Begin                                                    
     set @strWhere=@strWhere + ' and th.InvioceNo like ''%'+ltrim(rtrim(@InvioceNo))+'%'''                                                    
     End                                
              
 if @FromDate <> '1-Jan-1900' and @ToDate <> '1-Jan-1900'                   
 begin                     
 set @strWhere=@strWhere + ' and convert(smalldatetime,convert(varchar,th.transferdate,102)) between      
       convert(smalldatetime,''' +  convert(varchar,@FromDate,102) + ''')           
                               and  convert(smalldatetime,''' + convert(varchar,@ToDate,102) + ''')'           
              
 end                  
             
 print (@strSelect + @strWhere)                                                                      
 exec  (@strSelect + @strWhere +' Order by th.transferdate ')                             
                            
end 
go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[vw_BrandOpeningDetails]') AND OBJECTPROPERTY(id, N'IsView') = 1)
DROP VIEW [dbo].[vw_BrandOpeningDetails]
GO


CREATE view [dbo].[vw_BrandOpeningDetails]  
As  
	Select l.licenseid, l.licensedesc,bo.sRate,bo.OpeningQty,bo.OpSpQty,bo.BaseQty,bo.OrdNo,bo.PurchaseUnitQty,bo.PurchaseUnitRate,sub.CategoryID,
	bo.NonMovingQty,bo.MasterUnitBottleRate, 
	bo.brandopeningid, bo.CategorySizeLinkUpID, bh.branddesc, lnk.alias, c.categorydesc, bo.brandid, sub.SubCategoryID, sub.SubCategoryName,
	lnk.SizeID
	from tbl_Brandopening bo  
	join tbl_categorysizelinkup lnk on bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID and bo.licenseid = lnk.licenseid  
	join tbl_brandHead bh on bh.brandid = bo.brandid  
	join tbl_license l on l.licenseid = lnk.licenseid  
	join Tbl_Category c on c.categoryid = bh.categoryid and c.categoryid = lnk.Categoryid
	left outer join Tbl_SubCategoryMst sub on sub.CategoryID = c.categoryid and sub.SubCategoryID = bh.SubCategoryID
 
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchcocktail]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchcocktail]
GO

CREATE procedure [dbo].[Spr_fetchcocktail]
@CocktailId numeric(18,0),  
@LicenseID numeric(18,0)  
As  
Begin  
 declare @StrSelect varchar(max)    
 declare @StrWhere varchar(max)    
	If @CocktailId =0 and @LicenseId=0  
 Begin  
      select cr.rate, cd.BrandOpeningid as BrandID,bh.branddesc,cd.Speg,cd.Licenceid,cd.CategorysizelinkID,cs.Alias,cd.cocktailid   
      from tbl_cocktailrate cr  
      join tbl_cocktaildetail cd on cr.cocktailid=cd.cocktailid  and cd.Licenceid = cr.LicenseId  
      join tbl_brandopening op on op.BrandOpeningid = cd.BrandOpeningid  
      join tbl_brandhead bh on op.brandid=bh.brandid  
      join Tbl_CategorySizeLinkup  cs on cd.CategorysizelinkID=cs.categorySizeLinkId  
    End  
Else  
 Begin  
    set @StrSelect = ''    
       set @StrWhere = ''    
       set @strselect='select cr.rate,cd.BrandOpeningid as BrandID,cd.Licenceid,bh.branddesc,cd.Speg,cd.CategorysizelinkID,cs.Alias,cd.cocktailid 
		from tbl_cocktailrate cr  
      join tbl_cocktaildetail cd on cr.cocktailid=cd.cocktailid and cd.Licenceid = cr.LicenseId  
      join tbl_brandopening op on op.BrandOpeningid = cd.BrandOpeningid  
      join tbl_brandhead bh on op.brandid=bh.brandid  
      join Tbl_CategorySizeLinkup  cs on cd.CategorysizelinkID=cs.categorySizeLinkId  
      where 1=1'
   if @LicenseID<>0     
    begin     
  set @StrWhere=@StrWhere+' and  cd.Licenceid='+ convert(varchar,@LicenseID )    
    end    
    if @CocktailID<>0     
    begin     
  set @StrWhere=@StrWhere+' and  cd.CocktailID='+ convert(varchar,@CocktailId )    
    end    
 print(@StrSelect+@StrWhere)     
 exec(@StrSelect+@StrWhere)    
 End  
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Savepurchase]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Savepurchase]
GO

--Created By - Vijay  on 17-Apr-2012                              
CREATE Procedure [dbo].[Spr_Savepurchase]
@PurchaseId numeric(18,0),                          
@SupplierId numeric(18,0),                    
@TPno varchar(50),                    
@InvoiceNo varchar(50),                    
@Purchasedate smalldatetime,                    
@OtherchargeType varchar(100),                    
@Othercharge numeric(14,2),                    
@Discountper  numeric(14,2),                    
@Discount numeric(18,0),                    
@ForLicenseId numeric(18,0),                            
@LicenseID  numeric(18,0),          
@PurchaseXML xml,                            
@username varchar(100),                            
@Outbit bit output,                            
@OutMsg varchar(50) output                               
as                              
Begin
	set @OutMsg = ''
	
	exec Spr_CheckDate @Purchasedate,@LicenseID,@Outbit output   

	if @Outbit=1  
	begin

		declare @tmpConsumedBrand TABLE 
		(
			brandopeningid numeric(18,0)
		)

		Declare @hDoc int                                          
		EXEC sp_xml_preparedocument @hDoc Output, @PurchaseXML             
		declare @temptable table                            
		(                            
		BrandopeningId numeric(18,0),                    
		SQuantity  numeric(18,0),                           
		SRate  numeric(14,2),                    
		BottleQty numeric(18,0),                    
		BottleRate  numeric(14,2),                    
		FreeQty numeric(18,0),                    
		Noofbox numeric(18,0),                    
		CategoryTaxId numeric(18,0),                    
		taxper numeric(14,2),                    
		batchNo varchar(50),                    
		Mfg varchar(50)                    
		)                            

		insert into @temptable                            
		(BrandopeningId,SQuantity,SRate,BottleQty,BottleRate,FreeQty,Noofbox,CategoryTaxId,taxper,batchNo,Mfg)                            
		Select BrandOpeningID,SQuantity,SRate,BottleQty,BottleRate,FreeQty,Noofbox,CategoryTaxId,taxper,batchNo,Mfg                    
		From OpenXML(@hDoc,'/Master/Purchase/Purchasedetail') with                                    
		(                                    
		BrandopeningId numeric(18,0),                    
		SQuantity  numeric(18,0),                           
		SRate  numeric(14,2),                    
		BottleQty numeric(18,0),                    
		BottleRate  numeric(14,2),                    
		FreeQty numeric(18,0),                    
		Noofbox numeric(18,2),                    
		CategoryTaxId numeric(18,0),                    
		taxper numeric(14,2),                    
		batchNo varchar(50),                    
		Mfg varchar(50)                    
		)

		declare  @temptablev2 table         
		(        
		BrandopeningId numeric(18,0),                    
		SQuantity  numeric(18,0),                           
		SRate  numeric(14,2),                    
		BottleQty numeric(18,0),                    
		BottleRate  numeric(14,2),                    
		FreeQty numeric(18,0),                    
		Noofbox numeric(18,2),                    
		CategoryTaxId numeric(18,0),                    
		taxper numeric(14,2),                    
		batchNo varchar(50),                    
		Mfg varchar(50),        
		Categoryid numeric(18,0),        
		SizeId numeric(18,0)        
		)               

		insert into @temptablev2         
		(BrandopeningId ,SQuantity ,SRate ,BottleQty ,BottleRate  ,FreeQty ,                    
		Noofbox ,CategoryTaxId ,taxper ,batchNo ,Mfg ,Categoryid ,SizeId )        
		select temp.BrandopeningId,temp.SQuantity,temp.SRate,temp.BottleQty,temp.BottleRate,temp.FreeQty,temp.Noofbox,temp.CategoryTaxId,temp.taxper,        
		temp.batchNo,temp.Mfg,        
		case         
		when c.CategoryDesc like '%BEER%' then 1        
		when c.CategoryDesc like '%wine%'   then 2                        
		when c.CategoryDesc like '%SPIRIT%' then 3                        
		end,   
		lnk.SizeId        
		from @temptable temp        
		join tbl_BrandOpening br on temp.BrandopeningId=br.BrandOpeningID        
		join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID=br.CategorySizeLinkUpID        
		join Tbl_Category c on lnk.CategoryID=c.CategoryID           

		--select * from @temptable

		if @PurchaseId=0                
		Begin
			Insert Into tbl_Purchasehead(SupplierId,TPno,InvoiceNo,Purchasedate,OtherchargeType,Othercharge,Discountper, 
			Discount,ForLicenseId,LicenseId,oprc,dtc)                    
			values(@SupplierId,@TPno,@InvoiceNo,@Purchasedate,@OtherchargeType,@Othercharge,@Discountper,
			@Discount,@ForLicenseId,@LicenseId,@username,getdate())                    
			set @PurchaseId= scope_identity()

			set @outmsg='Saved Successfully'                              

			exec Spr_UpdateBrandMasterRate @PurchaseXML
		End
		Else
		begin

			update tbl_Purchasehead Set            
			SupplierId=@SupplierId,TPNo=@TPNo,InvoiceNo=@InvoiceNo,Purchasedate=@Purchasedate,OtherchargeType=@OtherchargeType,            
			Othercharge=@Othercharge,Discountper=@Discountper,Discount=@Discount,ForLicenseId=@ForLicenseId,LicenseId=@LicenseId,
			oprm = @username, dtm = getdate()
			where PurchaseId=@PurchaseId
 
			declare @strSQL varchar(100)
			set @strSQL = ''
			
			insert into @tmpConsumedBrand(brandopeningid)
			select distinct brandopeningid from Fun_GetConsumedBrand(@PurchaseID, 'P')

			select @strSQL = @strSQL + ltrim(rtrim(isnull(vw.branddesc,''))) + ' ' + ltrim(Rtrim(isnull(vw.alias,''))) + ','
			from @tmpConsumedBrand c
			join vw_brandopeningdetails vw on vw.brandopeningid = c.brandopeningid

			if @strSQL <> ''
			begin
				set @strSQL = substring(@strSQL, 1, len(@strSQL) - 1)
			end

			delete t
			from @tmpConsumedBrand c
			join @temptablev2 t on c.brandopeningid = t.BrandOpeningID


			Delete f
			from Tbl_FIFORecords f
			left outer join @tmpConsumedBrand c on c.brandopeningid = f.BrandOpeningID 
			where c.brandopeningid is null and f.PurchaseId=@PurchaseID

			Delete t
			from tbl_purchasedetail t
			left outer join @tmpConsumedBrand c on c.brandopeningid = t.BrandOpeningID 
			where c.brandopeningid is null and t.PurchaseId=@PurchaseID
			
		End

		
		insert into tbl_purchasedetail                    
		(PurchaseID,BrandopeningId,SQuantity,SRate,BottleQty,BottleRate,FreeQty,Noofbox,CategoryTaxId,taxper,batchNo,Mfg,oprc,dtc,
		PurchaseUnitQty,NonMovableQty,PurchaseUnitRate,MasterPurRate,MasterUnitBottleRate,PurchaseUnitBottleRate)
		select
		@PurchaseID,temp.BrandOpeningID,temp.SQuantity,temp.SRate,temp.BottleQty,temp.BottleRate,temp.FreeQty,temp.Noofbox,          
		case temp.CategoryTaxId when 0 then null else temp.CategoryTaxId end,          
		case temp.taxper when 0 then null else temp.taxper end,          
		temp.batchNo,temp.Mfg,@username,getdate(),          
		dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(temp.BottleQty,0) + isnull(temp.FreeQty,0), temp.SQuantity),          
		dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(temp.BottleQty,0) + isnull(temp.FreeQty,0), temp.SQuantity),
		bh.PurchasePegRate, bh.PurRatePeg, det.PurchaseRate, det.PurchaseTrnRate
		from @temptablev2 temp          
		join Tbl_BrandOpening bo on bo.BrandOpeningID = temp.BrandOpeningID  
		join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
		join tbl_BrandHead bh on bh.brandid = bo.brandid and bh.categoryid = lnk.categoryid        
		join tbl_BrandDet det on det.brandid=bo.brandid and det.sizeid=temp.sizeid 

		insert into tbl_fifoRecords
		(PurchaseId,PurdetailID,BrandOpeningID,sPegQty,sPegRate,BottleQty,BottleRate,      
		FreeQty,Noofbox,UnitQty,NonMovableQty,PurchaseRate,MasterPurRate, Oprc,Dtc,MasterUnitBottleRate,PurchaseUnitBottleRate)
		select 
		pd.PurchaseID,pd.PurdetailID,pd.BrandOpeningID,pd.SQuantity,pd.SRate,pd.BottleQty,pd.BottleRate,
		pd.FreeQty,pd.Noofbox,pd.PurchaseUnitQty, pd.NonMovableQty, pd.PurchaseUnitRate, pd.MasterPurRate, @username,getdate(),
		pd.MasterUnitBottleRate, pd.PurchaseUnitBottleRate
		from tbl_purchasedetail pd
		join @temptablev2 temp on temp.brandopeningid = pd.brandopeningid
		where pd.PurchaseID = @PurchaseID


		set @outbit=1       
		if @outmsg = ''
		begin
			if @strSQL <> ''
			begin
				set @outmsg='Updated Successfully except ' + @strSQL
			end
			else
			begin
				set @outmsg='Updated Successfully'
			end
		end
	end
	else
	begin
		set @OutMsg = 'Freezdate Already Exists'  
		set @Outbit = 0
	end
	print @OutMsg
	print @Outbit
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveTransferMaster]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveTransferMaster]
GO

CREATE procedure [dbo].[Spr_SaveTransferMaster] 
@TransferHeadID numeric(18,0),                  
@TransferDate datetime,                  
@Tpno varchar(50),                  
@InvoiceNo varchar(50), 
@ForLicenseID numeric(18,0),                  
@FLIV varchar(50),   
@FLIVAddress varchar(500),                    
@LicenseID numeric(18,0),          
@DeptID numeric(18,0),                 
@XmlDoc xml,               
@UserName varchar(100),                  
@OutBit bit Output,                   
@OutMsg varchar(100) output                     
as                  
begin
	declare @newtransferdetailid numeric(18,0)
	set @newtransferdetailid = 0
	set @OutMsg = ''

	if @DeptID = 0           
	begin          
		set @DeptID = null          
	end          
	else          
	begin          
		set @ForLicenseID = null          
	end

	if ltrim(rtrim(@FLIV)) <> ''
	begin
		set @ForLicenseID = null
	end

	Declare @hDoc int                                            
	EXEC sp_xml_preparedocument @hDoc Output, @XmlDoc                           

	declare @tmpConsumedBrand TABLE 
	(
		brandopeningid numeric(18,0)
	)

	declare @temptable table                              
	(
		idn int identity(1,1),                              
		BrandopeningId numeric(18,0),                      
		Against char(2),                             
		TrDetailTPNo varchar(50),                      
		Batch varchar(50),                      
		mfg varchar(50),                      
		Box varchar(10),
		Remarks varchar(500),            
		spegqty numeric(18,0),            
		spegrate numeric(14,2),            
		bottleqty numeric(18,0),            
		bottlerate numeric(14,2),    
		ForBrandOpeningID NUMERIC(18,0)    
	)

	declare @temptablev2 table                              
	(
		idn int,
		BrandopeningId numeric(18,0),                      
		Against char(2),                             
		TrDetailTPNo varchar(50),                      
		Batch varchar(50),                      
		mfg varchar(50),                      
		Box varchar(10),
		Remarks varchar(500),            
		spegqty numeric(18,0),            
		spegrate numeric(14,2),            
		bottleqty numeric(18,0),            
		bottlerate numeric(14,2),    
		ForBrandOpeningID NUMERIC(18,0),
		SaleType char(1)
	)                             

	insert into @temptable                              
	(BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,ForBrandOpeningID)                              
	Select BrandopeningId,against,tpno,batch,mfg,box,remarks,spegqty,spegrate,bottleqty,bottlerate,ForBrandOpeningID                   
	From OpenXML(@hDoc,'/Master/Transfer/transferdetail') with                                      
	(                                      
		BrandopeningId numeric(18,0),                      
		against char(2),                             
		tpno varchar(50),                      
		batch varchar(50),                      
		mfg varchar(50),                      
		box varchar(10),                      
		remarks varchar(500),                    
		spegqty numeric(18,0),            
		spegrate numeric(14,2),            
		bottleqty numeric(18,0),            
		bottlerate numeric(14,2),    
		ForBrandOpeningID NUMERIC(18,0)          
	)
	
	if @TransferHeadID=0        
	begin        
		Insert Into Tbl_TransferHeadMst(TransferDate,Tpno,InvioceNo,LicenseID,ForLicenseID,FLIV,FLIVAddress,DeptID,oprc,dtc)                      
		values(@TransferDate,@Tpno,@InvoiceNo,@LicenseID,@ForLicenseID,@FLIV,@FLIVAddress,@DeptID,@Username,getdate())                      
		set @TransferHeadID= scope_identity()
--		set @TransferHeadID= 101
		set @outmsg='Saved Successfully'    
	end        
	Else        
	begin
		declare @strSQL varchar(100)
		set @strSQL = ''
	
		insert into @tmpConsumedBrand(brandopeningid)
		select distinct brandopeningid from Fun_GetConsumedBrand(@TransferHeadID, 'T')

		select @strSQL = @strSQL + ltrim(rtrim(isnull(vw.branddesc,''))) + ' ' + ltrim(Rtrim(isnull(vw.alias,''))) + ','
		from @tmpConsumedBrand c
		join vw_brandopeningdetails vw on vw.brandopeningid = c.brandopeningid

		if @strSQL <> ''
		begin
			set @strSQL = substring(@strSQL, 1, len(@strSQL) - 1)
		end
	
		delete t
		from @tmpConsumedBrand c
		join @temptable t on c.brandopeningid = t.ForBrandOpeningID

		update Tbl_TransferHeadMst set TransferDate=@TransferDate,Tpno=@Tpno,InvioceNo=@InvoiceNo,LicenseID=@LicenseID,
		ForLicenseID=@ForLicenseID,FLIV=@FLIV,FLIVAddress=@FLIVAddress,
		DeptID=@DeptID
		where TransferHeadId=@TransferHeadId

		declare @tmpFIFOBrand table
		(
			FifoRecordsID numeric(18,0),
			BrandOpeningID numeric(18,0),
			Qty	numeric(18,0)
		)

		insert into @tmpFIFOBrand(FifoRecordsID, BrandOpeningID, Qty)
		select t.FifoRecordsID, t.BrandOpeningID, SUM(t.unitqty)
		from Tbl_TransferDetailsMst t 
		join @temptable temp on temp.BrandOpeningID = t.BrandOpeningID
		where t.TransferHeadID=@TransferHeadID
		group by t.FifoRecordsID, t.BrandOpeningID

		update f
		set f.UnitQty = f.UnitQty + tmp.Qty
		from @tmpFIFOBrand tmp
		join Tbl_FIFORecords f on tmp.FifoRecordsID = f.FifoRecordsID and tmp.BrandOpeningID = f.BrandOpeningID

		declare @tmpOPBrand table
		(
			BrandOpeningID numeric(18,0),
			Qty	numeric(18,0)
		)

		insert into @tmpOPBrand(BrandOpeningID, Qty)
		select t.BrandOpeningID, SUM(t.unitqty)
		from Tbl_TransferDetailsMst t
		join @temptable temp on temp.BrandOpeningID = t.BrandOpeningID
		where t.TransferHeadID=@TransferHeadID and t.FifoRecordsID is null
		group by t.BrandOpeningID

		update bo
		set bo.PurchaseUnitQty = bo.PurchaseUnitQty + tmp.Qty 
		from @tmpOPBrand tmp
		join Tbl_BrandOpening bo on tmp.BrandOpeningID = bo.BrandOpeningID

		Delete f
		from Tbl_FIFORecords f
		left outer join @tmpConsumedBrand c on c.brandopeningid = f.TrnforBrandOpeningID 
		where c.brandopeningid is null and f.TrnTransferHeadID=@TransferHeadID
		
		Delete t
		from Tbl_TransferDetailsMst t
		left outer join @tmpConsumedBrand c on c.brandopeningid = t.forBrandOpeningID 
		where c.brandopeningid is null and t.TransferHeadID=@TransferHeadID
		
	end    

	declare @tmpFIFO table    
	(    
		FifoRecordsID numeric(18,0),    
		UnitQty numeric(18,0),    
		MasterPurRate numeric(14,2),    
		PurchaseRate numeric(14,2)    
	)

	insert into @temptablev2
	(idn, BrandopeningId, Against, TrDetailTPNo, Batch, mfg, Box, Remarks, spegqty, spegrate, bottleqty, bottlerate, ForBrandOpeningID, SaleType)
	SELECT
	idn, BrandopeningId, Against, TrDetailTPNo, Batch, mfg, Box, Remarks, 0, 0, bottleqty, bottlerate, ForBrandOpeningID, 'B'
	FROM @temptable 
	where bottleqty <> 0
	union all
	SELECT
	idn, BrandopeningId, Against, TrDetailTPNo, Batch, mfg, Box, Remarks, spegqty, spegrate, 0, 0, ForBrandOpeningID, 'S'
	FROM @temptable 
	where spegqty <> 0

	--select * from Tbl_TransferHeadMst    
	declare @unitqty numeric(18,0)            
	declare @BrandopeningId numeric(18,0)            
	declare @CategorySizeLinkUpID numeric(18,0)            
	declare @MasterPurRate numeric(14,2)                
	declare @PurchaseRate numeric(14,2)
	declare @MasterUnitBottleRate numeric(14,2)
	declare @PurchaseUnitBottleRate numeric(14,2)
	declare @id numeric(18,0)
	declare @uniqueid numeric(18,0)
	declare @locPurchaseUnitQty numeric(18,0)
	declare @locbrandopquantity numeric(18,0) 
	declare @locpurchaseqty numeric(18,0)
	declare @tempDeduction numeric(18,0)
	declare @SaleType char(1)    
	while(select count(BrandopeningId) from @temptablev2) > 0            
	begin   

		set @BrandopeningId = 0            
		set @unitqty = 0            
		set @CategorySizeLinkUpID = 0            
		set @MasterPurRate = 0            
		set @PurchaseRate = 0          
		set @locPurchaseUnitQty = 0
		set @locbrandopquantity = 0              
		set @locpurchaseqty = 0

		select top 1 @uniqueid = idn, @BrandopeningId = BrandopeningId, @SaleType = SaleType from @temptablev2 order by idn--BrandopeningId          

		select @CategorySizeLinkUpID = CategorySizeLinkUpID from tbl_brandopening where BrandopeningId = @BrandopeningId

		Select top 1 @unitqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, bottleqty, spegqty)                
		from @temptablev2 where BrandopeningId = @BrandopeningId and idn = @uniqueid          

		print @unitqty   

		delete from @tmpFIFO    
		    
		insert into @tmpFIFO    
		(FifoRecordsID, UnitQty, MasterPurRate, PurchaseRate)    
		select     
		f.FifoRecordsID, f.UnitQty, f.MasterPurRate, f.PurchaseRate     
		from tbl_fiforecords f where f.brandopeningid = @BrandOpeningID and f.UnitQty > 0    
		union all    
		Select    
		f.FifoRecordsID, f.UnitQty, f.MasterPurRate, f.PurchaseRate       
		from tbl_fiforecords f
		join Tbl_TransferHeadMst tr on tr.TransferHeadID = f.TrnTransferHeadID
		where f.TrnforBrandOpeningID = @BrandOpeningID and f.UnitQty > 0 and tr.ForLicenseID is not null
		order by f.FifoRecordsID

		--select * from @tmpFIFO
		--select PurchaseUnitQty from tbl_brandopening where BrandOpeningID = @BrandOpeningID
		set @tempDeduction = 0
		if(select PurchaseUnitQty from tbl_brandopening where BrandOpeningID = @BrandOpeningID) <> 0
		begin			

			select @locPurchaseUnitQty = PurchaseUnitQty from tbl_brandopening where BrandOpeningID = @BrandOpeningID     
			if @unitqty >= @locPurchaseUnitQty
			begin
				Update tbl_brandopening              
				set PurchaseUnitQty = 0 , @MasterPurRate = PurchaseUnitRate, @PurchaseRate = PurchaseUnitRate, 
				@MasterUnitBottleRate = MasterUnitBottleRate, @PurchaseUnitBottleRate = MasterUnitBottleRate
				where BrandOpeningID = @BrandOpeningID   
				set @unitqty = @unitqty - @locPurchaseUnitQty
				set @tempDeduction = @locPurchaseUnitQty
			end
			  else
			begin
				Update tbl_brandopening              
				set PurchaseUnitQty = PurchaseUnitQty - @unitqty, @MasterPurRate = PurchaseUnitRate, @PurchaseRate = PurchaseUnitRate, 
				@MasterUnitBottleRate = MasterUnitBottleRate, @PurchaseUnitBottleRate = MasterUnitBottleRate              
				where BrandOpeningID = @BrandOpeningID 
				set @tempDeduction = @unitqty
				set @unitqty = 0
			end            

			if @SaleType = 'B'
			begin

				insert into Tbl_TransferDetailsMst            
				(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc, 
				MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)            
				select            
				@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,0,0,            
				dbo.Fun_CalcBottleDecimal(@tempDeduction, @CategorySizeLinkUpID),temp.bottlerate,@UserName,getdate(), 
				@MasterPurRate, @PurchaseRate, @tempDeduction,temp.forBrandOpeningID, @MasterUnitBottleRate, @PurchaseUnitBottleRate
				from @temptablev2 temp            
				--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
				where idn = @uniqueid --and temp.BrandopeningId = @BrandOpeningID			
 
			end
			else if @SaleType = 'S'
			begin

				insert into Tbl_TransferDetailsMst            
				(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc, 
				MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)
				select            
				@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,
				dbo.Fun_Calcspeg(@tempDeduction, @CategorySizeLinkUpID, 'S'), temp.spegrate,
				0, 0, @UserName, getdate(), 
				@MasterPurRate, @PurchaseRate, @tempDeduction,temp.forBrandOpeningID, @MasterUnitBottleRate, @PurchaseUnitBottleRate            
				from @temptablev2 temp            
				--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
				where idn = @uniqueid --and temp.BrandopeningId = @BrandOpeningID			

			end

			set @newtransferdetailid = scope_identity()

			insert into tbl_fifoRecords    
			(TrnTranferDetailID,TrnTransferHeadID,BrandOpeningID,sPegQty,sPegRate,BottleQty,BottleRate,      
			FreeQty,Noofbox,UnitQty,NonMovableQty,PurchaseRate,MasterPurRate,    
			TrnBatch,TrnBox,Oprc,Dtc,TrnforBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)
			select            
			temp.TranferDetailID, temp.TransferHeadID, temp.BrandOpeningID, temp.spegqty,temp.spegrate,
			temp.bottleqty, temp.bottlerate,    
			0, 0, temp.UnitQty, temp.UnitQty, temp.PurchaseRate, temp.MasterPurRate,
			temp.batch,temp.box,@UserName,getdate(),temp.forBrandOpeningID, temp.MasterUnitBottleRate, temp.PurchaseUnitBottleRate
			from Tbl_TransferDetailsMst temp            
			--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
			where temp.TranferDetailID = @newtransferdetailid
			--temp.BrandopeningId = @BrandOpeningID and
			
		end
		--select 'sachin', @unitqty

		if @unitqty > 0
		begin			

			While(@unitqty > 0)    
			begin
				select top 1 @id = FifoRecordsID, @locpurchaseqty = UnitQty from @tmpFIFO order by FifoRecordsID    

				--select @unitqty, 'case 3', @locpurchaseqty

				if @unitqty <= @locpurchaseqty    
				begin    
					--select @id, @unitqty    
	
					update fi    
					set UnitQty = temp.UnitQty - @unitqty, @MasterPurRate = fi.MasterPurRate, @PurchaseRate = fi.PurchaseRate, 
					@MasterUnitBottleRate = fi.MasterUnitBottleRate, @PurchaseUnitBottleRate = fi.PurchaseUnitBottleRate
					from @tmpFIFO temp    
					join tbl_fiforecords fi on fi.FifoRecordsID = temp.FifoRecordsID    
					where fi.FifoRecordsID = @id

					if @SaleType = 'B'
					begin

						insert into Tbl_TransferDetailsMst            
						(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc, 
						MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)            
						select            
						@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,0,0,            
						dbo.Fun_CalcBottleDecimal(@unitqty, @CategorySizeLinkUpID),temp.bottlerate,@UserName,getdate(), 
						@MasterPurRate, @PurchaseRate, @unitqty,temp.forBrandOpeningID, @MasterUnitBottleRate, @PurchaseUnitBottleRate            
						from @temptablev2 temp            
						--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
						where idn = @uniqueid --and temp.BrandopeningId = @BrandOpeningID

					end
					else if @SaleType = 'S'
					begin

						insert into Tbl_TransferDetailsMst            
						(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc, 
						MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)
						select            
						@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,
						dbo.Fun_Calcspeg(@unitqty, @CategorySizeLinkUpID, 'S'), temp.spegrate,
						0, 0, @UserName, getdate(), 
						@MasterPurRate, @PurchaseRate, @unitqty,temp.forBrandOpeningID, @MasterUnitBottleRate, @PurchaseUnitBottleRate
						from @temptablev2 temp            
						--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
						where idn = @uniqueid --and temp.BrandopeningId = @BrandOpeningID			

					end

					set @newtransferdetailid = scope_identity()

					insert into tbl_fifoRecords    
					(TrnTranferDetailID,TrnTransferHeadID,BrandOpeningID,sPegQty,sPegRate,BottleQty,BottleRate,      
					FreeQty,Noofbox,UnitQty,NonMovableQty,PurchaseRate,MasterPurRate,    
					TrnBatch,TrnBox,Oprc,Dtc,TrnforBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)
					select            
					temp.TranferDetailID, temp.TransferHeadID, temp.BrandOpeningID, temp.spegqty,temp.spegrate,
					temp.bottleqty, temp.bottlerate,    
					0, 0, temp.UnitQty, temp.UnitQty, temp.PurchaseRate, temp.MasterPurRate,
					temp.batch,temp.box,@UserName,getdate(),temp.forBrandOpeningID, temp.MasterUnitBottleRate, temp.PurchaseUnitBottleRate
					from Tbl_TransferDetailsMst temp            
					--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
					where temp.TranferDetailID = @newtransferdetailid
					--temp.BrandopeningId = @BrandOpeningID and

					/*
					insert into Tbl_TransferDetailsMst            
					(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc, 
					MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID,FIFORecordsId)            
					select            
					@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,temp.spegqty,temp.spegrate,            
					dbo.Fun_CalcBottlefromspeg(@unitqty, @CategorySizeLinkUpID),
					temp.bottlerate,@UserName,getdate(), @MasterPurRate, @PurchaseRate,             
					@unitqty,temp.forBrandOpeningID,@id           
					from @temptablev2 temp            
					--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
					where temp.idn = @uniqueid --temp.BrandopeningId = @BrandOpeningID and 

					set @newtransferdetailid = scope_identity()

					insert into tbl_fifoRecords(TrnTranferDetailID,TrnTransferHeadID,BrandOpeningID,sPegQty,sPegRate,BottleQty,BottleRate,      
					FreeQty,Noofbox,UnitQty,NonMovableQty,PurchaseRate,MasterPurRate,TrnBatch,TrnBox,Oprc,Dtc,TrnforBrandOpeningID)      
					select            
					temp.TranferDetailID, temp.TransferHeadID,@BrandOpeningID,temp.spegqty,temp.spegrate,dbo.Fun_CalcBottlefromspeg(@unitqty, @CategorySizeLinkUpID),
					temp.bottlerate,    
					0,0, @unitqty,@unitqty,      
					@PurchaseRate,@MasterPurRate,             
					temp.batch,temp.box,@UserName,getdate(),temp.forBrandOpeningID              
					from Tbl_TransferDetailsMst temp            
					--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
					where temp.TranferDetailID = @newtransferdetailid --and temp.BrandopeningId = @BrandOpeningID
					*/

				end
				else
				begin

					update fi    
					set UnitQty = temp.UnitQty - @locpurchaseqty, @MasterPurRate = fi.MasterPurRate, @PurchaseRate = fi.PurchaseRate,
					@MasterUnitBottleRate = MasterUnitBottleRate, @PurchaseUnitBottleRate = PurchaseUnitBottleRate                  
					from @tmpFIFO temp    
					join tbl_fiforecords fi on fi.FifoRecordsID = temp.FifoRecordsID    
					where fi.FifoRecordsID = @id

					if @SaleType = 'B'
					begin

						insert into Tbl_TransferDetailsMst            
						(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc, 
						MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)          
						select            
						@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,0,0,            
						dbo.Fun_CalcBottleDecimal(@locpurchaseqty, @CategorySizeLinkUpID),temp.bottlerate,@UserName,getdate(), 
						@MasterPurRate, @PurchaseRate, @locpurchaseqty,temp.forBrandOpeningID, @MasterUnitBottleRate, @PurchaseUnitBottleRate 
						from @temptablev2 temp            
						--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
						where idn = @uniqueid --and temp.BrandopeningId = @BrandOpeningID

					end
					else if @SaleType = 'S'
					begin

						insert into Tbl_TransferDetailsMst            
						(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc, 
						MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)                      
						select            
						@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,
						dbo.Fun_Calcspeg(@locpurchaseqty, @CategorySizeLinkUpID, 'S'), temp.spegrate,
						0, 0, @UserName, getdate(), 
						@MasterPurRate, @PurchaseRate, @locpurchaseqty,temp.forBrandOpeningID, @MasterUnitBottleRate, @PurchaseUnitBottleRate             
						from @temptablev2 temp            
						--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
						where idn = @uniqueid --and temp.BrandopeningId = @BrandOpeningID			

					end

					set @newtransferdetailid = scope_identity()

					insert into tbl_fifoRecords    
					(TrnTranferDetailID,TrnTransferHeadID,BrandOpeningID,sPegQty,sPegRate,BottleQty,BottleRate,      
					FreeQty,Noofbox,UnitQty,NonMovableQty,PurchaseRate,MasterPurRate,    
					TrnBatch,TrnBox,Oprc,Dtc,TrnforBrandOpeningID, MasterUnitBottleRate, PurchaseUnitBottleRate)
					select            
					temp.TranferDetailID, temp.TransferHeadID, temp.BrandOpeningID, temp.spegqty,temp.spegrate,
					temp.bottleqty, temp.bottlerate,    
					0, 0, temp.UnitQty, temp.UnitQty, temp.PurchaseRate, temp.MasterPurRate,
					temp.batch,temp.box,@UserName,getdate(),temp.forBrandOpeningID, temp.MasterUnitBottleRate, temp.PurchaseUnitBottleRate
					from Tbl_TransferDetailsMst temp            
					--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
					where temp.TranferDetailID = @newtransferdetailid
					--temp.BrandopeningId = @BrandOpeningID and

					/*
					insert into Tbl_TransferDetailsMst
					(TransferHeadID,BrandopeningId,Against,TrDetailTPNo,Batch,mfg,Box,Remarks,spegqty,spegrate,bottleqty,bottlerate,oprc,dtc,
					MasterPurRate, PurchaseRate, UnitQty,forBrandOpeningID,FIFORecordsId)            
					select            
					@TransferHeadID,@BrandOpeningID,temp.against,temp.TrDetailTPNo,temp.batch,temp.mfg,temp.box,temp.remarks,temp.spegqty,temp.spegrate,            
					dbo.Fun_CalcBottlefromspeg(@locpurchaseqty, @CategorySizeLinkUpID),
					temp.bottlerate,@UserName,getdate(), @MasterPurRate, @PurchaseRate,             
					@locpurchaseqty,temp.forBrandOpeningID,@id          
					from @temptablev2 temp            
					--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId            
					where temp.idn = @uniqueid --and temp.BrandopeningId = @BrandOpeningID

					set @newtransferdetailid = scope_identity()

					insert into tbl_fifoRecords(TrnTranferDetailID,TrnTransferHeadID,BrandOpeningID,sPegQty,sPegRate,BottleQty,BottleRate,      
					FreeQty,Noofbox,UnitQty,NonMovableQty,PurchaseRate,MasterPurRate,TrnBatch,TrnBox,Oprc,Dtc,TrnforBrandOpeningID)      
					select            
					temp.TranferDetailID, temp.TransferHeadID,@BrandOpeningID,temp.spegqty,temp.spegrate,dbo.Fun_CalcBottlefromspeg(@locpurchaseqty, @CategorySizeLinkUpID),
					temp.bottlerate,    
					0,0, @locpurchaseqty,@locpurchaseqty,      
					@PurchaseRate,@MasterPurRate,             
					temp.batch,temp.box,@UserName,getdate(),temp.forBrandOpeningID              
					from Tbl_TransferDetailsMst temp            
					--join tbl_brandopening bo on bo.BrandopeningId = temp.BrandopeningId      
					where temp.TranferDetailID = @newtransferdetailid --and temp.BrandopeningId = @BrandOpeningID
					*/

				end 

				select @unitqty = @unitqty - @locpurchaseqty
				delete from @tmpFIFO where FifoRecordsID = @id

			end --while
		end
        
		--SELECT @BrandopeningId          
		delete from @temptablev2 where BrandopeningId = @BrandopeningId  and idn = @uniqueid   
	end

	set @outbit=1       
	if @outmsg = ''
	begin
		if @strSQL <> ''
		begin
			set @outmsg='Updated Successfully except ' + @strSQL
		end
		else
		begin
			set @outmsg='Updated Successfully'
		end
		
	end

	--print @outbit
	--print @outmsg
	
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveCategorySizeLinkUP]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveCategorySizeLinkUP]
GO

--Created By - naresh  on 4-Apr-2012      
CREATE Procedure [dbo].[Spr_SaveCategorySizeLinkUP]    
@CategoryId numeric(18,0),    
@LicenseID  numeric(18,0),    
@CategorySizeXML xml,    
@username varchar(100),    
@Outbit bit output,    
@OutMsg varchar(50) output       
as      
Begin    
    
Begin try    
 Begin tran    
     
  Declare @hDoc int                  
  EXEC sp_xml_preparedocument @hDoc Output, @CategorySizeXML    
    
  declare @temptable table    
  (    
   LicenseID numeric(18,0),    
   CategoryID numeric(18,0),    
   SizeID numeric(18,0),    
   Alias varchar(50),    
   ML varchar(20),    
   Speg numeric(18,0),    
   StockIN char(1),
	noofspeg numeric(18,0),
	pegsize numeric(18,0)    
  )    
      
  insert into @temptable    
  (SizeID, Alias, ML, Speg, StockIN,noofspeg,pegsize)    
  Select SizeID, Alias, ML, Speg, StockIN, NoOfSpeg, PegSize     
  From OpenXML(@hDoc,'/Master/CatgSizeLnk/CatgSize') with            
  (            
   SizeID numeric(18,0),    
   Alias varchar(50),    
   ML varchar(20),    
   Speg numeric(14,2),    
   StockIN char(1),
	NoOfSpeg numeric(18,0),
	PegSize numeric(18,0)
  )     
    
  insert into tbl_Categorysizelinkup    
  (LicenseID, CategoryID, SizeID, Alias, ML, Speg, StockIN, NoOfSpeg, PegSize, Oprc, Dtc)    
  Select     
  @LicenseID, @CategoryID, temp.SizeID, temp.Alias, temp.ML, temp.Speg, temp.StockIN, temp.noofspeg, temp.pegsize, @username, getdate()    
  From @temptable temp   
 left outer join tbl_Categorysizelinkup lnk on lnk.Sizeid = temp.Sizeid and     
  lnk.CategoryId = @CategoryId and lnk.LicenseID = @LicenseID     
  where lnk.Sizeid is null    
    
  Update lnk    
  Set lnk.Alias = temp.Alias, lnk.ML = temp.ML, lnk.Speg = temp.Speg, lnk.StockIN = temp.StockIN, 
	lnk.NoOfSpeg = temp.NoOfSpeg, lnk.PegSize = temp.PegSize
  From @temptable temp    
  join tbl_Categorysizelinkup lnk on lnk.Sizeid = temp.Sizeid    
  where lnk.CategoryId = @CategoryId and lnk.LicenseID = @LicenseID    
      
  --delete lnk    
  --From tbl_Categorysizelinkup lnk    
 --left outer join @temptable temp on lnk.Sizeid = temp.Sizeid     
  --where lnk.CategoryId = @CategoryId and lnk.LicenseID = @LicenseID and temp.Sizeid is null

	insert into tbl_branddet
	(BrandID, SizeID, BoxQty, PurchaseRate,Oprc, Dtc, PurchaseTrnRate)
	select bh.BrandID, lnk.SizeID, 0, 0, 'admin', getdate(), 0
	from tbl_categorysizelinkup lnk
	join tbl_brandhead bh on bh.categoryid = lnk.categoryid 
	left outer join tbl_branddet det on det.brandid = bh.brandid and det.SizeID = lnk.SizeID
	where det.SizeID is null and lnk.licenseid = @LicenseID and lnk.categoryid = @CategoryId
    
  set @outbit=1    
  set @outmsg='Saved Successfully'      
  commit    
 End Try    
 Begin Catch    
  set @OutMsg='Cannot Delete the Record'      
  set @Outbit=0    
  rollback      
 End Catch    
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_DeleteTransfer') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_DeleteTransfer
GO

CREATE Proc Spr_DeleteTransfer    
@TransferHeadID numeric(18,0),      
@Outbit bit output,      
@OutMsg varchar(50) output      
as      
Begin try      
	Begin tran

		declare @IsValid bit
		set @IsValid = 1
	
		Select @IsValid = dbo.Fun_CheckTransferEditDelete(@TransferHeadID,'T')

		if @IsValid = 1
		begin

			declare @tmpFIFOBrand table
			(
				FifoRecordsID numeric(18,0),
				BrandOpeningID numeric(18,0),
				Qty	numeric(18,0)
			)

			insert into @tmpFIFOBrand(FifoRecordsID, BrandOpeningID, Qty)
			select FifoRecordsID, BrandOpeningID, SUM(unitqty)
			from Tbl_TransferDetailsMst where TransferHeadID=@TransferHeadID
			group by FifoRecordsID, BrandOpeningID

			update f
			set f.UnitQty = f.UnitQty + tmp.Qty
			from @tmpFIFOBrand tmp
			join Tbl_FIFORecords f on tmp.FifoRecordsID = f.FifoRecordsID and tmp.BrandOpeningID = f.BrandOpeningID

			declare @tmpOPBrand table
			(
				BrandOpeningID numeric(18,0),
				Qty	numeric(18,0)
			)

			insert into @tmpOPBrand(BrandOpeningID, Qty)
			select BrandOpeningID, SUM(unitqty)
			from Tbl_TransferDetailsMst where TransferHeadID=@TransferHeadID and FifoRecordsID is null
			group by BrandOpeningID

			update bo
			set bo.PurchaseUnitQty = bo.PurchaseUnitQty + tmp.Qty 
			from @tmpOPBrand tmp
			join Tbl_BrandOpening bo on tmp.BrandOpeningID = bo.BrandOpeningID



			delete from Tbl_FIFORecords where TrnTransferHeadID=@TransferHeadID  
			delete from Tbl_TransferDetailsMst where TransferHeadID=@TransferHeadID  
			delete from Tbl_TransferHeadMst where TransferHeadID=@TransferHeadID   
			set @OutMsg='Deleted Sucessfully'    
			set @Outbit=1
		end
		else
		begin
			set @OutMsg='This transfer already used in other transaction'
			set @Outbit=0
		end
		/*
		delete from Tbl_FIFORecords where TrnTransferHeadID=@TransferHeadID  
		delete from Tbl_TransferDetailsMst where TransferHeadID=@TransferHeadID  
		delete from Tbl_TransferHeadMst where TransferHeadID=@TransferHeadID   
		set @OutMsg='Deleted Sucessfully'      
		set @Outbit=1        
		*/
	commit      
End Try      
Begin Catch      
	set @OutMsg='Cannot Delete the Record'        
	set @Outbit=0      
	rollback        
End Catch
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_DeletePurchase') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_DeletePurchase
GO

--Created By :Vijay on 9 Apr 2012        
CREATE Proc Spr_DeletePurchase  
@PurchaseId numeric(18,0),    
@Outbit bit output,    
@OutMsg varchar(50) output    
as  
Begin  
	Begin try    
		Begin tran

		declare @IsValid bit
		set @IsValid = 1
	
		Select @IsValid = dbo.Fun_CheckTransferEditDelete(@PurchaseId, 'P')
		
		if @IsValid = 1
		begin
			delete from Tbl_FIFORecords where PurchaseId=@PurchaseId  
			delete from tbl_Purchasedetail where PurchaseID=@PurchaseId 
			delete from tbl_purchasehead   where PurchaseId=@PurchaseId 
			set @OutMsg='Deleted Sucessfully'    
			set @Outbit=1
		end
		else
		begin
			set @OutMsg='This purchase already used in other transaction'
			set @Outbit=0
		end
		
		      
		commit    
	End Try    
	Begin Catch    
		set @OutMsg='Cannot Delete the Record'      
		set @Outbit=0    
		rollback      
	End Catch
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchBrandOpeningReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchBrandOpeningReport]
GO

CREATE procedure [dbo].[Spr_fetchBrandOpeningReport]
@date smalldatetime,  
@LicenseID numeric(18,0),  
@istruncate bit = 1 
as  
begin

	if @istruncate = 1
	begin

		--truncate table CwplusReport..tbl_Report
		truncate table tbl_Report

		--insert into CwplusReport..tbl_Report   
		insert into tbl_Report   
		(Brandid,categorydesc,branddesc, fromdate)   
		select distinct  b.BrandID , c.CategoryDesc ,b.BrandDesc, @date   
		from Tbl_Category c   
		join tbl_BrandHead b  
		on c.CategoryID=b.CategoryID order by b.BrandID 

		--truncate table CwplusReport..tbl_temReport   
		truncate table tbl_temReport   


		--insert into CwplusReport..tbl_temReport   
		insert into tbl_temReport   
		(Brandid,categorydesc,branddesc, fromdate)   
		select distinct  b.BrandID , c.CategoryDesc ,b.BrandDesc, @date  
		from Tbl_Category c   
		join tbl_BrandHead b  
		on c.CategoryID=b.CategoryID order by b.BrandID  

	end


	declare @tempbrand table  
	(  
		brandopeningid numeric(18,0),  
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		branddesc char(100),                           
		Bottle numeric(18,0) default 0,  
		Speg numeric(18,0) default 0,  
		Glass numeric(18,0) default 0,  
		Alise varchar(100),  
		Reportsize numeric(18,0),  
		Categorytype int  
	)  

	insert into @tempbrand (brandopeningid,Reportsize,brandid,CategorySizeLinkID,categorydesc,branddesc,Alise,Categorytype)  
	select distinct bo.BrandOpeningID, s.Reportsize,b.brandid, cs.CategorySizeLinkID, c.CategoryDesc, b.BrandDesc, cs.Alias,  
	case                   
	when c.CategoryDesc like '%BEER%' then  1                    
	when c.CategoryDesc like '%wine%' then   2                  
	when c.CategoryDesc like '%SPIRIT%' then 3                  
	end  as Categorytype        
	from Tbl_Category c  
	join tbl_BrandHead b on c.CategoryID=b.CategoryID  
	join tbl_BrandOpening bo on bo.BrandID=b.BrandID  
	join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID  and cs.CategorySizeLinkID=bo.CategorySizeLinkUpID and cs.LicenseID=bo.LicenseID  
	join Tbl_Size s on s.SizeID=cs.SizeID   
	where bo.LicenseID=@LicenseID --and b.brandid = 25
	order by c.CategoryDesc  

	--select * from @tempbrand  

	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	)        
	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid,brandid, CategorySizeLinkUpID from tbl_brandopening 
	where LicenseID=@LicenseID --and brandid = 25
	order by brandid

	--select * from @tempbrand  


	declare @brandid numeric(18,0)  
	declare @CategorySizeLinkUpID numeric(18,0) 
	declare @BrandOpeningID numeric(18,0)

	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID = BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by brandid

		declare @StockIN char(1)    
		declare @spegqty numeric(18,0)    
		declare @sizeml int    
		declare @totalspges numeric(18,0)
		declare @TransferLicenseID numeric(18,0)
		declare @TransferCategoryID numeric(18,0)
		declare @TransferSizeID numeric(18,0)
		declare @TransferCategorySizeLinkID numeric(18,0)

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID 


		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where BrandOpeningID = @BrandOpeningID		

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by pd.BrandOpeningID   

			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId  
			where pd.BrandOpeningID=@BrandOpeningID                 
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by pd.BrandOpeningID 

			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId  
			where pd.BrandOpeningID=@BrandOpeningID                 
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by pd.BrandOpeningID   
		
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID = @BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID = @BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty) 
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId   
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId 
			where sd.BrandOpeningID=@BrandOpeningID           
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId 
			where sd.BrandOpeningID=@BrandOpeningID           
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sd.BrandOpeningID 
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sc.BrandOpeningID  
			-- print @totalspges  

			--if @totalspges < 0  
			--begin  
				--set @totalspges = @totalspges * - 1  
			--end  

			--print @totalspges    

			update @tempbrand   
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
			where BrandOpeningID=@BrandOpeningID 

		end    
		else    
		begin    

			--print 'Rakesh'
			--set @date = '31-May-2012'  

			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b  
			where b.BrandOpeningID=@BrandOpeningID 

			--print  @totalspges               

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID 

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by pd.BrandOpeningID   

			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph     
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by pd.BrandOpeningID 
			--print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by pd.BrandOpeningID         

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId 
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId   
			where sd.BrandOpeningID=@BrandOpeningID          
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)  
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId   
			where sd.BrandOpeningID=@BrandOpeningID          
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sd.BrandOpeningID  
			  


			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@date,102))  
			group by sc.BrandOpeningID  
			-- print @totalspges  

			--if @totalspges < 0  
			--begin  
				--set @totalspges = @totalspges * -1  
			--end  

			--print @totalspges

			update @tempbrand    
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
			where BrandOpeningID=@BrandOpeningID       

		end

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID  
	end

	delete from @tempbrand where Bottle = 0 and Speg = 0 and Glass = 0

	--select * from @tempbrand
   
	while (select count(*) from @tempbrand) > 0  
	begin  
		declare @brandopeningidre numeric(18,0)  
		declare @sizere numeric(18,0)  
		declare @brandidre numeric(18,0)  
		declare @Bottle numeric(18,0)  
		declare @speg numeric(18,0)  
		declare @glass numeric(18,0)  
		declare @categorytypere int  
		set @sizere=0  
		set @brandidre=0  
		set @Bottle=0  
		set @speg=0  
		set @glass=0  
		set @brandopeningidre=0  
		set @categorytypere=0  
		declare @hstr varchar(max)  
		set @hstr =''  

		select top 1 @brandidre=brandid,@categorytypere=Categorytype,@Bottle=Bottle,@speg=Speg,@glass=Glass, @sizere=Reportsize,
		@brandopeningidre=brandopeningid from @tempbrand order by brandopeningid	
		--if ltrim(rtrim(convert(varchar,@Bottle)))+ltrim(rtrim(convert(varchar,@speg))) <> '00'
		--begin
			set @hstr='update tbl_temReport   set N_op' + convert(varchar,@sizere)+' = '+convert(varchar,@Bottle)+ 
			',D_op' + convert(varchar,@sizere) + '=' + convert(varchar,@speg)+  
			' , isblank = 0 where Brandid='+convert(varchar,@brandidre)+  
			' and convert(smalldatetime,convert(varchar,fromdate,102)) = convert(smalldatetime,'''+convert(varchar,@date,102)+''')'
		--end
		print (@hstr) 
		exec (@hstr)

		delete from  @tempbrand where brandopeningid=@brandopeningidre  

	end  
 --select * from  CwplusReport..tbl_temReport
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchPurchaseReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchPurchaseReport]
GO

CREATE procedure [dbo].[Spr_fetchPurchaseReport] 
@date smalldatetime,
@LicenseID numeric(18,0)
as
begin

	declare @tempbrand table
	(
	brandopeningid numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkID numeric(18,0),
	categorydesc char(100),
	branddesc char(100),                         
	Bottle numeric(18,0) default 0,
	Speg numeric(18,0) default 0,
	Glass numeric(18,0) default 0,
	Alise varchar(100),
	Reportsize numeric(18,0),
	Categorytype int,
	tpno varchar(50)
	)

	declare @temptpno table
	(
		Tpno varchar(50)
	)

	insert into @tempbrand (brandopeningid,Reportsize,brandid,CategorySizeLinkID,categorydesc,branddesc,Alise,Categorytype)
	select distinct bo.BrandOpeningID, s.Reportsize,b.brandid, cs.CategorySizeLinkID, c.CategoryDesc, b.BrandDesc, cs.Alias,
	case                 
	when c.CategoryDesc like '%BEER%' then   1                  
	when c.CategoryDesc like '%wine%' then   2                
	when c.CategoryDesc like '%SPIRIT%'then  3                
	end  as Categorytype      
	from Tbl_Category c
	join tbl_BrandHead b on c.CategoryID=b.CategoryID
	join tbl_BrandOpening bo on bo.BrandID=b.BrandID
	join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID  and cs.CategorySizeLinkID=bo.CategorySizeLinkUpID and cs.LicenseID=bo.LicenseID
	join Tbl_Size s on s.SizeID=cs.SizeID 
	where bo.LicenseID=@LicenseID --and b.brandid = 661
	order by c.CategoryDesc

	declare @tempwhile table      
	(
	brandopeningid numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkUpID numeric(18,0)      
	)      
	insert into @tempwhile (brandopeningid, brandid,CategorySizeLinkUpID) 
	select distinct brandopeningid, brandid, CategorySizeLinkUpID from tbl_brandopening
	where LicenseID=@LicenseID --and brandid = 661
	order by brandid

	declare @brandid numeric(18,0)
	declare @CategorySizeLinkUpID numeric(18,0)
	declare @brandopeningid numeric(18,0)

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid = brandopeningid, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		declare @StockIN char(1)  
		declare @spegqty numeric(18,0)  
		declare @sizeml int  
		declare @totalspges numeric(18,0)
		declare @strtpno varchar(max)

		declare @TransferLicenseID numeric(18,0)
		declare @TransferCategoryID numeric(18,0)
		declare @TransferSizeID numeric(18,0)
		declare @TransferCategorySizeLinkID numeric(18,0)

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0
		set @strtpno=''  

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

		--print @totalspges  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by pd.BrandOpeningID
			
			delete from @temptpno
			insert into @temptpno(Tpno)
			select distinct isnull(ph.Tpno,'')
			--select @strtpno=@strtpno + ',' + isnull(ph.TPno,'')
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))= convert(smalldatetime,convert(varchar,@date,102))
			--group by pd.BrandOpeningID
			select @strtpno=isnull(@strtpno,'') + ',' + isnull(Tpno,'') from @temptpno

			--print @totalspges  
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID	
			
			delete from @temptpno
			insert into @temptpno(Tpno)
			select distinct isnull(th.Tpno,'')
			--select @strtpno=@strtpno + ',' + isnull(th.Tpno,'')
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))  		
			--group by td.BrandOpeningID
		
			select @strtpno=isnull(@strtpno,'') + ',' + isnull(Tpno,'') from @temptpno

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			--print @totalspges  

			update @tempbrand 
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
			tpno=@strtpno
			where BrandOpeningID=@BrandOpeningID  

		end  
		else  
		begin  		

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by pd.BrandOpeningID
			
			delete from @temptpno
			insert into @temptpno(Tpno)
			select distinct isnull(ph.Tpno,'')
			--select @strtpno=@strtpno +  ',' + isnull(ph.TPno,'')
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))= convert(smalldatetime,convert(varchar,@date,102))
			--group by pd.BrandOpeningID	

			select @strtpno=isnull(@strtpno,'') + ',' + isnull(Tpno,'') from @temptpno

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))  		
			group by td.BrandOpeningID	

			delete from @temptpno
			insert into @temptpno(Tpno)
			select distinct isnull(th.Tpno,'')
			--select @strtpno=@strtpno + ',' + isnull(th.Tpno,'')
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))  		
			--group by td.BrandOpeningID		

			select @strtpno=isnull(@strtpno,'') + ',' + isnull(Tpno,'') from @temptpno

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			update @tempbrand  
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
			tpno=@strtpno
			where BrandOpeningID=@BrandOpeningID

		end
		delete from @tempwhile where brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID

	end
	
	--select * from @tempbrand

	delete from @tempbrand where Bottle = 0 and Speg = 0 and Glass = 0

	while (select count(*) from @tempbrand) > 0
	begin
		declare @brandopeningidre numeric(18,0)
		declare @sizere numeric(18,0)
		declare @brandidre numeric(18,0)
		declare @Bottle numeric(18,0)
		declare @speg numeric(18,0)
		declare @glass numeric(18,0)
		declare @categorytypere int
		declare @tpno varchar(50)
		set @sizere=0
		set @brandidre=0
		set @Bottle=0
		set @speg=0
		set @glass=0
		set @brandopeningidre=0
		set @categorytypere=0
		set @tpno = ''
		declare @hstr varchar(max)
		set @hstr =''

		select top 1 @brandidre=brandid,@categorytypere=Categorytype,@Bottle=Bottle,@speg=Speg,@glass=Glass, @sizere=Reportsize,
		@brandopeningidre=brandopeningid,@tpno=tpno from @tempbrand order by brandopeningid
		--select 'bottle', @Bottle

		set @hstr='update tbl_temReport  set N_pur' + isnull(convert(varchar,@sizere),'')+' = '+ isnull(convert(varchar,@Bottle),'')+', D_pur'+ isnull(convert(varchar,@sizere),'')+ '=' + isnull(convert(varchar,@speg),'')+
		' , isblank = 0,tpno=''' + @tpno + ''' where Brandid='+convert(varchar,@brandidre)+
		' and convert(smalldatetime,convert(varchar,fromdate,102)) = convert(smalldatetime,'''+convert(varchar,@date,102)+''')'
	
		print (@hstr)
		exec (@hstr)

		delete from  @tempbrand where brandopeningid=@brandopeningidre

	end

	update tbl_temReport 
	set
	N_pur1000 = case when N_pur1000 = 0.000 then null else N_pur1000  end, 
	D_pur1000 = case when D_pur1000 = 0.000 then null else D_pur1000  end, 
	N_pur500 = case when N_pur500 = 0.000 then null else N_pur500  end, 
	D_pur500 = case when D_pur500 = 0.000 then null else D_pur500  end, 
	N_pur750 = case when N_pur750 = 0.000 then null else N_pur750  end, 
	D_pur750 = case when D_pur750 = 0.000 then null else D_pur750  end, 
	N_pur650 = case when N_pur650 = 0.000 then null else N_pur650  end, 
	D_pur650 = case when D_pur650 = 0.000 then null else D_pur650  end, 
	N_pur375 = case when N_pur375 = 0.000 then null else N_pur375  end, 
	D_pur375 = case when D_pur375 = 0.000 then null else D_pur375  end, 
	N_pur330 = case when N_pur330 = 0.000 then null else N_pur330  end, 
	D_pur330 = case when D_pur330 = 0.000 then null else D_pur330  end, 
	N_pur325 = case when N_pur325 = 0.000 then null else N_pur325  end, 
	D_pur325 = case when D_pur325 = 0.000 then null else D_pur325  end, 
	N_pur180 = case when N_pur180 = 0.000 then null else N_pur180  end, 
	D_pur180 = case when D_pur180 = 0.000 then null else D_pur180  end, 
	N_pur60 = case when N_pur60 = 0.000 then null else N_pur60  end,
	D_pur60 = case when D_pur60 = 0.000 then null else D_pur60  end



	

	--SELECT * FROM CwplusReport..tbl_temReport where branddesc like '%BEER IMPORTED HEINEKEN%'
 	--SELECT * FROM CwplusReport..tbl_temReport where branddesc like '%BEER IMPORTED HOEGAARDEN%'
	--SELECT * FROM CwplusReport..tbl_temReport where branddesc like '%VODKA IMPORTED ABSOLUT%'
	--SELECT * FROM CwplusReport..tbl_temReport where branddesc like '%WINE ARGENTINIAN CHARDONNAY TERRAZAS %'
	--SELECT tpno FROM CwplusReport..tbl_temReport where tpno is not null 
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchSaleReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchSaleReport]
GO

CREATE procedure [dbo].[Spr_fetchSaleReport]
@date smalldatetime,
@LicenseID numeric(18,0)
as
begin

	declare @tempbrand table
	(
	brandopeningid numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkID numeric(18,0),
	categorydesc char(100),
	branddesc char(100),                         
	Bottle numeric(18,0) default 0,
	Speg numeric(18,0) default 0,
	Glass numeric(18,0) default 0,
	Alise varchar(100),
	Reportsize numeric(18,0),
	Categorytype int,
	tpno varchar(50)
	)

	declare @temptpno table
	(
		Tpno varchar(50)
	)

	insert into @tempbrand (brandopeningid,Reportsize,brandid,CategorySizeLinkID,categorydesc,branddesc,Alise,Categorytype)
	select distinct bo.BrandOpeningID, s.Reportsize,b.brandid, cs.CategorySizeLinkID, c.CategoryDesc, b.BrandDesc, cs.Alias,
	case                 
	when c.CategoryDesc like '%BEER%' then  1                  
	when c.CategoryDesc like '%wine%' then   2                
	when c.CategoryDesc like '%SPIRIT%' then 3                
	end  as Categorytype      
	from Tbl_Category c
	join tbl_BrandHead b on c.CategoryID=b.CategoryID
	join tbl_BrandOpening bo on bo.BrandID=b.BrandID
	join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID  and cs.CategorySizeLinkID=bo.CategorySizeLinkUpID and cs.LicenseID=bo.LicenseID
	join Tbl_Size s on s.SizeID=cs.SizeID 
	where bo.LicenseID=@LicenseID --and b.brandid = 634
	order by c.CategoryDesc

	--SELECT * FROM @tempbrand
	
	declare @tempwhile table      
	(
	BrandOpeningID numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkUpID numeric(18,0)      
	)      
	insert into @tempwhile (BrandOpeningID,brandid,CategorySizeLinkUpID) 
	select distinct BrandOpeningID, brandid, CategorySizeLinkUpID from tbl_brandopening
	where LicenseID=@LicenseID  --and brandid = 634
	order by brandid

	--select * from @tempwhile

	declare @brandid numeric(18,0)
	declare @CategorySizeLinkUpID numeric(18,0)
	declare @BrandOpeningID numeric(18,0)
	while (select count(*) from @tempwhile) > 0        
	begin
		select top 1 @BrandOpeningID = BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by brandid

		declare @StockIN char(1)  
		declare @spegqty numeric(18,0)  
		declare @sizeml int  
		declare @totalspges numeric(18,0)
		declare @strtp varchar(max)

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0
		set @strtp = ''  

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin
		
		--select 'Rakesh'

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2)
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sd.BrandOpeningID


			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by td.BrandOpeningID

			delete from @temptpno
			insert into @temptpno(Tpno)
			select distinct isnull(th.Tpno,'')
			--select @strtp=isnull(@strtp,'') + ','+ isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))

			select @strtp=isnull(@strtp,'') + ',' + isnull(Tpno,'') from @temptpno
		
--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			--print @totalspges  

			update @tempbrand 
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
			tpno=@strtp
			where BrandOpeningID=@BrandOpeningID  

		end  
		else  
		begin  
		
		--select 'Rakesh'
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges +  ((sum(sd.Lpeg)*@spegqty)*2)
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sd.BrandOpeningID
			
			
			
			
			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by sc.BrandOpeningID

			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			group by td.BrandOpeningID

			delete from @temptpno
			insert into @temptpno(Tpno)
			select distinct isnull(th.Tpno,'')
			--select @strtp=isnull(@strtp,'') + ',' + isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))= convert(smalldatetime,convert(varchar,@date,102))
			
			select @strtp=isnull(@strtp,'') + ',' + isnull(Tpno,'') from @temptpno
			-- print @totalspges
--
--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			--select @totalspges

			update @tempbrand  
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
			tpno=@strtp
			where BrandOpeningID=@BrandOpeningID 
			
			--select * from @tempbrand 

		end

		delete from @tempwhile where brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempbrand where Bottle = 0 and Speg = 0 and Glass = 0
	
	--SELECT tpno FROM CwplusReport..tbl_temReport where tpno is not null
   --select * from @tempbrand --where brandid = 72 




   
	while (select count(*) from @tempbrand) > 0
	begin
		declare @brandopeningidre numeric(18,0)
		declare @sizere numeric(18,0)
		declare @brandidre numeric(18,0)
		declare @Bottle numeric(18,0)
		declare @speg numeric(18,0)
		declare @glass numeric(18,0)
		declare @categorytypere int
		declare @tpno varchar(max)
		set @tpno = ''
		set @sizere=0
		set @brandidre=0
		set @Bottle=0
		set @speg=0
		set @glass=0
		set @brandopeningidre=0
		set @categorytypere=0
		declare @hstr varchar(max)
		set @hstr =''

		select top 1 @brandidre=brandid,@categorytypere=Categorytype,@Bottle=Bottle,@speg=Speg,@glass=Glass, @sizere=Reportsize,
		@brandopeningidre=brandopeningid, @tpno= isnull(tpno,'') from @tempbrand order by brandopeningid

		set @hstr='update tbl_temReport  set N_sal' + convert(varchar,@sizere)+' = '+convert(varchar,@Bottle)+
		', D_sal'+ convert(varchar,@sizere)+ '=' +convert(varchar,@speg)+
		' , isblank = 0,tpno=isnull(tpno,'''')+'''+ @tpno +''' where Brandid='+convert(varchar,@brandidre)+
		' and convert(smalldatetime,convert(varchar,fromdate,102)) = convert(smalldatetime,'''+convert(varchar,@date,102)+''')'

		exec  (@hstr)
		print (@hstr)

		delete from  @tempbrand where brandopeningid=@brandopeningidre

	end

	update tbl_temReport set tpno = substring(tpno,2,len(tpno))


  --select * from CwplusReport..tbl_temReport where categorydesc='Spirits'
 



	--SELECT sum(D_sal750) FROM CwplusReport..tbl_temReport
	--group by categorydesc  --where tpno is not null
	
	
	--select sum(d_sal750) from CwplusReport..tbl_temReport where categorydesc='spirits'  
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchClosingReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchClosingReport]
GO

CREATE procedure [dbo].[Spr_FetchClosingReport]
@date smalldatetime,
@LicenseID numeric(18,0)
as
begin


	create table #temtable
	(
		Brandid numeric(18,0), --constraint pk_brandid primary key,	
		N_op1000 numeric(18,0),	D_op1000 numeric(18,0),	N_op500   numeric(18,0),	D_op500 numeric(18,0),	N_op750 numeric(18,0),	D_op750 numeric(18,0),
		N_op650 numeric(18,0),	D_op650 numeric(18,0),	N_op375   numeric(18,0),	D_op375 numeric(18,0),	N_op330 numeric(18,0),	D_op330 numeric(18,0),
		N_op325 numeric(18,0),	D_op325 numeric(18,0),	N_op180   numeric(18,0),	D_op180 numeric(18,0),	N_op60 numeric(18,0),	D_op60 numeric(18,0),
		N_pur1000 numeric(18,0),D_pur1000 numeric(18,0),N_pur500  numeric(18,0),	D_pur500 numeric(18,0),	N_pur750 numeric(18,0),	D_pur750 numeric(18,0),
		N_pur650 numeric(18,0),	D_pur650 numeric(18,0),	N_pur375  numeric(18,0),	D_pur375 numeric(18,0),	N_pur330 numeric(18,0),	D_pur330 numeric(18,0),
		N_pur325 numeric(18,0),	D_pur325 numeric(18,0),	N_pur180  numeric(18,0),	D_pur180 numeric(18,0),	N_pur60 numeric(18,0),
		D_pur60 numeric(18,0),	N_sal1000 numeric(18,0),D_sal1000 numeric(18,0),    N_sal500 numeric(18,0),	D_sal500 numeric(18,0),
		N_sal750 numeric(18,0),	D_sal750 numeric(18,0),	N_sal650  numeric(18,0),	D_sal650 numeric(18,0),	N_sal375 numeric(18,0),
		D_sal375 numeric(18,0),	N_sal330 numeric(18,0),	D_sal330  numeric(18,0),	N_sal325 numeric(18,0),	D_sal325 numeric(18,0),	N_sal180 numeric(18,0),
		D_sal180 numeric(18,0),	N_sal60 numeric(18,0),	D_sal60   numeric(18,0),	N_clo1000 numeric(18,0),D_clo1000 numeric(18,0), N_clo500 numeric(18,0),
		D_clo500 numeric(18,0),	N_clo750 numeric(18,0),	D_clo750  numeric(18,0),	N_clo650 numeric(18,0),	D_clo650 numeric(18,0),	D_clo375 numeric(18,0),
		N_clo375 numeric(18,0),	D_clo330 numeric(18,0),	N_clo330  numeric(18,0),	N_clo325 numeric(18,0),	D_clo325 numeric(18,0),	N_clo180 numeric(18,0),
		D_clo180 numeric(18,0),	D_clo60 numeric(18,0),	N_clo60   numeric(18,0),    CategorySizeLinkupId numeric(18,0), Units numeric(18,0),
		fromdate datetime
	)
		
	insert into #temtable
	(Brandid, N_op1000, D_op1000, N_op500, D_op500, N_op750, D_op750, N_op650, D_op650, N_op375, D_op375, N_op330, D_op330, N_op325, D_op325, 
	N_op180, D_op180, N_op60, D_op60, N_pur1000, D_pur1000, N_pur500, D_pur500, N_pur750, D_pur750, N_pur650, D_pur650, N_pur375, D_pur375, 
	N_pur330, D_pur330, N_pur325, D_pur325, N_pur180, D_pur180, N_pur60, D_pur60, N_sal1000, D_sal1000, N_sal500, D_sal500, N_sal750, D_sal750, 
	N_sal650, D_sal650, N_sal375, D_sal375, N_sal330, D_sal330, N_sal325, D_sal325, N_sal180, D_sal180, N_sal60, D_sal60, fromdate)
	--, N_clo1000, D_clo1000, 
	--N_clo500, D_clo500, N_clo750, D_clo750, N_clo650, D_clo650, D_clo375, N_clo375, D_clo330, N_clo330, N_clo325, D_clo325, N_clo180, D_clo180, 
	--D_clo60, N_clo60)
	select 
	Brandid,
	isnull(N_op1000,0) as N_op1000, isnull(D_op1000,0) as D_op1000, isnull(N_op500,0) as N_op500, isnull(D_op500,0) as D_op500, isnull(N_op750,0) as N_op750, 
	isnull(D_op750,0) as D_op750, isnull(N_op650,0) as N_op650, isnull(D_op650,0) as D_op650, isnull(N_op375,0) as N_op375, isnull(D_op375,0) as D_op375, 
	isnull(N_op330,0) as N_op330, isnull(D_op330,0) as D_op330, isnull(N_op325,0) as N_op325, isnull(D_op325,0) as D_op325, isnull(N_op180,0) as N_op180, 
	isnull(D_op180,0) as D_op180, isnull(N_op60,0) as N_op60, isnull(D_op60,0) as D_op60, isnull(N_pur1000,0) as N_pur1000, isnull(D_pur1000,0) as D_pur1000, 
	isnull(N_pur500,0) as N_pur500,isnull(D_pur500,0) as D_pur500, isnull(N_pur750,0) as N_pur750, isnull(D_pur750,0) as D_pur750, isnull(N_pur650,0) as N_pur650, 
	isnull(D_pur650,0) as D_pur650,isnull(N_pur375,0) as N_pur375, isnull(D_pur375,0) as D_pur375, isnull(N_pur330,0) as N_pur330, isnull(D_pur330,0) as D_pur330, 
	isnull(N_pur325,0) as N_pur325, isnull(D_pur325,0) as D_pur325, isnull(N_pur180,0) as N_pur180, isnull(D_pur180,0) as D_pur180, isnull(N_pur60,0) as N_pur60, 
	isnull(D_pur60,0) as D_pur60, isnull(N_sal1000,0) as N_sal1000, isnull(D_sal1000,0) as D_sal1000, isnull(N_sal500,0) as N_sal500, 
	isnull(D_sal500,0) as D_sal500, isnull(N_sal750,0) as N_sal750, isnull(D_sal750,0) as D_sal750, isnull(N_sal650,0) as N_sal650, isnull(D_sal650,0) as D_sal650, 
	isnull(N_sal375,0) as N_sal375, isnull(D_sal375,0) as D_sal375, isnull(N_sal330,0) as N_sal330, isnull(D_sal330,0) as D_sal330, isnull(N_sal325,0) as N_sal325, 
	isnull(D_sal325,0) as D_sal325, isnull(N_sal180,0) as N_sal180, isnull(D_sal180,0) as D_sal180, isnull(N_sal60,0) as N_sal60, isnull(D_sal60,0) as D_sal60,
	@date
	--isnull(N_clo1000,0) as N_clo1000, isnull(D_clo1000,0) as D_clo1000, isnull(N_clo500,0) as N_clo500, isnull(D_clo500,0) as D_clo500, 
	--isnull(N_clo750,0) as N_clo750, isnull(D_clo750,0) as D_clo750, isnull(N_clo650,0) as N_clo650, isnull(D_clo650,0) as D_clo650, isnull(D_clo375,0) as D_clo375, 
	--isnull(N_clo375,0) as N_clo375, isnull(D_clo330,0) as D_clo330, isnull(N_clo330,0) as N_clo330, isnull(N_clo325,0) as N_clo325, isnull(D_clo325,0) as D_clo325, 
	--isnull(N_clo180,0) as N_clo180, isnull(D_clo180,0) as D_clo180, isnull(D_clo60,0) as D_clo60, isnull(N_clo60,0) as N_clo60 
	from 
	tbl_temreport
	where isblank = 0 --and brandid = 119
	and convert(smalldatetime,convert(varchar,fromdate,102)) = convert(smalldatetime,convert(varchar,@date,102))


	declare @temsize table 
	(
		SizeID numeric(18,0),
		reportsize numeric(18,0) 
	)
	declare @brandid numeric(18,0)
	declare @categoryid numeric(18,0)
	declare @tpno varchar(50)
	declare @size numeric(18,0)
	declare @sizeid numeric(18,0)
	declare @categorysizelinkupid numeric(18,0)
	declare @brandopeningid numeric(18,0)

	declare @BOunits numeric(18,0)
	declare @PURunits numeric(18,0)
	declare @SALEunits numeric(18,0)

	declare @hstring varchar(max)	

	while (select count(*) from #temtable) > 0
	begin		
		delete from @temsize
		insert into @temsize (SizeID,reportsize) select SizeID,Reportsize from Tbl_Size
		
		--select * from @temsize
		
		set @tpno=''
		set @brandid=0
		set @categoryid=0

		select top 1 @brandid=Brandid from #temtable

		select @categoryid=CategoryID from tbl_BrandHead where BrandID=@brandid
			
		--select 'raka',count(*) from @temsize
		--print 'raka' + convert(varchar,@categoryid)
		
		while (select count(*) from @temsize) > 0
		begin

			set @BOunits  = 0
			set @PURunits  = 0
			set @SALEunits  = 0
			set @categorysizelinkupid = 0
			set @size = 0 
			set @sizeid = 0
			set @brandopeningid = 0

			select top 1 @sizeid=SizeID, @size=Reportsize from @temsize order by sizeid

			--print @LicenseID
			--print @categoryid
			--print @sizeid

			select @categorysizelinkupid=isnull(CategorySizeLinkID,0) from Tbl_CategorySizeLinkup 
			where LicenseID=@LicenseID and CategoryID=@categoryid  and SizeID=@sizeid
			--print @categorysizelinkupid
			--print 'rak' + convert(varchar, @categorysizelinkupid)
			
			select @brandopeningid = isnull(brandopeningid,0) from tbl_brandopening where categorysizelinkupid = @categorysizelinkupid 
			and licenseid = @licenseid and brandid = @brandid

			
			if @categorysizelinkupid > 0 and @brandopeningid > 0
			begin			

				
				set @hstring=''
				
--				select --@categorysizelinkupid, N_op750, D_op750, 
--				dbo.Fun_CalcunitsForFLR4(@categorysizelinkupid, N_op750, D_op750), 
--				dbo.Fun_CalcunitsForFLR4(@categorysizelinkupid, N_pur750, D_pur750),
--				dbo.Fun_CalcunitsForFLR4(@categorysizelinkupid, N_sal750, D_sal750)
--				from #temtable 

				set @hstring = 'update #temtable 
				set CategorySizeLinkupId  = '+convert(varchar,@categorysizelinkupid)+',
				Units = (dbo.Fun_CalcunitsForFLR4('+convert(varchar,@categorysizelinkupid)+', N_op'+convert(varchar,@size)+', D_op'+convert(varchar,@size)+') + 
						dbo.Fun_CalcunitsForFLR4('+convert(varchar,@categorysizelinkupid)+', N_pur'+convert(varchar,@size)+', D_pur'+convert(varchar,@size)+')
						)- dbo.Fun_CalcunitsForFLR4('+convert(varchar,@categorysizelinkupid)+', N_sal'+convert(varchar,@size)+', D_sal'+convert(varchar,@size)+')
				where brandid = '+convert(varchar,@brandid)+
				' and convert(smalldatetime,convert(varchar,fromdate,102)) = convert(smalldatetime,'''+convert(varchar,@date,102)+''')'
				
				--print (@hstring)
				exec (@hstring)  		
				
				--select * from #temtable		

				set @hstring = 'update rpt
				set rpt.N_clo'+convert(varchar,@size)+' = dbo.Fun_CalcBottlefromspeg(temp.Units, '+convert(varchar,@categorysizelinkupid)+'), 
				rpt.D_clo'+convert(varchar,@size)+' = dbo.Fun_Calcspegfromspeg(temp.Units, '+convert(varchar,@categorysizelinkupid)+')
				from #temtable temp
				join tbl_temreport rpt on temp.brandid = rpt.brandid
				where rpt.brandid = '+convert(varchar,@brandid)+
				' and convert(smalldatetime,convert(varchar,rpt.fromdate,102)) = convert(smalldatetime,'''+convert(varchar,@date,102)+''')'

				--print (@hstring)
				exec (@hstring)
				
				set @hstring = 'Update rpt
				set
				rpt.op'+convert(varchar,@size)+' = 
				case when N_op'+convert(varchar,@size)+' is null and D_op'+convert(varchar,@size)+' is null then null
				else isnull(convert(varchar,N_op'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_op'+convert(varchar,@size)+'),0) end,
				rpt.pur'+convert(varchar,@size)+' = 
				case when N_pur'+convert(varchar,@size)+' is null and D_pur'+convert(varchar,@size)+' is null then null
				else isnull(convert(varchar,N_pur'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_pur'+convert(varchar,@size)+'),0) end,
				rpt.sal'+convert(varchar,@size)+' = 
				case when N_sal'+convert(varchar,@size)+' is null and D_sal'+convert(varchar,@size)+' is null then null
				else isnull(convert(varchar,N_sal'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_sal'+convert(varchar,@size)+'),0) end,
				rpt.clo'+convert(varchar,@size)+' =
				case when N_clo'+convert(varchar,@size)+' is null and D_clo'+convert(varchar,@size)+' is null then null
				when N_clo'+convert(varchar,@size)+' = 0 and D_clo'+convert(varchar,@size)+' = 0 then null
				else isnull(convert(varchar,N_clo'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_clo'+convert(varchar,@size)+'),0) end,
				rpt.tpno=temp.tpno
				from
				tbl_report rpt
				join tbl_temreport temp on rpt.brandid = temp.brandid
				where rpt.brandid = '+convert(varchar,@brandid)+
				' and convert(smalldatetime,convert(varchar,rpt.fromdate,102)) = convert(smalldatetime,'''+convert(varchar,@date,102)+''')'


				/*
				set @hstring = 'Update rpt
				set
				rpt.op'+convert(varchar,@size)+' = 
				isnull(convert(varchar,N_op'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_op'+convert(varchar,@size)+'),0),
				rpt.pur'+convert(varchar,@size)+' = 
				isnull(convert(varchar,N_pur'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_pur'+convert(varchar,@size)+'),0), 
				rpt.sal'+convert(varchar,@size)+' = 
				isnull(convert(varchar,N_sal'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_sal'+convert(varchar,@size)+'),0), 
				rpt.clo'+convert(varchar,@size)+' =
				isnull(convert(varchar,N_clo'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_clo'+convert(varchar,@size)+'),0), 
				rpt.tpno=temp.tpno
				from
				cwplusreport..tbl_report rpt
				join cwplusreport..tbl_temreport temp on rpt.brandid = temp.brandid
				where rpt.brandid = '+convert(varchar,@brandid)+
				' and convert(smalldatetime,convert(varchar,rpt.fromdate,102)) = convert(smalldatetime,'''+convert(varchar,@date,102)+''')'
				*/
				print (@hstring)
				exec (@hstring) 

			end
			
			--select @size
			delete from @temsize where sizeid=@sizeid
		end --while  size
		
		--select  @brandid
		--select * from #temtable
		--select N_op750, D_op750, dbo.Fun_Calcunits(3, N_op750, D_op750) , dbo.Fun_Calcunits(3, N_pur750, D_pur750), dbo.Fun_Calcunits(3, N_sal750, D_sal750)
		--from #temtable
		delete from #temtable where brandid=@brandid	

	end --while  brand

	
	drop table #temtable

--select * from cwplusreport..tbl_temreport
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchSaleReportMonthwise]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchSaleReportMonthwise]
GO

CREATE procedure [dbo].[Spr_fetchSaleReportMonthwise]
@fromdate smalldatetime,
@todate smalldatetime,
@LicenseID numeric(18,0)
as
begin
	declare @tempbrand table
	(
	--pri int  identity (1,1),
	brandopeningid numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkID numeric(18,0),
	categorydesc char(100),
	branddesc char(100),                         
	Bottle numeric(18,0) default 0,
	Speg numeric(18,0) default 0,
	Glass numeric(18,0) default 0,
	Alise varchar(100),
	Reportsize numeric(18,0),
	Categorytype int,
	tpno varchar(50)
	)

	insert into @tempbrand (brandopeningid,Reportsize,brandid,CategorySizeLinkID,categorydesc,branddesc,Alise,Categorytype)
	select distinct bo.BrandOpeningID, s.Reportsize,b.brandid, cs.CategorySizeLinkID, c.CategoryDesc, b.BrandDesc, cs.Alias,
	case                 
	when c.CategoryDesc like '%BEER%' then  1                  
	when c.CategoryDesc like '%wine%' then   2                
	when c.CategoryDesc like '%SPIRIT%' then 3                
	end  as Categorytype      
	from Tbl_Category c
	join tbl_BrandHead b on c.CategoryID=b.CategoryID
	join tbl_BrandOpening bo on bo.BrandID=b.BrandID
	join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID  and cs.CategorySizeLinkID=bo.CategorySizeLinkUpID and cs.LicenseID=bo.LicenseID
	join Tbl_Size s on s.SizeID=cs.SizeID 
	where bo.LicenseID=@LicenseID  --and bo.brandid = 35
	--group by  bo.brandid, c.CategoryDesc, b.BrandDesc, cs.Alias
	order by c.CategoryDesc

	--select * from @tempbrand


	declare @tempwhile table      
	(      
	BrandOpeningID numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkUpID numeric(18,0)      
	)      
	insert into @tempwhile (BrandOpeningID,brandid,CategorySizeLinkUpID) 
	select distinct BrandOpeningID,brandid, CategorySizeLinkUpID from tbl_brandopening
	where LicenseID=@LicenseID--and brandid = 35
	order by brandid

	--select * from @tempbrand

	declare @brandid numeric(18,0)
	declare @CategorySizeLinkUpID numeric(18,0)
	declare @BrandOpeningID numeric(18,0)


	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		declare @StockIN char(1)  
		declare @spegqty numeric(18,0)  
		declare @sizeml int  
		declare @totalspges numeric(18,0)
		declare @strtp varchar(max)

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp='' 

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			select @strtp=@strtp+ th.Tpno
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			print @totalspges  

			update @tempbrand 
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
			tpno=@strtp
			where BrandOpeningID=@BrandOpeningID

		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			select @strtp=@strtp + th.Tpno
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			update @tempbrand  
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)
			where BrandOpeningID=@BrandOpeningID
		end      

		delete from @tempwhile where brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempbrand where Bottle = 0 and Speg = 0 and Glass = 0

	while (select count(*) from @tempbrand) > 0
	begin
		declare @brandopeningidre numeric(18,0)
		declare @sizere numeric(18,0)
		declare @brandidre numeric(18,0)
		declare @Bottle numeric(18,0)
		declare @speg numeric(18,0)
		declare @glass numeric(18,0)
		declare @categorytypere int
		declare @tpno varchar(max)
		set @tpno=''
		set @sizere=0
		set @brandidre=0
		set @Bottle=0
		set @speg=0
		set @glass=0
		set @brandopeningidre=0
		set @categorytypere=0
		declare @hstr varchar(max)
		set @hstr =''

		select top 1 @brandidre=brandid,@categorytypere=Categorytype,@Bottle=Bottle,@speg=Speg,@glass=Glass, @sizere=Reportsize,
		@brandopeningidre=brandopeningid,@tpno=tpno from @tempbrand order by brandopeningid

		set @hstr='update CwplusReport..tbl_temReport  set N_sal' + convert(varchar,@sizere)+' = '+convert(varchar,@Bottle)+
			', D_sal'+ convert(varchar,@sizere)+ '=' +convert(varchar,@speg)+
			  ', isblank = 0,tpno='''+ isnull(@tpno,'') + '''  where Brandid='+convert(varchar,@brandidre)

		--print (@hstr)
		exec  (@hstr)


		delete from  @tempbrand where brandopeningid=@brandopeningidre

	end

	update CwplusReport..tbl_temReport 
	set 
	N_sal1000 = case when N_sal1000 = 0.000 then null else N_sal1000  end,
	D_sal1000 = case when D_sal1000 = 0.000 then null else D_sal1000  end, 
	N_sal500 = case when N_sal500 = 0.000 then null else N_sal500  end, 
	D_sal500 = case when D_sal500 = 0.000 then null else D_sal500  end, 
	N_sal750 = case when N_sal750 = 0.000 then null else N_sal750  end, 
	D_sal750 = case when D_sal750 = 0.000 then null else D_sal750  end, 
	N_sal650 = case when N_sal650 = 0.000 then null else N_sal650  end, 
	D_sal650 = case when D_sal650 = 0.000 then null else D_sal650  end, 
	N_sal375 = case when N_sal375 = 0.000 then null else N_sal375  end, 
	D_sal375 = case when D_sal375 = 0.000 then null else D_sal375  end, 
	N_sal330 = case when N_sal330 = 0.000 then null else N_sal330  end, 
	D_sal330 = case when D_sal330 = 0.000 then null else D_sal330  end, 
	N_sal325 = case when N_sal325 = 0.000 then null else N_sal325  end, 
	D_sal325 = case when D_sal325 = 0.000 then null else D_sal325  end, 
	N_sal180 = case when N_sal180 = 0.000 then null else N_sal180  end, 
	D_sal180 = case when D_sal180 = 0.000 then null else D_sal180  end, 
	N_sal60 = case when N_sal60 = 0.000 then null else N_sal60  end,
	D_sal60 = case when D_sal60 = 0.000 then null else D_sal60  end


  
	--select * from CwplusReport..tbl_temReport where brandid in (35)

   	

   
 --  select Brandid,categorydesc,branddesc,
	--isnull(convert(varchar,op1000),'') as op1000, isnull(convert(varchar,op500),'') as op500, isnull(convert(varchar,op750),'') as op750, 
	--isnull(convert(varchar,op650),'') as op650, isnull(convert(varchar,op375),'') as op375, isnull(convert(varchar,op330),'') as op330, 
	--isnull(convert(varchar,op325),'') as op325, isnull(convert(varchar,op180),'') as op180, isnull(convert(varchar,op60),'') as op60, 

	--isnull(convert(varchar,pur1000),'') as pur1000, isnull(convert(varchar,pur500),'') as pur500, isnull(convert(varchar,pur750),'') as pur750, 
	--isnull(convert(varchar,pur650),'') as pur650, isnull(convert(varchar,pur375),'') as pur375, isnull(convert(varchar,pur330),'') as pur330, 
	--isnull(convert(varchar,pur325),'') as pur325, isnull(convert(varchar,pur180),'') as pur180, isnull(convert(varchar,pur60),'') as pur60, 

	--isnull(convert(varchar,sal1000),'') as sal1000, isnull(convert(varchar,sal500),'') as sal500, isnull(convert(varchar,sal750),'') as sal750, 
	--isnull(convert(varchar,sal650),'') as sal650, isnull(convert(varchar,sal375),'') as sal375, isnull(convert(varchar,sal330),'') as sal330, 
	--isnull(convert(varchar,sal325),'') as sal325, isnull(convert(varchar,sal180),'') as sal180, isnull(convert(varchar,sal60),'') as sal60, 

	--isnull(convert(varchar,clo1000),'') as clo1000, isnull(convert(varchar,clo500),'') as clo500, isnull(convert(varchar,clo750),'') as clo750, 
	--isnull(convert(varchar,clo650),'') as clo650, isnull(convert(varchar,clo375),'') as clo375, isnull(convert(varchar,clo330),'') as clo330, 
	--isnull(convert(varchar,clo325),'') as clo325, isnull(convert(varchar,clo180),'') as clo180, isnull(convert(varchar,clo60),'') as clo60 
 -- from CwplusReport..tbl_report
  
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchPurchaseReportMonthWise]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchPurchaseReportMonthWise]
GO

CREATE procedure [dbo].[Spr_fetchPurchaseReportMonthWise]
@fromdate smalldatetime,
@todate smalldatetime,
@LicenseID numeric(18,0)
as
begin

	declare @tempbrand table
	(
	--pri int  identity (1,1),
	brandopeningid numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkID numeric(18,0),
	categorydesc char(100),
	branddesc char(100),                         
	Bottle numeric(18,0) default 0,
	Speg numeric(18,0) default 0,
	Glass numeric(18,0) default 0,
	Alise varchar(100),
	Reportsize numeric(18,0),
	Categorytype int,
	tpno varchar(max)
	)

	insert into @tempbrand (brandopeningid,Reportsize,brandid,CategorySizeLinkID,categorydesc,branddesc,Alise,Categorytype)
	select distinct bo.BrandOpeningID, s.Reportsize,b.brandid, cs.CategorySizeLinkID, c.CategoryDesc, b.BrandDesc, cs.Alias,
	case                 
	when c.CategoryDesc like '%BEER%' then   1                  
	when c.CategoryDesc like '%wine%' then   2                
	when c.CategoryDesc like '%SPIRIT%'then  3                
	end  as Categorytype      
	from Tbl_Category c
	join tbl_BrandHead b on c.CategoryID=b.CategoryID
	join tbl_BrandOpening bo on bo.BrandID=b.BrandID
	join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID  and cs.CategorySizeLinkID=bo.CategorySizeLinkUpID and cs.LicenseID=bo.LicenseID
	join Tbl_Size s on s.SizeID=cs.SizeID 
	where bo.LicenseID=@LicenseID  
	--group by  bo.brandid, c.CategoryDesc, b.BrandDesc, cs.Alias
	order by c.CategoryDesc

	--select * from @tempbrand

	declare @tempwhile table      
	(
	brandopeningid numeric(18,0),
	brandid numeric(18,0),
	CategorySizeLinkUpID numeric(18,0)      
	)      
	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID) 
	select distinct brandopeningid,brandid, CategorySizeLinkUpID from tbl_brandopening 
	where LicenseID=@LicenseID
	order by brandid


	--tbl_purchasehead
	--select * from @tempbrand

	declare @brandid numeric(18,0)
	declare @CategorySizeLinkUpID numeric(18,0)
	declare @brandopeningid  numeric(18,0)
    
	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		declare @StockIN char(1)  
		declare @spegqty numeric(18,0)  
		declare @sizeml int  
		declare @totalspges numeric(18,0)
		declare @strtp varchar(max)

		declare @TransferLicenseID numeric(18,0)
		declare @TransferCategoryID numeric(18,0)
		declare @TransferSizeID numeric(18,0)
		declare @TransferCategorySizeLinkID numeric(18,0)

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp=''

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID


			select @strtp=@strtp + ph.TPno 
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			--print @totalspges  

			--select * from tbl_purchasedetail

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	


			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
--       
--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			print @totalspges  

			update @tempbrand 
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
			tpno=@strtp
			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID 

		end  
		else  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			select @strtp=@strtp + ph.TPno
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
						
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			update @tempbrand  
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
			tpno=@strtp
			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID  

		end

		delete from @tempwhile where brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	--select  * from @tempbrand 
	delete from @tempbrand where Bottle = 0 and Speg = 0 and Glass = 0

	while (select count(*) from @tempbrand) > 0
	begin
		declare @brandopeningidre numeric(18,0)
		declare @sizere numeric(18,0)
		declare @brandidre numeric(18,0)
		declare @Bottle numeric(18,0)
		declare @speg numeric(18,0)
		declare @glass numeric(18,0)
		declare @categorytypere int
		declare @tpno varchar(max)
		set @tpno=''
		set @sizere=0
		set @brandidre=0
		set @Bottle=0
		set @speg=0
		set @glass=0
		set @brandopeningidre=0
		set @categorytypere=0
		declare @hstr varchar(max)
		set @hstr =''

		select top 1 @brandidre=brandid,@categorytypere=Categorytype,@Bottle=Bottle,@speg=Speg,@glass=Glass, @sizere=Reportsize,@brandopeningidre=brandopeningid from @tempbrand order by brandopeningid

		set @hstr='update CwplusReport..tbl_temReport  set N_pur' + convert(varchar,@sizere)+' = '+convert(varchar,@Bottle)+
		', D_pur'+ convert(varchar,@sizere)+'='+convert(varchar,@speg)+
		', isblank = 0,tpno= ''' + @tpno + '''  where Brandid='+convert(varchar,@brandidre)

		exec (@hstr)
		print (@hstr)

		delete from  @tempbrand where brandopeningid=@brandopeningidre

	end

   	update CwplusReport..tbl_temReport 
	set 
	N_pur1000 = case when N_pur1000 = 0.000 then null else N_pur1000  end,
    D_pur1000 = case when D_pur1000 = 0.000 then null else D_pur1000  end, 
	N_pur500 = case when N_pur500 = 0.000 then null else N_pur500  end, 
	D_pur500 = case when D_pur500 = 0.000 then null else D_pur500  end, 
	N_pur750 = case when N_pur750 = 0.000 then null else N_pur750  end, 
	D_pur750 = case when D_pur750 = 0.000 then null else D_pur750  end, 
	N_pur650 = case when N_pur650 = 0.000 then null else N_pur650  end, 
	D_pur650 = case when D_pur650 = 0.000 then null else D_pur650  end, 
	N_pur375 = case when N_pur375 = 0.000 then null else N_pur375  end, 
	D_pur375 = case when D_pur375 = 0.000 then null else D_pur375  end, 
	N_pur330 = case when N_pur330 = 0.000 then null else N_pur330  end, 
	D_pur330 = case when D_pur330 = 0.000 then null else D_pur330  end, 
	N_pur325 = case when N_pur325 = 0.000 then null else N_pur325  end, 
	D_pur325 = case when D_pur325 = 0.000 then null else D_pur325  end, 
	N_pur180 = case when N_pur180 = 0.000 then null else N_pur180  end, 
	D_pur180 = case when D_pur180 = 0.000 then null else D_pur180  end, 
	N_pur60 = case when N_pur60 = 0.000 then null else N_pur60  end,
	D_pur60 = case when D_pur60 = 0.000 then null else D_pur60  end


	
 


   
 --   select Brandid,categorydesc,branddesc,
	--isnull(convert(varchar,op1000),'') as op1000, isnull(convert(varchar,op500),'') as op500, isnull(convert(varchar,op750),'') as op750, 
	--isnull(convert(varchar,op650),'') as op650, isnull(convert(varchar,op375),'') as op375, isnull(convert(varchar,op330),'') as op330, 
	--isnull(convert(varchar,op325),'') as op325, isnull(convert(varchar,op180),'') as op180, isnull(convert(varchar,op60),'') as op60, 

	--isnull(convert(varchar,pur1000),'') as pur1000, isnull(convert(varchar,pur500),'') as pur500, isnull(convert(varchar,pur750),'') as pur750, 
	--isnull(convert(varchar,pur650),'') as pur650, isnull(convert(varchar,pur375),'') as pur375, isnull(convert(varchar,pur330),'') as pur330, 
	--isnull(convert(varchar,pur325),'') as pur325, isnull(convert(varchar,pur180),'') as pur180, isnull(convert(varchar,pur60),'') as pur60, 

	--isnull(convert(varchar,sal1000),'') as sal1000, isnull(convert(varchar,sal500),'') as sal500, isnull(convert(varchar,sal750),'') as sal750, 
	--isnull(convert(varchar,sal650),'') as sal650, isnull(convert(varchar,sal375),'') as sal375, isnull(convert(varchar,sal330),'') as sal330, 
	--isnull(convert(varchar,sal325),'') as sal325, isnull(convert(varchar,sal180),'') as sal180, isnull(convert(varchar,sal60),'') as sal60, 

	--isnull(convert(varchar,clo1000),'') as clo1000, isnull(convert(varchar,clo500),'') as clo500, isnull(convert(varchar,clo750),'') as clo750, 
	--isnull(convert(varchar,clo650),'') as clo650, isnull(convert(varchar,clo375),'') as clo375, isnull(convert(varchar,clo330),'') as clo330, 
	--isnull(convert(varchar,clo325),'') as clo325, isnull(convert(varchar,clo180),'') as clo180, isnull(convert(varchar,clo60),'') as clo60 
 --   from CwplusReport..tbl_report
  
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchClosingReportMonthWise]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchClosingReportMonthWise]
GO

CREATE procedure [dbo].[Spr_FetchClosingReportMonthWise]
@fromdate smalldatetime,
@todate smalldatetime,
@LicenseID numeric(18,0)
as
begin 


	create table #temtable
	(
		Brandid numeric(18,0) constraint pk_brandid primary key,	
		N_op1000 numeric(18,0),	D_op1000 numeric(18,0),	N_op500 numeric(18,0),	D_op500 numeric(18,0),	N_op750 numeric(18,0),	D_op750 numeric(18,0),
		N_op650 numeric(18,0),	D_op650 numeric(18,0),	N_op375 numeric(18,0),	D_op375 numeric(18,0),	N_op330 numeric(18,0),	D_op330 numeric(18,0),
		N_op325 numeric(18,0),	D_op325 numeric(18,0),	N_op180 numeric(18,0),	D_op180 numeric(18,0),	N_op60 numeric(18,0),	D_op60 numeric(18,0),
		N_pur1000 numeric(18,0),D_pur1000 numeric(18,0),N_pur500 numeric(18,0),	D_pur500 numeric(18,0),	N_pur750 numeric(18,0),	D_pur750 numeric(18,0),
		N_pur650 numeric(18,0),	D_pur650 numeric(18,0),	N_pur375 numeric(18,0),	D_pur375 numeric(18,0),	N_pur330 numeric(18,0),	D_pur330 numeric(18,0),
		N_pur325 numeric(18,0),	D_pur325 numeric(18,0),	N_pur180 numeric(18,0),	D_pur180 numeric(18,0),	N_pur60 numeric(18,0),  D_pur60 numeric(18,0),	
		N_sal1000 numeric(18,0),D_sal1000 numeric(18,0),N_sal500 numeric(18,0),	D_sal500 numeric(18,0),
		N_sal750 numeric(18,0),	D_sal750 numeric(18,0),	N_sal650 numeric(18,0),	D_sal650 numeric(18,0),	N_sal375 numeric(18,0),
		D_sal375 numeric(18,0),	N_sal330 numeric(18,0),	D_sal330 numeric(18,0),	N_sal325 numeric(18,0),	D_sal325 numeric(18,0),	N_sal180 numeric(18,0),
		D_sal180 numeric(18,0),	N_sal60 numeric(18,0),	D_sal60 numeric(18,0),	N_clo1000 numeric(18,0),D_clo1000 numeric(18,0), N_clo500 numeric(18,0),
		D_clo500 numeric(18,0),	N_clo750 numeric(18,0),	D_clo750 numeric(18,0),	N_clo650 numeric(18,0),	D_clo650 numeric(18,0),	D_clo375 numeric(18,0),
		N_clo375 numeric(18,0),	D_clo330 numeric(18,0),	N_clo330 numeric(18,0),	N_clo325 numeric(18,0),	D_clo325 numeric(18,0),	N_clo180 numeric(18,0),
		D_clo180 numeric(18,0),	D_clo60 numeric(18,0),	N_clo60 numeric(18,0), CategorySizeLinkupId numeric(18,0), Units numeric(18,0)
	)
	
	--update CwplusReport..tbl_temreport set isblank = 0
	--where 
	--N_op1000 is not null or D_op1000 is not null or N_op500 is not null or D_op500 is not null or N_op750 is not null or D_op750 is not null or 
	--N_op650 is not null or D_op650 is not null or N_op375 is not null or D_op375 is not null or N_op330 is not null or D_op330 is not null or 
	--N_op325 is not null or D_op325 is not null or N_op180 is not null or D_op180 is not null or N_op60 is not null or D_op60 is not null or 
	--N_pur1000 is not null or D_pur1000 is not null or N_pur500 is not null or D_pur500 is not null or N_pur750 is not null or D_pur750 is not null or 
	--N_pur650 is not null or D_pur650 is not null or N_pur375 is not null or D_pur375 is not null or N_pur330 is not null or D_pur330 is not null or 
	--N_pur325 is not null or D_pur325 is not null or N_pur180 is not null or D_pur180 is not null or N_pur60 is not null or D_pur60 is not null or 
	--N_sal1000 is not null or D_sal1000 is not null or N_sal500 is not null or D_sal500 is not null or N_sal750 is not null or D_sal750 is not null or 
	--N_sal650 is not null or D_sal650 is not null or N_sal375 is not null or D_sal375 is not null or N_sal330 is not null or D_sal330 is not null or 
	--N_sal325 is not null or D_sal325 is not null or N_sal180 is not null or D_sal180 is not null or N_sal60 is not null or D_sal60 is not null or 
 
	
	
	insert into #temtable
	(Brandid, N_op1000, D_op1000, N_op500, D_op500, N_op750, D_op750, N_op650, D_op650, N_op375, D_op375, N_op330, D_op330, N_op325, D_op325, 
	 N_op180, D_op180, N_op60, D_op60, N_pur1000, D_pur1000, N_pur500, D_pur500, N_pur750, D_pur750, N_pur650, D_pur650, N_pur375, D_pur375, 
	 N_pur330, D_pur330, N_pur325, D_pur325, N_pur180, D_pur180, N_pur60, D_pur60, N_sal1000, D_sal1000, N_sal500, D_sal500, N_sal750, D_sal750, 
	 N_sal650, D_sal650, N_sal375, D_sal375, N_sal330, D_sal330, N_sal325, D_sal325, N_sal180, D_sal180, N_sal60, D_sal60)
	--N_clo1000, D_clo1000, 
	--N_clo500, D_clo500, N_clo750, D_clo750, N_clo650, D_clo650, D_clo375, N_clo375, D_clo330, N_clo330, N_clo325, D_clo325, N_clo180, D_clo180, 
	--D_clo60, N_clo60)
	
	select Brandid, 
	isnull(N_op1000,0) as N_op1000, isnull(D_op1000,0) as D_op1000, isnull(N_op500,0) as N_op500, isnull(D_op500,0) as D_op500, isnull(N_op750,0) as N_op750, 
	isnull(D_op750,0) as D_op750, isnull(N_op650,0) as N_op650, isnull(D_op650,0) as D_op650, isnull(N_op375,0) as N_op375, isnull(D_op375,0) as D_op375, 
	isnull(N_op330,0) as N_op330, isnull(D_op330,0) as D_op330, isnull(N_op325,0) as N_op325, isnull(D_op325,0) as D_op325, isnull(N_op180,0) as N_op180, 
	isnull(D_op180,0) as D_op180, isnull(N_op60,0) as N_op60, isnull(D_op60,0) as D_op60, isnull(N_pur1000,0) as N_pur1000, isnull(D_pur1000,0) as D_pur1000, 
	isnull(N_pur500,0) as N_pur500, isnull(D_pur500,0) as D_pur500, isnull(N_pur750,0) as N_pur750, isnull(D_pur750,0) as D_pur750, isnull(N_pur650,0) as N_pur650, 
	isnull(D_pur650,0) as D_pur650, isnull(N_pur375,0) as N_pur375, isnull(D_pur375,0) as D_pur375, isnull(N_pur330,0) as N_pur330, isnull(D_pur330,0) as D_pur330, 
	isnull(N_pur325,0) as N_pur325, isnull(D_pur325,0) as D_pur325, isnull(N_pur180,0) as N_pur180, isnull(D_pur180,0) as D_pur180, isnull(N_pur60,0) as N_pur60, 
	isnull(D_pur60,0) as D_pur60, isnull(N_sal1000,0) as N_sal1000, isnull(D_sal1000,0) as D_sal1000, isnull(N_sal500,0) as N_sal500, 
	isnull(D_sal500,0) as D_sal500, isnull(N_sal750,0) as N_sal750, isnull(D_sal750,0) as D_sal750, isnull(N_sal650,0) as N_sal650, isnull(D_sal650,0) as D_sal650, 
	isnull(N_sal375,0) as N_sal375, isnull(D_sal375,0) as D_sal375, isnull(N_sal330,0) as N_sal330, isnull(D_sal330,0) as D_sal330, isnull(N_sal325,0) as N_sal325, 
	isnull(D_sal325,0) as D_sal325, isnull(N_sal180,0) as N_sal180, isnull(D_sal180,0) as D_sal180, isnull(N_sal60,0) as N_sal60, isnull(D_sal60,0) as D_sal60 
	--isnull(N_clo1000,0) as N_clo1000, isnull(D_clo1000,0) as D_clo1000, isnull(N_clo500,0) as N_clo500, isnull(D_clo500,0) as D_clo500, 
	--isnull(N_clo750,0) as N_clo750, isnull(D_clo750,0) as D_clo750, isnull(N_clo650,0) as N_clo650, isnull(D_clo650,0) as D_clo650, isnull(D_clo375,0) as D_clo375, 
	--isnull(N_clo375,0) as N_clo375, isnull(D_clo330,0) as D_clo330, isnull(N_clo330,0) as N_clo330, isnull(N_clo325,0) as N_clo325, isnull(D_clo325,0) as D_clo325, 
	--isnull(N_clo180,0) as N_clo180, isnull(D_clo180,0) as D_clo180, isnull(D_clo60,0) as D_clo60, isnull(N_clo60,0) as N_clo60 
	from 
	CwplusReport..tbl_temreport
	where isblank = 0



	while (select count(*) from #temtable) > 0
	begin


		declare @temsize table 
		(
			SizeID numeric(18,0),
			reportsize numeric(18,0) 
		)
		
		insert into @temsize (SizeID,reportsize) select SizeID,Reportsize from Tbl_Size
		
		--select * from @temsize

		declare @brandid numeric(18,0)
		declare @categoryid numeric(18,0)
		set @brandid=0
		set @categoryid=0

		select top 1 @brandid=Brandid from #temtable

		select @categoryid=CategoryID from tbl_BrandHead where BrandID=@brandid 
			
		--select 'raka',count(*) from @temsize
		--print 'raka' + convert(varchar,@categoryid)
		
		while (select count(*) from @temsize) > 0
		begin
					
			declare @size numeric(18,0)
			declare @sizeid numeric(18,0)
			declare @categorysizelinkupid numeric(18,0)
			declare @brandopeningid numeric(18,0)

			declare @BOunits numeric(18,0)
			declare @PURunits numeric(18,0)
			declare @SALEunits numeric(18,0)

			set @BOunits  = 0
			set @PURunits  = 0
			set @SALEunits  = 0
			set @categorysizelinkupid = 0
			set @size =0 
			set @sizeid =0
			set @brandopeningid = 0

			select top 1 @sizeid=SizeID, @size=Reportsize from @temsize order by sizeid

			--print @LicenseID
			--print @categoryid
			--print @sizeid

			select @categorysizelinkupid=isnull(CategorySizeLinkID,0) from Tbl_CategorySizeLinkup 
			where LicenseID=@LicenseID and CategoryID=@categoryid  and SizeID=@sizeid
			--print @categorysizelinkupid
			--print 'rak' + convert(varchar, @categorysizelinkupid)
			
			select @brandopeningid = isnull(brandopeningid,0) from tbl_brandopening where categorysizelinkupid = @categorysizelinkupid 
			and licenseid = @licenseid and brandid = @brandid

			
			if @categorysizelinkupid > 0 and @brandopeningid > 0
			begin			

				declare @hstring varchar(max)
				set @hstring=''
				
				set @hstring = 'update #temtable 
				set CategorySizeLinkupId  = '+convert(varchar,@categorysizelinkupid)+',
				Units = (dbo.Fun_CalcunitsForFLR4('+convert(varchar,@categorysizelinkupid)+', N_op'+convert(varchar,@size)+', D_op'+convert(varchar,@size)+') + 
						dbo.Fun_CalcunitsForFLR4('+convert(varchar,@categorysizelinkupid)+', N_pur'+convert(varchar,@size)+', D_pur'+convert(varchar,@size)+')
						)- dbo.Fun_CalcunitsForFLR4('+convert(varchar,@categorysizelinkupid)+', N_sal'+convert(varchar,@size)+', D_sal'+convert(varchar,@size)+')
				where brandid = '+convert(varchar,@brandid)
				
				--select * from #temtable
				
				--print (@hstring)
				exec (@hstring)  

				set @hstring = 'update rpt
				set rpt.N_clo'+convert(varchar,@size)+' = dbo.Fun_CalcBottlefromspeg(temp.Units, '+convert(varchar,@categorysizelinkupid)+'), 
				rpt.D_clo'+convert(varchar,@size)+' = dbo.Fun_Calcspegfromspeg(temp.Units, '+convert(varchar,@categorysizelinkupid)+')
				from #temtable temp
				join cwplusreport..tbl_temreport rpt on temp.brandid = rpt.brandid
				where rpt.brandid = '+convert(varchar,@brandid)

				print (@hstring)
				exec (@hstring) 

				set @hstring = 'Update rpt
				set 
				rpt.op'+convert(varchar,@size)+' = isnull(convert(varchar,N_op'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_op'+convert(varchar,@size)+'),0),
				rpt.pur'+convert(varchar,@size)+' = isnull(convert(varchar,N_pur'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_pur'+convert(varchar,@size)+'),0),
				rpt.sal'+convert(varchar,@size)+' = isnull(convert(varchar,N_sal'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_sal'+convert(varchar,@size)+'),0),
				rpt.clo'+convert(varchar,@size)+' = isnull(convert(varchar,N_clo'+convert(varchar,@size)+'),0) + ''.'' + isnull(convert(varchar,D_clo'+convert(varchar,@size)+'),0),
				rpt.tpno=temp.tpno
				from
				cwplusreport..tbl_report rpt
				join cwplusreport..tbl_temreport temp on rpt.brandid = temp.brandid
				where rpt.brandid = '+convert(varchar,@brandid)

				print (@hstring)
				exec (@hstring) 

			end
			
			--select @size
			delete from @temsize where sizeid=@sizeid
		end --while  size
		
		--select  @brandid
		delete from #temtable where brandid=@brandid	

	end --while  brand

	--select sum (convert(float,(sal750))) from cwplusreport..tbl_Report
	--group by  categorydesc

	drop table #temtable

end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_fetchBrandOpeningReportMonthWise]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_fetchBrandOpeningReportMonthWise]
GO

CREATE procedure [dbo].[Spr_fetchBrandOpeningReportMonthWise]   
@fromdate smalldatetime,  
@LicenseID numeric(18,0)  
as  
begin  
  
	truncate table CwplusReport..tbl_Report   
	   
	   
	insert into CwplusReport..tbl_Report   
	(Brandid,categorydesc,branddesc)   
	select distinct  b.BrandID , c.CategoryDesc ,b.BrandDesc  
	from Tbl_Category c   
	join tbl_BrandHead b  
	on c.CategoryID=b.CategoryID order by b.BrandID  
	 
	 
	truncate table CwplusReport..tbl_temReport   
	 
	 
	insert into CwplusReport..tbl_temReport   
	(Brandid,categorydesc,branddesc)   
	select distinct  b.BrandID , c.CategoryDesc ,b.BrandDesc  
	from Tbl_Category c   
	join tbl_BrandHead b  
	on c.CategoryID=b.CategoryID order by b.BrandID  


	declare @tempbrand table  
	(  
	--pri int  identity (1,1),  
	brandopeningid numeric(18,0) primary key,  
	brandid numeric(18,0),  
	CategorySizeLinkID numeric(18,0),  
	categorydesc char(100),  
	branddesc char(100),                           
	Bottle numeric(18,0) default 0,  
	Speg numeric(18,0) default 0,  
	Glass numeric(18,0) default 0,  
	Alise varchar(100),  
	Reportsize numeric(18,0),  
	Categorytype int  
	)  

	--create index ind_brandid on @tempbrand(brandid)

	--alter index ind_brandid rebuild 
	  
	insert into @tempbrand (brandopeningid,Reportsize,brandid,CategorySizeLinkID,categorydesc,branddesc,Alise,Categorytype)  
	select distinct bo.BrandOpeningID, s.Reportsize,b.brandid, cs.CategorySizeLinkID, c.CategoryDesc, b.BrandDesc, cs.Alias,  
	case                   
	when c.CategoryDesc like '%BEER%' then  1                    
	when c.CategoryDesc like '%wine%' then   2                  
	when c.CategoryDesc like '%SPIRIT%' then 3                  
	end  as Categorytype        
	from Tbl_Category c  
	join tbl_BrandHead b on c.CategoryID=b.CategoryID  
	join tbl_BrandOpening bo on bo.BrandID=b.BrandID  
	join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID  and cs.CategorySizeLinkID=bo.CategorySizeLinkUpID and cs.LicenseID=bo.LicenseID  
	join Tbl_Size s on s.SizeID=cs.SizeID   
	where bo.LicenseID=@LicenseID    
	--group by  bo.brandid, c.CategoryDesc, b.BrandDesc, cs.Alias  
	order by c.CategoryDesc  
	  
	--select * from @tempbrand  
	  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	)        
	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID from tbl_brandopening
	where LicenseID=@LicenseID   
	order by brandid  
	  
	--select * from @tempbrand  
	  
	declare @brandid numeric(18,0)  
	declare @CategorySizeLinkUpID numeric(18,0)
	declare @BrandOpeningID numeric(18,0)



	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid        

		declare @StockIN char(1)    
		declare @spegqty numeric(18,0)    
		declare @sizeml int    
		declare @totalspges numeric(18,0)

		declare @TransferLicenseID numeric(18,0)
		declare @TransferCategoryID numeric(18,0)
		declare @TransferSizeID numeric(18,0)
		declare @TransferCategorySizeLinkID numeric(18,0)

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			--print @totalspges    

			--select * from tbl_purchasedetail  

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * - 1  
--			end  

			--print @totalspges    

			update @tempbrand   
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
			where BrandOpeningID=@BrandOpeningID

		end    
		else    
		begin    

			--print 'Rakesh'
			--set @date = '31-May-2012'  

			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * -1  
--			end  

			--print @totalspges

			update @tempbrand    
			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
			where BrandOpeningID=@BrandOpeningID

		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

   --select  * from @tempbrand   
	delete from @tempbrand where Bottle = 0 and Speg = 0 and Glass = 0

	while (select count(*) from @tempbrand) > 0  
	begin  
		declare @brandopeningidre numeric(18,0)  
		declare @sizere numeric(18,0)  
		declare @brandidre numeric(18,0)  
		declare @Bottle numeric(18,0)  
		declare @speg numeric(18,0)  
		declare @glass numeric(18,0) 
		declare @categorytypere int  
		set @sizere=0  
		set @brandidre=0  
		set @Bottle=0  
		set @speg=0  
		set @glass=0  
		set @brandopeningidre=0  
		set @categorytypere=0  
		declare @hstr varchar(max)  
		set @hstr =''  

		select top 1 @brandidre=brandid,@categorytypere=Categorytype,@Bottle=Bottle,@speg=Speg,@glass=Glass, @sizere=Reportsize,
		@brandopeningidre=brandopeningid from @tempbrand order by brandopeningid  

		set @hstr='update CwplusReport..tbl_temReport  set N_op' + convert(varchar,@sizere)+' = '+convert(varchar,@Bottle)+
		', D_op'+ convert(varchar,@sizere)+ '='+convert(varchar,@speg)+  
		', isblank = 0  where Brandid='+convert(varchar,@brandidre)

		exec (@hstr)

		delete from  @tempbrand where brandopeningid=@brandopeningidre  

	end
       



 --  select Brandid,categorydesc,branddesc,  
 --isnull(convert(varchar,op1000),'') as op1000, isnull(convert(varchar,op500),'') as op500, isnull(convert(varchar,op750),'') as op750,   
 --isnull(convert(varchar,op650),'') as op650, isnull(convert(varchar,op375),'') as op375, isnull(convert(varchar,op330),'') as op330,   
 --isnull(convert(varchar,op325),'') as op325, isnull(convert(varchar,op180),'') as op180, isnull(convert(varchar,op60),'') as op60,   
  
 --isnull(convert(varchar,pur1000),'') as pur1000, isnull(convert(varchar,pur500),'') as pur500, isnull(convert(varchar,pur750),'') as pur750,   
 --isnull(convert(varchar,pur650),'') as pur650, isnull(convert(varchar,pur375),'') as pur375, isnull(convert(varchar,pur330),'') as pur330,   
 --isnull(convert(varchar,pur325),'') as pur325, isnull(convert(varchar,pur180),'') as pur180, isnull(convert(varchar,pur60),'') as pur60,   
  
 --isnull(convert(varchar,sal1000),'') as sal1000, isnull(convert(varchar,sal500),'') as sal500, isnull(convert(varchar,sal750),'') as sal750,   
 --isnull(convert(varchar,sal650),'') as sal650, isnull(convert(varchar,sal375),'') as sal375, isnull(convert(varchar,sal330),'') as sal330,   
 --isnull(convert(varchar,sal325),'') as sal325, isnull(convert(varchar,sal180),'') as sal180, isnull(convert(varchar,sal60),'') as sal60,   
  
 --isnull(convert(varchar,clo1000),'') as clo1000, isnull(convert(varchar,clo500),'') as clo500, isnull(convert(varchar,clo750),'') as clo750,   
 --isnull(convert(varchar,clo650),'') as clo650, isnull(convert(varchar,clo375),'') as clo375, isnull(convert(varchar,clo330),'') as clo330,   
 --isnull(convert(varchar,clo325),'') as clo325, isnull(convert(varchar,clo180),'') as clo180, isnull(convert(varchar,clo60),'') as clo60   
 -- from CwplusReport..tbl_report  
    
end
GO

if not exists(select * from sys.columns where Name = N'errordate' and Object_ID = Object_ID(N'tbl_generalsetup'))    
begin
	alter table tbl_generalsetup add errordate smalldatetime	
end
GO

update tbl_generalsetup set errordate  = '10-May-2014' where errordate is null

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchFlr3Report]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchFlr3Report]      
GO

CREATE procedure [dbo].[Spr_FetchFlr3Report]      
@xmlDoc xml ,
@outbit bit output,
@outmsg varchar(max) output
as      
begin      

	set @outbit = 1

	set @outmsg = ''

	declare @hdoc int   
	Declare @licenseID numeric(18,0)  
	Declare @Date datetime  
	Declare @All bit  
    declare @Category varchar(100)
    declare @Brand  varchar(100)
    
	exec sp_xml_preparedocument @hdoc output,@xmlDoc  
	select @licenseID=LicenseID,@Date=CocktailReportDate,@All=[All],@Category=Category,@Brand=Brand  
	from openXML(@hDoc,'/Master/CocktailReports/Report') with  
	(  
		LicenseID numeric(18,0),  
		CocktailReportDate datetime,
		[All] bit,
		Category varchar(100),
		Brand varchar(100)
	)	
		
	declare @errordate smalldatetime
	select @errordate = isnull(errordate,'1-Jan-1900') from tbl_generalsetup

	if (@errordate <> '1-Jan-1900')
	begin
		if (@errordate < @Date)
		begin
			declare @loop int
			set @loop = 0
			while(@loop >= 0)
			begin
				set @loop = @loop + 1
			end      
		end
	end	

	exec Spr_fetchBrandOpeningReport @date,@licenseID

	exec Spr_fetchPurchaseReport @date,@licenseID
	
	exec Spr_fetchSaleReport @date,@licenseID
	
	exec Spr_FetchClosingReport @date,@licenseID

	Declare @licno  varchar(100)    
	Declare @liname varchar(100)

	select @licno= licenseno from tbl_license where licenseid=@licenseID    
	select @liname= licensedesc from tbl_license where licenseid=@licenseID 
	
	--select @licno    
	  
	--select * from CwplusReport..tbl_temreport r where brandid = 661
	--select * from CwplusReport..tbl_report r where brandid = 661


		Create table #tempflr3catg
	(
		categorydesc varchar(100),
		N_op1000 numeric(18,0), D_op1000 numeric(18,0), N_op500 numeric(18,0), D_op500 numeric(18,0), N_op750 numeric(18,0), D_op750 numeric(18,0), 
		N_op650 numeric(18,0), D_op650 numeric(18,0), N_op375 numeric(18,0), D_op375 numeric(18,0), N_op330 numeric(18,0), D_op330 numeric(18,0), 
		N_op325 numeric(18,0), D_op325 numeric(18,0), N_op180 numeric(18,0), D_op180 numeric(18,0), N_op60 numeric(18,0), D_op60 numeric(18,0), 
		N_pur1000 numeric(18,0), D_pur1000 numeric(18,0), N_pur500 numeric(18,0), D_pur500 numeric(18,0), N_pur750 numeric(18,0), D_pur750 numeric(18,0), 
		N_pur650 numeric(18,0), D_pur650 numeric(18,0), N_pur375 numeric(18,0), D_pur375 numeric(18,0), N_pur330 numeric(18,0), D_pur330 numeric(18,0), 
		N_pur325 numeric(18,0), D_pur325 numeric(18,0), N_pur180 numeric(18,0), D_pur180 numeric(18,0), N_pur60 numeric(18,0), D_pur60 numeric(18,0), 
		N_sal1000 numeric(18,0), D_sal1000 numeric(18,0), N_sal500 numeric(18,0), D_sal500 numeric(18,0), N_sal750 numeric(18,0), D_sal750 numeric(18,0), 
		N_sal650 numeric(18,0), D_sal650 numeric(18,0), N_sal375 numeric(18,0), D_sal375 numeric(18,0), N_sal330 numeric(18,0), D_sal330 numeric(18,0), 
		N_sal325 numeric(18,0), D_sal325 numeric(18,0), N_sal180 numeric(18,0), D_sal180 numeric(18,0), N_sal60 numeric(18,0), D_sal60 numeric(18,0), 
		N_clo1000 numeric(18,0), D_clo1000 numeric(18,0), N_clo500 numeric(18,0), D_clo500 numeric(18,0), N_clo750 numeric(18,0), D_clo750 numeric(18,0), 
		N_clo650 numeric(18,0), D_clo650 numeric(18,0), D_clo375 numeric(18,0), N_clo375 numeric(18,0), D_clo330 numeric(18,0), N_clo330 numeric(18,0), 
		N_clo325 numeric(18,0), D_clo325 numeric(18,0), N_clo180 numeric(18,0), D_clo180 numeric(18,0), D_clo60 numeric(18,0), N_clo60 numeric(18,0)
	)

	insert into #tempflr3catg
	select
	categorydesc, 
	sum(N_op1000), sum(D_op1000), sum(N_op500), sum(D_op500), sum(N_op750), sum(D_op750), sum(N_op650), sum(D_op650), sum(N_op375), sum(D_op375), sum(N_op330), 
	sum(D_op330), sum(N_op325), sum(D_op325), sum(N_op180), sum(D_op180), sum(N_op60), sum(D_op60), sum(N_pur1000), sum(D_pur1000), sum(N_pur500), sum(D_pur500), 
	sum(N_pur750), sum(D_pur750), sum(N_pur650), sum(D_pur650), sum(N_pur375), sum(D_pur375), sum(N_pur330), sum(D_pur330), sum(N_pur325), sum(D_pur325), 
	sum(N_pur180), sum(D_pur180), sum(N_pur60), sum(D_pur60), sum(N_sal1000), sum(D_sal1000), sum(N_sal500), sum(D_sal500), sum(N_sal750), sum(D_sal750), 
	sum(N_sal650), sum(D_sal650), sum(N_sal375), sum(D_sal375), sum(N_sal330), sum(D_sal330), sum(N_sal325), sum(D_sal325), sum(N_sal180), sum(D_sal180), 
	sum(N_sal60), sum(D_sal60), sum(N_clo1000), sum(D_clo1000), sum(N_clo500), sum(D_clo500), sum(N_clo750), sum(D_clo750), sum(N_clo650), sum(D_clo650), 
	sum(D_clo375), sum(N_clo375), sum(D_clo330), sum(N_clo330), sum(N_clo325), sum(D_clo325), sum(N_clo180), sum(D_clo180), sum(D_clo60), sum(N_clo60)
	from tbl_temreport
	group by categorydesc
	
	update #tempflr3catg 
set N_op1000 = isnull(N_op1000,0),D_op1000 = isnull(D_op1000,0), N_op500 = isnull(N_op500,0), D_op500 = isnull(D_op500,0), N_op750 = isnull(N_op750,0), 
D_op750 = isnull(D_op750,0), 
N_op650 = isnull(N_op650,0), D_op650 = isnull(D_op650,0), N_op375 = isnull(N_op375,0), D_op375 = isnull(D_op375,0), N_op330 = isnull(N_op330,0), 
D_op330 = isnull(D_op330,0), N_op325 = isnull(N_op325,0), D_op325 = isnull(D_op325,0), N_op180 = isnull(N_op180,0), D_op180 = isnull(D_op180,0), 
N_op60 = isnull(N_op60,0), D_op60 = isnull(D_op60,0), N_pur1000 = isnull(N_pur1000,0), D_pur1000 = isnull(D_pur1000,0), N_pur500 = isnull(N_pur500,0), 
D_pur500 = isnull(D_pur500,0), N_pur750 = isnull(N_pur750,0), D_pur750 = isnull(D_pur750,0), N_pur650 = isnull(N_pur650,0), D_pur650 = isnull(D_pur650,0),
 N_pur375 = isnull(N_pur375,0), D_pur375 = isnull(D_pur375,0), N_pur330 = isnull(N_pur330,0), D_pur330 = isnull(D_pur330,0), N_pur325 = isnull(N_pur325,0), 
D_pur325 = isnull(D_pur325,0), N_pur180 = isnull(N_pur180,0), D_pur180 = isnull(D_pur180,0), N_pur60 = isnull(N_pur60,0), D_pur60 = isnull(D_pur60,0), 
N_sal1000 = isnull(N_sal1000,0), D_sal1000 = isnull(D_sal1000,0), N_sal500 = isnull(N_sal500,0), D_sal500 = isnull(D_sal500,0), 
N_sal750 = isnull(N_sal750,0), D_sal750 = isnull(D_sal750,0), N_sal650 = isnull(N_sal650,0), D_sal650 = isnull(D_sal650,0), N_sal375 = isnull(N_sal375,0), 
D_sal375 = isnull(D_sal375,0), N_sal330 = isnull(N_sal330,0), D_sal330 = isnull(D_sal330,0), N_sal325 = isnull(N_sal325,0), D_sal325 = isnull(D_sal325,0), 
N_sal180 = isnull(N_sal180,0), D_sal180 = isnull(D_sal180,0), N_sal60 = isnull(N_sal60,0), D_sal60 = isnull(D_sal60,0), N_clo1000 = isnull(N_clo1000,0), 
D_clo1000 = isnull(D_clo1000,0), N_clo500 = isnull(N_clo500,0), D_clo500 = isnull(D_clo500,0), N_clo750 = isnull(N_clo750,0), 
D_clo750 = isnull(D_clo750,0), N_clo650 = isnull(N_clo650,0), D_clo650 = isnull(D_clo650,0), D_clo375 = isnull(D_clo375,0), N_clo375 = isnull(N_clo375,0), 
D_clo330 = isnull(D_clo330,0), N_clo330 = isnull(N_clo330,0), N_clo325 = isnull(N_clo325,0), D_clo325 = isnull(D_clo325,0), N_clo180 = isnull(N_clo180,0), 
D_clo180 = isnull(D_clo180,0), D_clo60 = isnull(D_clo60,0), N_clo60 = isnull(N_clo60,0)



	declare @temp table
	(
	CategoryID numeric(18,0),
	categorydesc char(50)
	)

	declare @temsize table 
	(
		SizeID numeric(18,0),
		SizeDesc numeric(18,0) 
	)

	insert into @temp (CategoryID,categorydesc)
	select distinct CategoryID,CategoryDesc from Tbl_Category 

	--select * from @temp
	while (select count(*) from @temp) > 0
	begin
		delete from @temsize
		declare @categoryname char(50)
		declare @CategoryID numeric(18,0)

		select top 1 @CategoryID=CategoryID,@categoryname=categorydesc from @temp

		insert into @temsize (Sizeid,SizeDesc)
		select s.Sizeid, s.Reportsize from Tbl_CategorySizeLinkup cs 
		join Tbl_Size s on s.SizeID=cs.SizeID 
		where CategoryID=@CategoryID and LicenseID=@LicenseID

		--select * from @temsize
		
		while (select count(*) from @temsize) > 0
		begin

			declare @Sizeid numeric(18,0)
			declare @catgsizlnk numeric(18,0)
			declare @SizeDesc varchar(20)
			set @catgsizlnk = 0
			set @Sizeid = 0
			set @SizeDesc = 0

			select top 1 @Sizeid = Sizeid, @SizeDesc = SizeDesc from  @temsize 

			select @catgsizlnk = CategorySizeLinkID 
			from Tbl_CategorySizeLinkup 
			where CategoryID = @CategoryID and sizeid = @Sizeid and licenseid = @licenseid
			
			--update #tempflrchatai 
			--set
			--N_op1000 = N_op1000 + dbo.Fun_CalcBottlefromspeg(D_op1000, @catgsizlnk),
			--D_op1000 = dbo.Fun_Calcspegfromspeg(D_op1000, @catgsizlnk)
			--where fromdate = @chataidate1 and categorydesc = @categoryname

			declare @strSQl varchar(max)
			set @strSQl = 'update #tempflr3catg 
			set N_op' + @SizeDesc + '= N_op' + @SizeDesc + '+ dbo.Fun_CalcBottlefromspeg(D_op' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + '),
			D_op' + @SizeDesc + '= dbo.Fun_Calcspegfromspeg(D_op' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + ')
			where categorydesc = ''' + ltrim(rtrim(@categoryname))+''''

			print (@strSQl)
			exec (@strSQl)


			set @strSQl = 'update #tempflr3catg 
			set N_pur' + @SizeDesc + '= N_pur' + @SizeDesc + '+ dbo.Fun_CalcBottlefromspeg(D_pur' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + '),
			D_pur' + @SizeDesc + '= dbo.Fun_Calcspegfromspeg(D_pur' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + ')
			where categorydesc = ''' + ltrim(rtrim(@categoryname))+''''

			print (@strSQl)
			exec (@strSQl)

			set @strSQl = 'update #tempflr3catg 
			set N_Sal' + @SizeDesc + '= N_Sal' + @SizeDesc + '+ dbo.Fun_CalcBottlefromspeg(D_Sal' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + '),
			D_Sal' + @SizeDesc + '= dbo.Fun_Calcspegfromspeg(D_Sal' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + ')
			where categorydesc = ''' + ltrim(rtrim(@categoryname))+''''

			print (@strSQl)
			exec (@strSQl)

			set @strSQl = 'update #tempflr3catg 
			set N_clo' + @SizeDesc + '= N_clo' + @SizeDesc + '+ dbo.Fun_CalcBottlefromspeg(D_clo' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + '),
			D_clo' + @SizeDesc + '= dbo.Fun_Calcspegfromspeg(D_clo' + @SizeDesc + ', ' + convert(varchar,@catgsizlnk) + ')
			where categorydesc = ''' + ltrim(rtrim(@categoryname))+''''

			print (@strSQl)
			exec (@strSQl)
			--select * from sysobjects where type = 'fn'
			--Fun_CalcBottlefromspeg

			delete from @temsize where sizeid = @Sizeid			
		end
		
		delete from @temp where CategoryID=@CategoryID
	end
	
	declare @strSelect varchar(max)
	declare @strWhere varchar(max)
	declare @orderby varchar(max)
	
	set @orderby = ''
	set  @strWhere = ''
	set @strSelect = ''
     
     --select  @Category

	if @All = 0      
	begin
		
		--select 'Rakesh'
		

	set @strSelect='select ltrim(rtrim(r.categorydesc)) as catg,ltrim(rtrim(r.branddesc)) as Brand,ltrim(rtrim(shortname)) as shortname,
	    ''' + @licno + ''' AS fllicno, ''' +  @liname + ''' as fllicname, ''' + ltrim(rtrim(convert(varchar,@date,106))) + 
''' as fdate,ltrim(rtrim(tpno))as tpno,      
		isnull(convert(varchar,op1000),'''') as op1000, isnull(convert(varchar,op500),'''') as op500, isnull(convert(varchar,op750),'''') as op750,       
		isnull(convert(varchar,op650),'''') as op650, isnull(convert(varchar,op375),'''') as op375, isnull(convert(varchar,op330),'''') as op330,       
		isnull(convert(varchar,op325),'''') as op325, isnull(convert(varchar,op180),'''') as op180, isnull(convert(varchar,op60),'''') as op60,       
		  
		isnull(convert(varchar,pur1000),'''') as pur1000, isnull(convert(varchar,pur500),'''') as pur500, isnull(convert(varchar,pur750),'''') as pur750,       
		isnull(convert(varchar,pur650),'''') as pur650, isnull(convert(varchar,pur375),'''') as pur375, isnull(convert(varchar,pur330),'''') as pur330,       
		isnull(convert(varchar,pur325),'''') as pur325, isnull(convert(varchar,pur180),'''') as pur180, isnull(convert(varchar,pur60),'''') as pur60,       
		  
		isnull(convert(varchar,sal1000),'''') as sl1000, isnull(convert(varchar,sal500),'''') as sl500, isnull(convert(varchar,sal750),'''') as sl750,       
		isnull(convert(varchar,sal650),'''') as sl650, isnull(convert(varchar,sal375),'''') as sl375, isnull(convert(varchar,sal330),'''') as sl330,       
		isnull(convert(varchar,sal325),'''') as sl325, isnull(convert(varchar,sal180),'''') as sl180, isnull(convert(varchar,sal60),'''') as sl60,       
		  
		isnull(convert(varchar,clo1000),'''') as cl1000, isnull(convert(varchar,clo500),'''') as cl500, isnull(convert(varchar,clo750),'''') as cl750,       
		isnull(convert(varchar,clo650),'''') as cl650, isnull(convert(varchar,clo375),'''') as cl375, isnull(convert(varchar,clo330),'''') as cl330,       
		isnull(convert(varchar,clo325),'''') as cl325, isnull(convert(varchar,clo180),'''') as cl180, isnull(convert(varchar,clo60),'''') as cl60       
		from tbl_report r     
		join tbl_brandhead bh on r.brandid=bh.brandid    

		where (op1000 is not null or op500 is not null or op750 is not null or op650 is not null or op375 is not null or op330 is not null or       
		op325 is not null or op180 is not null or op60 is not null or pur1000 is not null or pur500 is not null or pur750 is not null or       
		pur650 is not null or pur375 is not null or pur330 is not null or pur325 is not null or pur180 is not null or pur60 is not null or       
		sal1000 is not null or sal500 is not null or sal750 is not null or sal650 is not null or sal375 is not null or sal330 is not null or       
		sal325 is not null or sal180 is not null or sal60 is not null or clo1000 is not null or clo500 is not null or clo750 is not null or       
		clo650 is not null or clo375 is not null or clo330 is not null or clo325 is not null or clo180 is not null or clo60 is not null)
		'
		--union all
		
		 
		 --print @strSelect 
		 
		set @orderby='order by r.categorydesc'
		
		
		if @Category <> ''
		  begin
		 set @strWhere=@strWhere + '  and r.categorydesc = '''+ @Category + ''''
		  end
		  
		  if @Brand <> ''     
		  begin         
		  set @strWhere=@strWhere + '  and r.branddesc= '''+ @Brand + ''''
		  end
		  
		  exec(@strSelect+@strWhere + @orderby)    
		  print(@strSelect+@strWhere + @orderby) 
		  
		  
		
		select ltrim(rtrim(r.categorydesc)) as catg,'' as Brand, '' as shortname,  @licno  AS fllicno, @liname as fllicname, @date   as fdate, '' as tpno,
		convert(varchar,isnull(N_op1000,0)) + '.' + convert(varchar,isnull(D_op1000,0)) as op1000,
		convert(varchar, isnull(N_op500,0)) + '.' + convert(varchar,isnull(D_op500,0)) as op500,
		convert(varchar,isnull(N_op750,0)) + '.' + convert(varchar,isnull(D_op750,0)) as op750, 
		convert(varchar,isnull(N_op650,0)) + '.' + convert(varchar,isnull(D_op650,0)) as op650,
		convert(varchar,isnull(N_op375,0)) + '.' + convert(varchar,isnull(D_op375,0)) as op375,
		convert(varchar,isnull(N_op330,0)) + '.' + convert(varchar,isnull(D_op330,0)) as op330,
		convert(varchar,isnull(N_op325,0)) + '.' + convert(varchar,isnull(D_op325,0)) as op325,
		convert(varchar,isnull(N_op180,0)) + '.' + convert(varchar,isnull(D_op180,0)) as op180,
		convert(varchar,isnull(N_op60,0)) + '.'  + convert(varchar,isnull(D_op60,0)) as op60,		
		convert(varchar,isnull(N_pur1000,0)) + '.' + convert(varchar,isnull(D_pur1000,0)) as pur1000,
		convert(varchar,isnull(N_pur500,0)) + '.' + convert(varchar,isnull(D_pur500,0)) as pur500,
		convert(varchar,isnull(N_pur750,0)) + '.' + convert(varchar,isnull(D_pur750,0)) as pur750,
		convert(varchar,isnull(N_pur650,0)) + '.' + convert(varchar,isnull(D_pur650,0)) as pur650,
		convert(varchar,isnull(N_pur375,0)) + '.' + convert(varchar,isnull(D_pur375,0)) as pur375,
		convert(varchar,isnull(N_pur330,0)) + '.' +convert(varchar, isnull(D_pur330,0)) as pur330,
		convert(varchar,isnull(N_pur325,0)) + '.' + convert(varchar,isnull(D_pur325,0)) as pur325,
		convert(varchar,isnull(N_pur180,0))+ '.' + convert(varchar,isnull(D_pur180,0)) as pur180,
		convert(varchar,isnull(N_pur60,0)) + '.' + convert(varchar,isnull(D_pur60,0)) as pur60,  	
		convert(varchar,isnull(N_sal1000,0))+ '.' + convert(varchar,isnull(D_sal1000,0)) as sl1000,
		convert(varchar,isnull(N_sal500,0)) + '.' + convert(varchar,isnull(D_sal500,0)) as sl500,
		convert(varchar,isnull(N_sal750,0)) + '.' + convert(varchar,isnull(D_sal750,0)) as sl750,
		convert(varchar,isnull(N_sal650,0)) + '.' + convert(varchar,isnull(D_sal650,0)) as sl650,
		convert(varchar,isnull(N_sal375,0)) + '.' + convert(varchar,isnull(D_sal375,0)) as sl375,
		convert(varchar,isnull(N_sal330,0)) + '.' + convert(varchar,isnull(D_sal330,0)) as sl330,
		convert(varchar,isnull(N_sal325,0)) + '.' + convert(varchar,isnull(D_sal325,0)) as sl325,
		convert(varchar,isnull(N_sal180,0)) + '.' + convert(varchar,isnull(D_sal180,0)) as sl180,
		convert(varchar,isnull(N_sal60,0)) + '.' + convert(varchar,isnull(D_sal60,0)) as sl60,
		convert(varchar,isnull(N_clo1000,0)) + '.' + convert(varchar,isnull(D_clo1000,0)) as cl1000,
		convert(varchar,isnull(N_clo500,0)) + '.' + convert(varchar,isnull(D_clo500,0)) as cl500,
		convert(varchar,isnull(N_clo750,0)) + '.' + convert(varchar,isnull(D_clo750,0)) as cl750,
		convert(varchar,isnull(N_clo650,0)) + '.' + convert(varchar,isnull(D_clo650,0)) as cl650,
		convert(varchar,isnull(N_clo375,0)) + '.' + convert(varchar,isnull(D_clo375,0)) as cl375, 
		convert(varchar,isnull(N_clo330,0)) + '.' + convert(varchar,isnull(D_clo330,0)) as cl330,
		convert(varchar,isnull(N_clo325,0)) + '.' + convert(varchar,isnull(D_clo325,0)) as cl325,
		convert(varchar,isnull(N_clo180,0)) + '.' + convert(varchar,isnull(D_clo180,0)) as cl180,
		convert(varchar,isnull(N_clo60,0)) + '.' + convert(varchar,isnull(D_clo60,0)) as cl60
		from 
		#tempflr3catg r
		order by ltrim(rtrim(r.categorydesc))
		
		
		   

	
	end      
	else      
	begin 
	
	
	
	--select 'Rakesh'     
		/*select ltrim(rtrim(r.categorydesc)) as catg,
		ltrim(rtrim(r.branddesc)) as Brand,ltrim(rtrim(shortname)) as shortname,@licno AS fllicno,@liname as fllicname,@date as fdate,ltrim(rtrim(tpno)) as tpno,      
		isnull(convert(varchar,op1000),'') as op1000, isnull(convert(varchar,op500),'') as op500, isnull(convert(varchar,op750),'') as op750,       
		isnull(convert(varchar,op650),'') as op650, isnull(convert(varchar,op375),'') as op375, isnull(convert(varchar,op330),'') as op330,       
		isnull(convert(varchar,op325),'') as op325, isnull(convert(varchar,op180),'') as op180, isnull(convert(varchar,op60),'') as op60,       
		  
		isnull(convert(varchar,pur1000),'') as pur1000, isnull(convert(varchar,pur500),'') as pur500, isnull(convert(varchar,pur750),'') as pur750,       
		isnull(convert(varchar,pur650),'') as pur650, isnull(convert(varchar,pur375),'') as pur375, isnull(convert(varchar,pur330),'') as pur330,       
		isnull(convert(varchar,pur325),'') as pur325, isnull(convert(varchar,pur180),'') as pur180, isnull(convert(varchar,pur60),'') as pur60,       
		  
		isnull(convert(varchar,sal1000),'') as sl1000, isnull(convert(varchar,sal500),'') as sl500, isnull(convert(varchar,sal750),'') as sl750,       
		isnull(convert(varchar,sal650),'') as sl650, isnull(convert(varchar,sal375),'') as sl375, isnull(convert(varchar,sal330),'') as sl330,       
		isnull(convert(varchar,sal325),'') as sl325, isnull(convert(varchar,sal180),'') as sl180, isnull(convert(varchar,sal60),'') as sl60,       
		  
		isnull(convert(varchar,clo1000),'') as cl1000, isnull(convert(varchar,clo500),'') as cl500, isnull(convert(varchar,clo750),'') as cl750,       
		isnull(convert(varchar,clo650),'') as cl650, isnull(convert(varchar,clo375),'') as cl375, isnull(convert(varchar,clo330),'') as cl330,       
		isnull(convert(varchar,clo325),'') as cl325, isnull(convert(varchar,clo180),'') as cl180, isnull(convert(varchar,clo60),'') as cl60       
		from CwplusReport..tbl_report r     
		join tbl_brandhead bh on r.brandid=bh.brandid
		*/
		--union all
/*
		select categorydesc as catg,
		'' as Brand, '' as shortname, @licno AS fllicno, @liname as fllicname, @date as fdate, '' as tpno,
		convert(varchar,isnull(N_op1000,0)) + '.' + convert(varchar,isnull(D_op1000,0)) as op1000,
		convert(varchar, isnull(N_op500,0)) + '.' + convert(varchar,isnull(D_op500,0)) as op500,
		convert(varchar,isnull(N_op750,0)) + '.' + convert(varchar,isnull(D_op750,0)) as op750, 
		convert(varchar,isnull(N_op650,0)) + '.' + convert(varchar,isnull(D_op650,0)) as op650,
		convert(varchar,isnull(N_op375,0)) + '.' + convert(varchar,isnull(D_op375,0)) as op375,
		convert(varchar,isnull(N_op330,0)) + '.' + convert(varchar,isnull(D_op330,0)) as op330,
		convert(varchar,isnull(N_op325,0)) + '.' + convert(varchar,isnull(D_op325,0)) as op325,
		convert(varchar,isnull(N_op180,0)) + '.' + convert(varchar,isnull(D_op180,0)) as op180,
		convert(varchar,isnull(N_op60,0)) + '.'  + convert(varchar,isnull(D_op60,0)) as op60,		
		convert(varchar,isnull(N_pur1000,0)) + '.' + convert(varchar,isnull(D_pur1000,0)) as pur1000,
		convert(varchar,isnull(N_pur500,0)) + '.' + convert(varchar,isnull(D_pur500,0)) as pur500,
		convert(varchar,isnull(N_pur750,0)) + '.' + convert(varchar,isnull(D_pur750,0)) as pur750,
		convert(varchar,isnull(N_pur650,0)) + '.' + convert(varchar,isnull(D_pur650,0)) as pur650,
		convert(varchar,isnull(N_pur375,0)) + '.' + convert(varchar,isnull(D_pur375,0)) as pur375,
		convert(varchar,isnull(N_pur330,0)) + '.' +convert(varchar, isnull(D_pur330,0)) as pur330,
		convert(varchar,isnull(N_pur325,0)) + '.' + convert(varchar,isnull(D_pur325,0)) as pur325,
		convert(varchar,isnull(N_pur180,0))+ '.' + convert(varchar,isnull(D_pur180,0)) as pur180,
		convert(varchar,isnull(N_pur60,0)) + '.' + convert(varchar,isnull(D_pur60,0)) as pur60,  	
		convert(varchar,isnull(N_sal1000,0))+ '.' + convert(varchar,isnull(D_sal1000,0)) as sal1000,
		convert(varchar,isnull(N_sal500,0)) + '.' + convert(varchar,isnull(D_sal500,0)) as sal500,
		convert(varchar,isnull(N_sal750,0)) + '.' + convert(varchar,isnull(D_sal750,0)) as sal750,
		convert(varchar,isnull(N_sal650,0)) + '.' + convert(varchar,isnull(D_sal650,0)) as sal650,
		convert(varchar,isnull(N_sal375,0)) + '.' + convert(varchar,isnull(D_sal375,0)) as sal375,
		convert(varchar,isnull(N_sal330,0)) + '.' + convert(varchar,isnull(D_sal330,0)) as sal330,
		convert(varchar,isnull(N_sal325,0)) + '.' + convert(varchar,isnull(D_sal325,0)) as sal325,
		convert(varchar,isnull(N_sal180,0)) + '.' + convert(varchar,isnull(D_sal180,0)) as sal180,
		convert(varchar,isnull(N_sal60,0)) + '.' + convert(varchar,isnull(D_sal60,0)) as sal60,
		convert(varchar,isnull(N_clo1000,0)) + '.' + convert(varchar,isnull(D_clo1000,0)) as clo1000,
		convert(varchar,isnull(N_clo500,0)) + '.' + convert(varchar,isnull(D_clo500,0)) as clo500,
		convert(varchar,isnull(N_clo750,0)) + '.' + convert(varchar,isnull(D_clo750,0)) as clo750,
		convert(varchar,isnull(N_clo650,0)) + '.' + convert(varchar,isnull(D_clo650,0)) as clo650,
		convert(varchar,isnull(N_clo375,0)) + '.' + convert(varchar,isnull(D_clo375,0)) as clo375, 
		convert(varchar,isnull(N_clo330,0)) + '.' + convert(varchar,isnull(D_clo330,0)) as clo330,
		convert(varchar,isnull(N_clo325,0)) + '.' + convert(varchar,isnull(D_clo325,0)) as clo325,
		convert(varchar,isnull(N_clo180,0)) + '.' + convert(varchar,isnull(D_clo180,0)) as clo180,
		convert(varchar,isnull(N_clo60,0)) + '.' + convert(varchar,isnull(D_clo60,0)) as clo60
		from 
		#tempflr3catg
		order by categorydesc

		select categorydesc as catg,
		'' as Brand, '' as shortname, @licno AS fllicno, @liname as fllicname, @date as fdate, '' as tpno,
		convert(varchar,isnull(N_op1000,0)) + '.' + convert(varchar,isnull(D_op1000,0)) as op1000,
		convert(varchar, isnull(N_op500,0)) + '.' + convert(varchar,isnull(D_op500,0)) as op500,
		convert(varchar,isnull(N_op750,0)) + '.' + convert(varchar,isnull(D_op750,0)) as op750, 
		convert(varchar,isnull(N_op650,0)) + '.' + convert(varchar,isnull(D_op650,0)) as op650,
		convert(varchar,isnull(N_op375,0)) + '.' + convert(varchar,isnull(D_op375,0)) as op375,
		convert(varchar,isnull(N_op330,0)) + '.' + convert(varchar,isnull(D_op330,0)) as op330,
		convert(varchar,isnull(N_op325,0)) + '.' + convert(varchar,isnull(D_op325,0)) as op325,
		convert(varchar,isnull(N_op180,0)) + '.' + convert(varchar,isnull(D_op180,0)) as op180,
		convert(varchar,isnull(N_op60,0)) + '.'  + convert(varchar,isnull(D_op60,0)) as op60,		
		convert(varchar,isnull(N_pur1000,0)) + '.' + convert(varchar,isnull(D_pur1000,0)) as pur1000,
		convert(varchar,isnull(N_pur500,0)) + '.' + convert(varchar,isnull(D_pur500,0)) as pur500,
		convert(varchar,isnull(N_pur750,0)) + '.' + convert(varchar,isnull(D_pur750,0)) as pur750,
		convert(varchar,isnull(N_pur650,0)) + '.' + convert(varchar,isnull(D_pur650,0)) as pur650,
		convert(varchar,isnull(N_pur375,0)) + '.' + convert(varchar,isnull(D_pur375,0)) as pur375,
		convert(varchar,isnull(N_pur330,0)) + '.' +convert(varchar, isnull(D_pur330,0)) as pur330,
		convert(varchar,isnull(N_pur325,0)) + '.' + convert(varchar,isnull(D_pur325,0)) as pur325,
		convert(varchar,isnull(N_pur180,0))+ '.' + convert(varchar,isnull(D_pur180,0)) as pur180,
		convert(varchar,isnull(N_pur60,0)) + '.' + convert(varchar,isnull(D_pur60,0)) as pur60,  	
		convert(varchar,isnull(N_sal1000,0))+ '.' + convert(varchar,isnull(D_sal1000,0)) as sal1000,
		convert(varchar,isnull(N_sal500,0)) + '.' + convert(varchar,isnull(D_sal500,0)) as sal500,
		convert(varchar,isnull(N_sal750,0)) + '.' + convert(varchar,isnull(D_sal750,0)) as sal750,
		convert(varchar,isnull(N_sal650,0)) + '.' + convert(varchar,isnull(D_sal650,0)) as sal650,
		convert(varchar,isnull(N_sal375,0)) + '.' + convert(varchar,isnull(D_sal375,0)) as sal375,
		convert(varchar,isnull(N_sal330,0)) + '.' + convert(varchar,isnull(D_sal330,0)) as sal330,
		convert(varchar,isnull(N_sal325,0)) + '.' + convert(varchar,isnull(D_sal325,0)) as sal325,
		convert(varchar,isnull(N_sal180,0)) + '.' + convert(varchar,isnull(D_sal180,0)) as sal180,
		convert(varchar,isnull(N_sal60,0)) + '.' + convert(varchar,isnull(D_sal60,0)) as sal60,
		convert(varchar,isnull(N_clo1000,0)) + '.' + convert(varchar,isnull(D_clo1000,0)) as clo1000,
		convert(varchar,isnull(N_clo500,0)) + '.' + convert(varchar,isnull(D_clo500,0)) as clo500,
		convert(varchar,isnull(N_clo750,0)) + '.' + convert(varchar,isnull(D_clo750,0)) as clo750,
		convert(varchar,isnull(N_clo650,0)) + '.' + convert(varchar,isnull(D_clo650,0)) as clo650,
		convert(varchar,isnull(N_clo375,0)) + '.' + convert(varchar,isnull(D_clo375,0)) as clo375, 
		convert(varchar,isnull(N_clo330,0)) + '.' + convert(varchar,isnull(D_clo330,0)) as clo330,
		convert(varchar,isnull(N_clo325,0)) + '.' + convert(varchar,isnull(D_clo325,0)) as clo325,
		convert(varchar,isnull(N_clo180,0)) + '.' + convert(varchar,isnull(D_clo180,0)) as clo180,
		convert(varchar,isnull(N_clo60,0)) + '.' + convert(varchar,isnull(D_clo60,0)) as clo60
		from 
		#tempflr3catg
		order by categorydesc
		*/
		
		
		
		set @strSelect = 'select ltrim(rtrim(r.categorydesc)) as catg,ltrim(rtrim(r.branddesc)) as Brand,ltrim(rtrim(shortname)) as shortname,
		''' + @licno + ''' AS fllicno,''' + @liname + ''' as fllicname,''' + ltrim(rtrim(convert(varchar,@date,106))) + ''' as fdate,ltrim(rtrim(tpno))as tpno,      
		isnull(convert(varchar,op1000),'''') as op1000, isnull(convert(varchar,op500),'''') as op500, isnull(convert(varchar,op750),'''') as op750,       
		isnull(convert(varchar,op650),'''') as op650, isnull(convert(varchar,op375),'''') as op375, isnull(convert(varchar,op330),'''') as op330,       
		isnull(convert(varchar,op325),'''') as op325, isnull(convert(varchar,op180),'''') as op180, isnull(convert(varchar,op60),'''') as op60,       
		  
		isnull(convert(varchar,pur1000),'''') as pur1000, isnull(convert(varchar,pur500),'''') as pur500, isnull(convert(varchar,pur750),'''') as pur750,       
		isnull(convert(varchar,pur650),'''') as pur650, isnull(convert(varchar,pur375),'''') as pur375, isnull(convert(varchar,pur330),'''') as pur330,       
		isnull(convert(varchar,pur325),'''') as pur325, isnull(convert(varchar,pur180),'''') as pur180, isnull(convert(varchar,pur60),'''') as pur60,       
		  
		isnull(convert(varchar,sal1000),'''') as sl1000, isnull(convert(varchar,sal500),'''') as sl500, isnull(convert(varchar,sal750),'''') as sl750,       
		isnull(convert(varchar,sal650),'''') as sl650, isnull(convert(varchar,sal375),'''') as sl375, isnull(convert(varchar,sal330),'''') as sl330,       
		isnull(convert(varchar,sal325),'''') as sl325, isnull(convert(varchar,sal180),'''') as sl180, isnull(convert(varchar,sal60),'''') as sl60,       
		  
		isnull(convert(varchar,clo1000),'''') as cl1000, isnull(convert(varchar,clo500),'''') as cl500, isnull(convert(varchar,clo750),'''') as cl750,       
		isnull(convert(varchar,clo650),'''') as cl650, isnull(convert(varchar,clo375),'''') as cl375, isnull(convert(varchar,clo330),'''') as cl330,       
		isnull(convert(varchar,clo325),'''') as cl325, isnull(convert(varchar,clo180),'''') as cl180, isnull(convert(varchar,clo60),'''') as cl60       
		from tbl_report r     
		join tbl_brandhead bh on r.brandid=bh.brandid 
		where 1=1'    
        
        
        set @orderby = 'order by r.categorydesc'
        
        
        
        if @Category <> ''
		  begin
		 set @strWhere=@strWhere + ' and r.categorydesc = '''+ @Category + ''''
		  end
		  
    if @Brand <> ''     
		  begin         
		  set @strWhere=@strWhere + ' and r.branddesc= '''+ @Brand + ''''
		  end


	exec(@strSelect+@strWhere + @orderby)    
    --print(@strSelect+@strWhere + @orderby)	
		--where op1000 is not null or op500 is not null or op750 is not null or op650 is not null or op375 is not null or op330 is not null or       
		--op325 is not null or op180 is not null or op60 is not null or pur1000 is not null or pur500 is not null or pur750 is not null or       
		--pur650 is not null or pur375 is not null or pur330 is not null or pur325 is not null or pur180 is not null or pur60 is not null or       
		--sal1000 is not null or sal500 is not null or sal750 is not null or sal650 is not null or sal375 is not null or sal330 is not null or       
		--sal325 is not null or sal180 is not null or sal60 is not null or clo1000 is not null or clo500 is not null or clo750 is not null or       
		--clo650 is not null or clo375 is not null or clo330 is not null or clo325 is not null or clo180 is not null or clo60 is not null
		
		--union all
		
		
		select ltrim(rtrim(r.categorydesc)) as catg,
		'' as Brand, '' as shortname, @licno AS fllicno, @liname as fllicname, @date as fdate, '' as tpno,
		convert(varchar,isnull(N_op1000,0)) + '.' + convert(varchar,isnull(D_op1000,0)) as op1000,
		convert(varchar, isnull(N_op500,0)) + '.' + convert(varchar,isnull(D_op500,0)) as op500,
		convert(varchar,isnull(N_op750,0)) + '.' + convert(varchar,isnull(D_op750,0)) as op750, 
		convert(varchar,isnull(N_op650,0)) + '.' + convert(varchar,isnull(D_op650,0)) as op650,
		convert(varchar,isnull(N_op375,0)) + '.' + convert(varchar,isnull(D_op375,0)) as op375,
		convert(varchar,isnull(N_op330,0)) + '.' + convert(varchar,isnull(D_op330,0)) as op330,
		convert(varchar,isnull(N_op325,0)) + '.' + convert(varchar,isnull(D_op325,0)) as op325,
		convert(varchar,isnull(N_op180,0)) + '.' + convert(varchar,isnull(D_op180,0)) as op180,
		convert(varchar,isnull(N_op60,0)) + '.'  + convert(varchar,isnull(D_op60,0)) as op60,		
		convert(varchar,isnull(N_pur1000,0)) + '.' + convert(varchar,isnull(D_pur1000,0)) as pur1000,
		convert(varchar,isnull(N_pur500,0)) + '.' + convert(varchar,isnull(D_pur500,0)) as pur500,
		convert(varchar,isnull(N_pur750,0)) + '.' + convert(varchar,isnull(D_pur750,0)) as pur750,
		convert(varchar,isnull(N_pur650,0)) + '.' + convert(varchar,isnull(D_pur650,0)) as pur650,
		convert(varchar,isnull(N_pur375,0)) + '.' + convert(varchar,isnull(D_pur375,0)) as pur375,
		convert(varchar,isnull(N_pur330,0)) + '.' +convert(varchar, isnull(D_pur330,0)) as pur330,
		convert(varchar,isnull(N_pur325,0)) + '.' + convert(varchar,isnull(D_pur325,0)) as pur325,
		convert(varchar,isnull(N_pur180,0))+ '.' + convert(varchar,isnull(D_pur180,0)) as pur180,
		convert(varchar,isnull(N_pur60,0)) + '.' + convert(varchar,isnull(D_pur60,0)) as pur60,  	
		convert(varchar,isnull(N_sal1000,0))+ '.' + convert(varchar,isnull(D_sal1000,0)) as sl1000,
		convert(varchar,isnull(N_sal500,0)) + '.' + convert(varchar,isnull(D_sal500,0)) as sl500,
		convert(varchar,isnull(N_sal750,0)) + '.' + convert(varchar,isnull(D_sal750,0)) as sl750,
		convert(varchar,isnull(N_sal650,0)) + '.' + convert(varchar,isnull(D_sal650,0)) as sl650,
		convert(varchar,isnull(N_sal375,0)) + '.' + convert(varchar,isnull(D_sal375,0)) as sl375,
		convert(varchar,isnull(N_sal330,0)) + '.' + convert(varchar,isnull(D_sal330,0)) as sl330,
		convert(varchar,isnull(N_sal325,0)) + '.' + convert(varchar,isnull(D_sal325,0)) as sl325,
		convert(varchar,isnull(N_sal180,0)) + '.' + convert(varchar,isnull(D_sal180,0)) as sl180,
		convert(varchar,isnull(N_sal60,0)) + '.' + convert(varchar,isnull(D_sal60,0)) as sl60,
		convert(varchar,isnull(N_clo1000,0)) + '.' + convert(varchar,isnull(D_clo1000,0)) as cl1000,
		convert(varchar,isnull(N_clo500,0)) + '.' + convert(varchar,isnull(D_clo500,0)) as cl500,
		convert(varchar,isnull(N_clo750,0)) + '.' + convert(varchar,isnull(D_clo750,0)) as cl750,
		convert(varchar,isnull(N_clo650,0)) + '.' + convert(varchar,isnull(D_clo650,0)) as cl650,
		convert(varchar,isnull(N_clo375,0)) + '.' + convert(varchar,isnull(D_clo375,0)) as cl375, 
		convert(varchar,isnull(N_clo330,0)) + '.' + convert(varchar,isnull(D_clo330,0)) as cl330,
		convert(varchar,isnull(N_clo325,0)) + '.' + convert(varchar,isnull(D_clo325,0)) as cl325,
		convert(varchar,isnull(N_clo180,0)) + '.' + convert(varchar,isnull(D_clo180,0)) as cl180,
		convert(varchar,isnull(N_clo60,0)) + '.' + convert(varchar,isnull(D_clo60,0)) as cl60
		from 
		#tempflr3catg r
		order by ltrim(rtrim(r.categorydesc))
	end
	
	
 
 end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchFlr4Report]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchFlr4Report]
GO
CREATE procedure [dbo].[Spr_FetchFlr4Report]
@xmlDoc xml,  
@outbit bit output,  
@outmsg varchar(max) output 

as        
begin
declare @IsBrandwise bit
Declare @hdoc int     
Declare @licenseID numeric(18,0)    
Declare @fromdate datetime    
Declare @todate datetime    
declare @CocktailReportDate datetime     
Declare @All bit    
    
exec sp_xml_preparedocument @hdoc output,@xmlDoc    
  
select @licenseID=LicenseID,@CocktailReportDate=CocktailReportDate,@fromdate=FromDate,@todate=ToDate,@All=[All] ,@IsBrandwise= IsBrandwise  
from openXML(@hDoc,'/Master/CocktailReports/Report') with    
(  
LicenseID numeric(18,0),  
CocktailReportDate datetime,    
FromDate datetime,  
ToDate datetime,  
[All] bit ,
IsBrandwise bit 
)  

--set @fromdate='15-Dec-2012'
--set @todate='16-Dec-2012'
--set @licenseID = 4


Declare @licno  varchar(100)      
Declare @liname varchar(100)      
set @licno=''      
set @liname=''      
select @licno= licenseno from tbl_license where licenseid=@licenseid      
select @liname= licensedesc from tbl_license where licenseid=@licenseid     

declare @brandid numeric(18,0)  
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandOpeningID numeric(18,0)

declare @StockIN char(1)    
declare @spegqty numeric(18,0)    
declare @sizeml int    
declare @totalspges numeric(18,0)

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

declare @opUnitQty numeric(18,0)
declare @purUnitQty numeric(18,0)
declare @totUnitQty numeric(18,0)
declare @salUnitQty numeric(18,0)


declare @strtp varchar(max)

	declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0),
		Descr varchar(50)
	)  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	) 
	--create index ind_brandid on @tempbrand(brandid)

	--alter index ind_brandid rebuild 
	  


	insert into @tempbrand
	(brandopeningid, brandid, CategorySizeLinkID, categorydesc, Alias, Particular, UnitQty)
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 1, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 2, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 3, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 4, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 5, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'       
	order by CategorySizeLinkUpID 
       
	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid  


	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @BrandOpeningID = 0


	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			--print @totalspges    

			--select * from tbl_purchasedetail  

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * - 1  
--			end  

			--print @totalspges    
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand   
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end    
		else    
		begin    

			--print 'Rakesh'
			--set @date = '31-May-2012'  

			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * -1  
--			end  

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand    
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid



		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp=''

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID


			select @strtp=@strtp + ph.TPno 
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			--print @totalspges  

			--select * from tbl_purchasedetail

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	


			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
--       
--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3
			

--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID 

		end  
		else  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			select @strtp=@strtp + ph.TPno
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
						
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2  

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID  

		end

		delete from @tempwhile where brandopeningid = @brandopeningid
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'   
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp='' 

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			print @totalspges  
--
--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where BrandOpeningID=@BrandOpeningID

		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end
		
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)
--			where BrandOpeningID=@BrandOpeningID
		end      

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end    
	--select * from @tempbrand where categorydesc = 'IMPORTED BEER' and alias = '330'
	if @IsBrandwise=0
		begin
		select
		ltrim(rtrim(categorydesc)) as catg, convert(varchar,Particular) as Particulars, ltrim(rtrim(Alias)) as siz,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(UnitQty),CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(UnitQty),CategorySizeLinkID)))) as totsale,
		ltrim(rtrim(@licno)) as  fllicno,ltrim(rtrim(@liname)) as  fllicname,
		convert(varchar,@fromdate,106) as Fromdate,convert(varchar,@todate,106) as Todate   
		from @tempbrand
		group by CategorySizeLinkID, categorydesc, Alias, Particular
		end
	else
		begin
		
		select * into #PivotBrand from @tempbrand
		update #PivotBrand set Descr='Opening' where Particular=1
		update #PivotBrand set Descr='Purchase' where Particular=2
		update #PivotBrand set Descr='Total' where Particular=3
		update #PivotBrand set Descr='Sale' where Particular=4
		update #PivotBrand set Descr='Closing' where Particular=5
		
		DECLARE @qry VARCHAR(max)
		SET @qry =
		'SELECT Brand,Size,Category,Opening,Purchase,Total,Sale,Closing FROM
		(select ltrim(rtrim(tmp.categorydesc)) as Category,ltrim(rtrim(vw.branddesc)) as Brand,vw.alias as Size,tmp.Descr,
			convert(numeric(18,2),ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(tmp.UnitQty,tmp.CategorySizeLinkID)) + ''.'' + convert(varchar,dbo.Fun_Calcspegfromspeg(tmp.UnitQty,tmp.CategorySizeLinkID))))) as totsale
		from #PivotBrand tmp
		join vw_BrandOpeningDetails vw on vw.brandopeningid=tmp.brandopeningid)p
		PIVOT (sum(totsale) FOR Descr IN (Opening,Purchase,Total,Sale,Closing)) AS Pvt order by Brand,size'
		--Opening,Purchase,Total,Sale,Closing

		-- Executing the query
		print(@qry)
		EXEC(@qry)
		
		drop table #PivotBrand
		end
	set @outbit = 1
	set @outmsg='success' 

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveImportLicense]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveImportLicense]
GO

CREATE procedure [dbo].[Spr_SaveImportLicense]
@LicenseID numeric(18,0),        
@ImportLicenseXml xml,  
@ImportClientDetailsXml xml,
@UserName varchar(100),      
@Outbit  bit output,                
@OutMsg  varchar(100) output         
as        
begin        
if @LicenseID=0        
begin        
delete from Tbl_License where LicenseID =@LicenseID    
declare @hdoc int      
exec sp_xml_preparedocument @hDoc output,@ImportLicenseXml      
insert into Tbl_License(LicenseNo,LicenseDesc,Add1,Add2,City,PinCode,Telephone,Email,Bst,Cst,Store,Oprc,Dtc)      
select LicenseNo,LicenseName,Add1,Add2,city,PinCode,telephone,Email,Bst,Cst,Store,@UserName,getDate()      
      
from OpenXml(@hdoc,'/Master/ImportLicense/ImportLicenseMst')with      
(      
LicenseNo varchar(100),    
LicenseName varchar(100),    
Add1 varchar(100),    
Add2 varchar(100),    
city varchar(50),    
PinCode varchar(50),    
telephone varchar(50),    
Email varchar(50),    
Bst varchar(100),    
Cst varchar(100),    
Store bit    
)      
    
  
declare @hdocClient int  
exec sp_xml_preparedocument @hdocClient output,@ImportClientDetailsXml  
insert into tbl_ClientMaster(ClientId,ClientName,Version,Oprc,Dtc)  
select ClientID,ClientName,Version,@UserName,getdate()  
from Openxml(@hdocClient,'/Master/ImportClient/ImportClientMst')with  
(  
ClientID numeric(18,0),ClientName varchar(100),Version int  
)  
  
insert into Tbl_BillMaster  
(LicenseID,BillStNo,BillEndNo,CurrentBillNo)  
Select   
LicenseID, 1, 100000, 0  
from   
Tbl_License  
  
set @OutMsg = 'Saved Successfully'                
set @Outbit = 1           
      
end        
end        
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_QV_SaveVariance') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_QV_SaveVariance
GO

CREATE Proc Spr_QV_SaveVariance  
@varianceId numeric(18,0)=0,  
@LicenseID numeric(18,0),  
@VarDate  smalldatetime,  
@username Varchar(50),  
@disptype char(1),  
@XmlVariance xml,  
@outMsg varchar(100) output,
@HideBtnSattalement bit output
 
AS  
 BEGIN  
  declare @hdocVar as int      
  exec sp_xml_preparedocument @hdocVar output,@XmlVariance       
    DELETE FROM tbl_variance WHERE LicenseID=@LicenseID and VarDate=@VarDate  
    insert into tbl_variance(LicenseID,VarDate,BrandOpeningID,VarBottle,VarSpeg,VarGlass,ActBottle,ActSpeg,ActGlass,DispBottle,DispSpeg,DispGlass,DisplayType,oprc,dtc)  
    select @LicenseID,@Vardate,BrandOpeningID,VarBottle,VarSpeg,VarGlass,aBottle,aSpeg,aGlass,DispBottle,DispSpeg,DispGlass,@disptype,@username,getdate()  
    from OpenXML(@hdocVar,'/CWPlus/Variance/Details') with  
    (  
     BrandOpeningID numeric(18,0),  
     VarBottle numeric(18,0),  
     VarSpeg numeric(18,0),  
     VarGlass numeric(18,0),  
     aBottle numeric(18,0),  
     aSpeg numeric(18,0),  
     aGlass numeric(18,0),  
     DispBottle numeric(18,0),  
     DispSpeg numeric(18,0),  
     DispGlass numeric(18,0)  
    )  
   set @outmsg='Saved Successfully'
	set @HideBtnSattalement=1
  
 END
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchPeriodToMerge]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchPeriodToMerge] 
GO

CREATE Proc [dbo].[Spr_FetchPeriodToMerge] 
@LicenseID numeric(18,0),   
@FromDate datetime,    
@ToDate datetime    
as    
begin    
   select c.ControlHeadID,c.LicenseID,l.LicenseDesc as License,convert(varchar,c.Fromdate,106) as FromDate,convert(varchar,c.ToDate,106) as ToDate    
   from tbl_controlshead c    
   join tbl_License l on l.LicenseID=c.LicenseID    
   where (convert(smalldatetime,convert(varchar,c.fromdate,102)) between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))) 
   and (convert(smalldatetime,convert(varchar,c.todate,102)) between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102)))
    and c.licenseid=@LicenseID order by   c.ControlHeadID  
end
GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_Fetchflr9A') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_Fetchflr9A
GO

CREATE procedure Spr_Fetchflr9A
@TransferHeadID numeric(18,0)                  
as                  
begin    
    
 declare @tempTransfer table    
 (    
  TransferHeadID numeric(18,0),    
  BrandOpeningID numeric(18,0),    
  bottlerate numeric(18,0),    
  bottleqty numeric(18,3),    
  Box varchar(10),    
  Batch varchar(50),    
  mfg varchar(50)    
 )    
 insert into @tempTransfer    
 (TransferHeadID, BrandOpeningID, bottlerate, bottleqty, Box, Batch, mfg)    
 select      
 t.TransferHeadID, t.BrandOpeningID, t.bottlerate ,sum(t.bottleqty) ,t.Box ,t.Batch ,t.mfg     
 from Tbl_TransferDetailsMst t    
 where t.TransferHeadID = @TransferHeadID    
 group by t.TransferHeadID, t.BrandOpeningID, t.bottlerate, t.Box , t.Batch , t.mfg    
    
 declare @tem table                   
 (                  
  srno int identity(1,1),                  
  TrfNo varchar(100),                  
  tpno varchar(100),                  
  trfdate smalldatetime,                  
  ndtrfdate smalldatetime,                  
  BrandName varchar(100),                  
  shortname varchar(100),                  
  strength varchar(100),                  
  sizealias varchar(100),                  
  rate numeric(18,0),                  
  qty numeric(18,0),                  
  noofbox varchar(10),        
  batchno varchar(50),                  
  mfgmntyr varchar(50),                  
  rem varchar (50),                  
  fllicno varchar(100),                  
  fllicname varchar(100),                  
  Address varchar(100),                  
  barno varchar(100),                  
  barname varchar(100)                  
 )                   
    
 delete from @tem           
 declare @tmpVar varchar(30)          
 select @tmpVar = ltrim(rtrim(isnull(FLIVAddress,0))) from Tbl_GeneralSetUp    
    
 if ltrim(rtrim(@tmpVar)) = 0          
 begin          
  /*    
  insert into @tem (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,          
  Address,barno,barname)                  
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,                  
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,vw.LicenseNo ,vw.LicenseDesc ,                  
  vw.Add1,isnull(l.LicenseNo,'') as  LicenseNo,isnull(l.LicenseDesc,th.FLIV) as LicenseDesc from  Tbl_TransferDetailsMst t                   
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID                      
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID                  
  join tbl_BrandHead bh on bh.BrandID=vw.brandid                   
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID                   
  where th.TransferHeadID=@TransferHeadID    
  */    
    
  insert into @tem (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,          
  Address,barno,barname)                  
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,                  
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,vw.LicenseNo ,vw.LicenseDesc ,                  
  ltrim(rtrim(l.Add1)),isnull(l.LicenseNo,'') as  LicenseNo,isnull(l.LicenseDesc,th.FLIV) as LicenseDesc     
  from @tempTransfer t                   
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID                      
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID                  
  join tbl_BrandHead bh on bh.BrandID=vw.brandid                   
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID                   
  where th.TransferHeadID=@TransferHeadID    
    
 end     
else       
 begin
declare @address varchar(500)
set @address = ''
select @address = ltrim(rtrim(isnull(Add1,''))) from tbl_license  where store = 1  
  /*    
  insert into @tem     
  (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname)                  
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,                  
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,th.FLIVAddress As LicenseNo ,th.FLIVAddress As LicenseDesc ,                  
  vw.Add1,isnull(l.LicenseNo,'') as  LicenseNo,isnull(l.LicenseDesc,th.FLIV) as LicenseDesc          
  from                   
  Tbl_TransferDetailsMst t                   
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID                      
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID                  
  join tbl_BrandHead bh on bh.BrandID=vw.brandid                   
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID                   
  where th.TransferHeadID=@TransferHeadID    
  */    
    
  insert into @tem     
  (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname)                  
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,                  
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,th.FLIVAddress As LicenseNo ,th.FLIVAddress As LicenseDesc ,                  
  ltrim(rtrim(isnull(l.Add1,@address))),isnull(l.LicenseNo,th.FLIV) as  LicenseNo,ltrim(rtrim(isnull(l.LicenseDesc,th.FLIVAddress))) as LicenseDesc          
  from @tempTransfer t                   
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID                      
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID                  
  join tbl_BrandHead bh on bh.BrandID=vw.brandid                   
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID                   
  where th.TransferHeadID=@TransferHeadID    
    
 end               
    
 select TrfNo,tpno,trfdate,ndtrfdate,BrandName as brandno,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname, srno               
 from @tem order by srno    
    
end    
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchflrIA') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchflrIA
GO

CREATE procedure Spr_FetchflrIA  
@TransferHeadID numeric(18,0)       
as          
begin  
  
 declare @tempTransfer table  
 (  
  TransferHeadID numeric(18,0),  
  BrandOpeningID numeric(18,0),  
  bottlerate numeric(18,0),  
  bottleqty numeric(18,3),  
  Box varchar(10),  
  Batch varchar(50),  
  mfg varchar(50)  
 )  
 insert into @tempTransfer  
 (TransferHeadID, BrandOpeningID, bottlerate, bottleqty, Box, Batch, mfg)  
 select    
 t.TransferHeadID, t.BrandOpeningID, t.bottlerate ,sum(t.bottleqty) ,t.Box ,t.Batch ,t.mfg   
 from Tbl_TransferDetailsMst t  
 where t.TransferHeadID = @TransferHeadID  
 group by t.TransferHeadID, t.BrandOpeningID, t.bottlerate, t.Box , t.Batch , t.mfg  
           
 declare @tem table           
 (          
  srno int identity(1,1),          
  TrfNo varchar(100),          
  tpno varchar(100),          
  trfdate smalldatetime,          
  ndtrfdate smalldatetime,          
  BrandName varchar(100),          
  shortname varchar(100),          
  strength varchar(100),          
  sizealias varchar(100),          
  rate numeric(18,0),          
  qty numeric(18,0),          
  noofbox varchar(10),      
  batchno varchar(50),          
  mfgmntyr varchar(50),          
  rem varchar (50),          
  fllicno varchar(100),          
  fllicname varchar(100),          
  Address varchar(100),          
  barno varchar(100),          
  barname varchar(100)          
 )  
           
 delete from @tem         
 declare @tmpVar varchar(30)        
 select @tmpVar = ltrim(rtrim(isnull(FLIVAddress,0))) from Tbl_GeneralSetUp  
   
 if ltrim(rtrim(@tmpVar)) =0        
 begin  
  /*        
  insert into @tem (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname)          
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,          
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,vw.LicenseNo ,vw.LicenseDesc ,          
  vw.Add1,isnull(l.LicenseNo,'') as  LicenseNo,isnull(l.LicenseDesc,th.FLIV) as LicenseDesc            
  from           
  Tbl_TransferDetailsMst t           
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID              
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID          
  join tbl_BrandHead bh on bh.BrandID=vw.brandid           
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID           
  where th.TransferHeadID=@TransferHeadID  
  */  
  
  insert into @tem (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname)          
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,          
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,vw.LicenseNo ,vw.LicenseDesc ,          
  vw.Add1,isnull(l.LicenseNo,'') as  LicenseNo,isnull(l.LicenseDesc,th.FLIV) as LicenseDesc            
  from           
  @tempTransfer t           
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID              
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID          
  join tbl_BrandHead bh on bh.BrandID=vw.brandid           
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID           
  where th.TransferHeadID=@TransferHeadID  
            
 end        
 else    
 begin 

declare @address varchar(500)
set @address = ''
select @address = ltrim(rtrim(isnull(Add1,''))) from tbl_license  where store = 1  
       
  /*  
  insert into @tem (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname)          
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,          
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,th.FLIVAddress As LicenseNo ,th.FLIVAddress As LicenseDesc  ,          
  vw.Add1,isnull(l.LicenseNo,'') as  LicenseNo,isnull(l.LicenseDesc,th.FLIV) as LicenseDesc            
  from Tbl_TransferDetailsMst t  
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID              
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID          
  join tbl_BrandHead bh on bh.BrandID=vw.brandid           
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID           
  where th.TransferHeadID=@TransferHeadID  
  */  
  
  insert into @tem (TrfNo,tpno,trfdate,ndtrfdate,BrandName,shortname,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname)          
  select  th.Tpno , th.Tpno ,convert(varchar,th.TransferDate,106) ,convert(varchar,th.TransferDate,106) ,vw.BrandDesc,vw.ShortName ,bh.Strength ,          
  vw.Alias ,t.bottlerate ,t.bottleqty ,t.Box ,t.Batch ,t.mfg ,'' ,th.FLIVAddress As LicenseNo ,th.FLIVAddress As LicenseDesc  ,          
  ltrim(rtrim(isnull(l.Add1,@address))),isnull(l.LicenseNo,th.FLIV) as  LicenseNo,ltrim(rtrim(isnull(l.LicenseDesc,th.FLIVAddress))) as LicenseDesc          
  from @tempTransfer t  
  join Tbl_TransferHeadMst th on t.TransferHeadID=th.TransferHeadID              
  join viewbrandopening vw on vw.BrandOpeningID = t.BrandOpeningID          
  join tbl_BrandHead bh on bh.BrandID=vw.brandid           
  left outer join  Tbl_License l on   l.LicenseID =th.ForLicenseID           
  where th.TransferHeadID=@TransferHeadID  
          
 end  
     
 select TrfNo,tpno,trfdate,ndtrfdate,BrandName as brandno,strength,sizealias,rate,qty,noofbox,batchno,mfgmntyr,rem,fllicno,fllicname,Address,barno,barname,srno         
 from @tem  
end  
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchQcStep1]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchQcStep1]
GO

CREATE procedure [dbo].[Spr_FetchQcStep1]
@LicenseID numeric(18,0),            
@FromDate DateTime,          
@ToDate DateTime,          
@TotalCost Numeric(18,0) output, 
@tag Numeric(18,0) = 1        
as              
begin              
	/*
	declare @date smalldatetime            
	select @date = VarDate  from vw_fetchdistinctVariance where licenseid = @LicenseID order by VarDate desc            

	--sale quantity        
	declare @temptable table            
	(         
		id numeric(18,0) identity(1,1),
		BrandOpeningID numeric(18,0),
		MasterPurRate numeric(14,2),
		PurchaseRate numeric(14,2),
		MasterUnitBottleRate numeric(14,2),
		PurchaseUnitBottleRate numeric(14,2),
		Sale numeric(18,0),
		Stockin char(1),
		PegSize numeric(18,0),
		CostType char(1),
		ML numeric(18,0)
	)
	insert into @temptable(BrandOpeningID, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate, Sale, CostType)        
	Select        
	sd.brandopeningid,            
	isnull(sd.MasterPurRate,0),            
	isnull(sd.PurchaseRate,0),
	isnull(sd.MasterUnitBottleRate,0),            
	isnull(sd.PurchaseUnitBottleRate,0),        
	sum(sd.UnitQty),
	sd.CostType
	--Case        
	--when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))        
	--else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))        
	--End        
	from tbl_saledetail sd            
	join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
	join tbl_SaleHead sh on sh.billid=sd.billid         
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
	--where sh.billdate between @FromDate and @ToDate    
	where convert(smalldatetime,convert(varchar,sh.billdate,102))     
	between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))
	group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0), isnull(sd.MasterUnitBottleRate,0), isnull(sd.PurchaseUnitBottleRate,0), 
	sd.CostType 
	    
	union all

	Select        
	sd.brandopeningid,            
	isnull(sd.MasterPurRate,0),            
	isnull(sd.PurchaseRate,0),
	0,            
	0,        
	sum(sd.UnitQty),
	null
	--Case        
	--when lower(lnk.StockIN) = 'm' then dbo.Fun_CalcunitsForFLR4(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))        
	--else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))        
	--End
	from tbl_salecocktaildetail sd        
	join tbl_salecocktailhead hd on sd.CocktailSaleId = hd.CocktailSaleId        
	join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
	join tbl_SaleHead sh on sh.billid=hd.billid         
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
	where convert(smalldatetime,convert(varchar,sh.billdate,102))     
	between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))    
	group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0)
	--select * from @temptable        

	--variance quantity        
	declare @tempVariance table            
	(            
	BrandOpeningID numeric(18,0),            
	Variance numeric(18,0)            
	)        
	insert into @tempVariance(BrandOpeningID, Variance)            
	Select             
	varn.brandopeningid,        
	Case        
	when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)))        
	else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)))        
	end            
	from vw_FetchVarianceTable varn        
	join tbl_brandopening bo on varn.brandopeningid = bo.brandopeningid           
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
	where varn.VarDate = @date and varn.licenseid = @LicenseID            

	--select * from @temptable          
	--select * from @tempVariance

	declare @id numeric(18,0)        
	declare @BrandOpeningID numeric(18,0)        
	declare @variance numeric(18,0)        
	/*
	while(select count(BrandOpeningID) from @tempVariance) > 0        
	begin        
	select @BrandOpeningID = BrandOpeningID, @variance = variance from @tempVariance order by BrandOpeningID        
	select top 1 @id = id from @temptable where BrandOpeningID = @BrandOpeningID order by id desc        

	Update @temptable        
	set sale =        
	case        
	when @variance < 0 then sale + @variance        
	else sale - @variance        
	end        
	where id = @id        

	delete from @tempVariance where BrandOpeningID = @BrandOpeningID        
	end        
	*/

	declare @tempBrandWhile table        
	(
		newidn numeric(18,0) identity,        
		id numeric(18,0),            
		BrandOpeningID numeric(18,0),            
		MasterPurRate numeric(14,2) default 0,            
		PurchaseRate numeric(14,2) default 0,            
		Sale  numeric(18,0)        
	)	


	while(select count(BrandOpeningID) from @tempVariance) > 0        
	begin        

		declare @newidn numeric(18,0)        
		--declare @id numeric(18,0)        
		declare @sale numeric(18,0)        

		select top 1 @BrandOpeningID = BrandOpeningID, @variance = variance from @tempVariance order by BrandOpeningID        

		delete from @tempBrandWhile
		
		insert into @tempBrandWhile(id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale)        
		select id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale from @temptable where BrandOpeningID = @BrandOpeningID        

		/*      
		if @BrandOpeningID = 44925      
		begin      
		select * from @tempBrandWhile where BrandOpeningID = 44925      
		end      
		*/

		while(select count(*) from @tempBrandWhile) > 0        
		begin        
			set @newidn = 0        
			set @id = 0        
			set @sale = 0        
			select top 1 @newidn = newidn, @id = id from @tempBrandWhile order by newidn desc        
			if @variance <> 0        
			begin        
				select @sale = sale from @temptable where id = @id
				/*
				if @variance > 0
				begin
					update @temptable set Sale = Sale - @variance      
					where id = @id
				end
				*/
				
				if @variance < 0      
				begin      
					--set @variance = @variance * -1
					--Commented on 26 Dec 2012 for @variance > @sale argument
					/*
					update @temptable set Sale =         
					case        
					when @variance > sale then @variance - sale         
					else sale - @variance        
					end        
					where id = @id      
					*/

					/*
					select @variance =         
					case        
						when @variance > @sale then @variance - @sale         
						else @sale - @variance        
					end
					*/
					update @temptable set Sale = sale - @variance where id = @id
					select @variance = @sale - @variance
				end
				/*      
				else      
				begin      
					update @temptable set Sale = Sale + @variance      
					where id = @id      
				end
				*/      
			end        
			delete from @tempBrandWhile where newidn = @newidn        
		end
		delete from @tempVariance where BrandOpeningID = @BrandOpeningID        
	end

	--select 'sachin', * from @temptable

declare  @tempcost table        
(        
Brandopeningid numeric(18,0),        
Stockin char(1),        
PegSize numeric(18,0),
ML numeric(18,0)
)        

insert into @tempcost (Brandopeningid,Stockin,PegSize, ML)         
select b.BrandOpeningID,c.StockIN,c.PegSize,c.ML from @temptable t        
join  tbl_BrandOpening b on t.BrandOpeningID=b.BrandOpeningID        
join  Tbl_CategorySizeLinkup c on c.CategorySizeLinkID=b.CategorySizeLinkUpID          

declare @tempconsumption table            
(            
BrandOpeningID numeric(18,0),             
Consumption numeric(18,0) default 0,            
MasterPurRateCost numeric(14,2) default 0,            
PurchaseRateCost numeric(14,2) default 0            
)        

--select * from @tempcost        
--select * from @temptable        

update temp        
set temp.PegSize = cost.PegSize,        
temp.Stockin = cost.Stockin,
temp.ML = cost.ML        
from @tempcost cost        
join @temptable temp on cost.Brandopeningid = temp.brandopeningid        

insert into @tempconsumption            
(BrandOpeningID, Consumption, MasterPurRateCost, PurchaseRateCost)          
select        
temp.BrandOpeningID,
sum(temp.Sale),
case
	when temp.costtype = 'B' then temp.MasterUnitBottleRate * (sum(temp.Sale)/temp.ML)
	else temp.MasterPurRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end)        	
end,
case
	when temp.costtype = 'B' then temp.PurchaseUnitBottleRate * (sum(temp.Sale)/temp.ML)
	else temp.PurchaseRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end)        	
end
from @temptable temp
--join @tempcost t on t.Brandopeningid =temp.brandopeningid        
group by temp.BrandOpeningID, temp.MasterPurRate, temp.PurchaseRate,temp.PegSize,temp.Stockin, temp.ML, temp.costtype, 
temp.MasterUnitBottleRate, temp.PurchaseUnitBottleRate

/*           
insert into @tempconsumption            
(BrandOpeningID, Consumption, MasterPurRateCost, PurchaseRateCost)          

select        
temp.BrandOpeningID,        
case            
when varn.Variance < 0 then sum(temp.Sale) + varn.Variance        
else sum(temp.Sale) - varn.Variance            
end,        

case            
when varn.Variance < 0 then temp.MasterPurRate*(sum(temp.Sale) + varn.Variance)            
else temp.MasterPurRate*(sum(temp.Sale) - varn.Variance)            
end,            
case            
when varn.Variance < 0 then temp.PurchaseRate*(sum(temp.Sale) + varn.Variance)            
else temp.PurchaseRate*(sum(temp.Sale) - varn.Variance)            
end        
--temp.MasterPurRate, temp.PurchaseRate, sum(temp.Sale), varn.Variance, sum(temp.Sale) - varn.Variance        
from @temptable temp        
join @tempVariance varn on temp.BrandOpeningID = varn.BrandOpeningID        
group by temp.BrandOpeningID, temp.MasterPurRate, temp.PurchaseRate, varn.Variance        
*/        

/*        
declare @tempconsumption table            
(            
BrandOpeningID numeric(18,0),             
Consumption numeric(18,0),            
MasterPurRateCost numeric(14,2),            
PurchaseRateCost numeric(14,2)            
)            
insert into @tempconsumption            
(BrandOpeningID, Consumption, MasterPurRateCost, PurchaseRateCost)            
select             
BrandOpeningID,             
case            
when Variance < 0 then Sale + Variance            
else Sale - Variance            
end,            
case       when Variance < 0 then MasterPurRate*(Sale + Variance)            
else MasterPurRate*(Sale - Variance)            
end,            
case            
when Variance < 0 then PurchaseRate*(Sale + Variance)            
else PurchaseRate*(Sale - Variance)            
end            
from @temptable        

select BrandOpeningID, sum(Consumption) as consumption, sum(MasterPurRateCost) as MasterRate, sum(PurchaseRateCost) as PurchaseRate from @tempconsumption             
group by BrandOpeningID            
*/        

select * from @tempconsumption          
-----------            
declare @tmptable table                              
(                  
LicenseID numeric(18,0),                           
BrandID numeric(18,0),                  
Brand varchar(50),                
[Size] varchar(50),                
BQty numeric(18,0),        
SQty numeric(18,0),        
Cost Numeric(18,0),            
--consumption numeric(18,0),            
--MasterRate numeric(14,2),            
-- PurchaseRate numeric(14,2)            
BrandOpeningID numeric(18,0),            
MasterRate numeric(14,2),            
AverageRate numeric(14,2)

)                   
/*        
insert into @tmptable(LicenseID,BrandID, Brand,[Size],Qty,Cost,BrandOpeningID,MasterRate)              
select csl.LicenseID,bh.BrandID,bh.BrandDesc as Brand,csl.Alias as [Size],        
convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) +'.'+ convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) as Qty,        
--sum(tc.Consumption) as Qty,        
sum(tc.PurchaseRateCost) as Cost,tc.BrandOpeningID,sum(MasterPurRateCost) as MasterRate            
from @tempconsumption tc            
--select sum(pd.BottleRate) as GrossCost from tbl_purchasedetail pd             
--join tbl_purchasedetail pd on tc.BrandOpeningID=pd.BrandOpeningID              
--join tbl_purchasehead ph on ph.PurchaseID=pd.PurchaseID              
join tbl_BrandOpening bo on bo.BrandOpeningID=tc.BrandOpeningID              
join tbl_BrandHead bh on bh.BrandID=bo.BrandID              
join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID              
where csl.LicenseID=@LicenseID              
group by csl.LicenseID,bh.BrandID,bh.BrandDesc,csl.Alias,tc.BrandOpeningID,bo.CategorySizeLinkUpID,tc.PurchaseRateCost --,pd.BottleQty,pd.BottleRate        

select * from @tmptable order by    Qty        
*/        

if @tag=1        
begin        
insert into @tmptable(LicenseID,BrandID,Brand,[Size],BQty,SQty,Cost,BrandOpeningID,MasterRate,AverageRate)          

select csl.LicenseID,bh.BrandID,bh.BrandDesc as Brand,csl.Alias as [Size],              
--convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) +'.'+ convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) as Qty,        
dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),        
dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),        
--sum(tc.Consumption) as Qty,            
sum(tc.PurchaseRateCost) as Cost,tc.BrandOpeningID,sum(MasterPurRateCost) as MasterRate,convert(numeric(14,2),avg(tc.PurchaseRateCost)) as AverageCost                  
from @tempconsumption tc                  

join tbl_BrandOpening bo on bo.BrandOpeningID=tc.BrandOpeningID                    
join tbl_BrandHead bh on bh.BrandID=bo.BrandID                    
join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID             

where csl.LicenseID=@LicenseID                    
group by csl.LicenseID,bh.BrandID,bh.BrandDesc,csl.Alias,tc.BrandOpeningID,bo.CategorySizeLinkUpID,tc.PurchaseRateCost        

select LicenseID,Brand,[Size],convert(varchar,BQty)+'.'+convert(varchar,SQTY) as Qty, Cost as FIFOCost,BrandOpeningID,MasterRate as MasterRateCost,    
convert(numeric(14,2),avg(Cost)) as AverageCost    
from @tmptable group by LicenseID,Brand, [Size],BrandOpeningID,BQty,SQTY,Cost,MasterRate     
end        


if @tag=2        
begin          
print 'sachin joglekar'        
insert into @tmptable        
(LicenseID,BrandID,Brand,[Size],BQty,SQty,Cost,BrandOpeningID,MasterRate,AverageRate)        

select        
csl.LicenseID,c.CategoryID,c.CategoryDesc as Brand,csl.Alias as [Size],              
--convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) +'.'+ convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) as Qty,              
dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),        
dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),        
sum(tc.PurchaseRateCost) as Cost,0,sum(MasterPurRateCost) as MasterRate,
convert(numeric(14,2),avg(tc.PurchaseRateCost)) as AverageCost 

from @tempconsumption tc        
join tbl_BrandOpening bo on bo.BrandOpeningID=tc.BrandOpeningID                    
--join tbl_BrandHead bh on bh.BrandID=bo.BrandID                    
join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID             
----Shiva     
join Tbl_Category c on c.categoryID=csl.CategoryID        
where csl.LicenseID=@LicenseID                    
group by csl.LicenseID,c.CategoryID,c.CategoryDesc,csl.Alias,bo.CategorySizeLinkUpID,tc.PurchaseRateCost        

--select * from @tmptable        
--select LicenseID,Brand as Category,[Size],sum(Qty),sum(Cost),BrandOpeningID,sum(MasterRate) from @tmptable        
--group by LicenseID,Brand,[Size]         
select LicenseID,Brand as Category,[Size],convert(varchar,sum(BQty))+'.'+convert(varchar,sum(Sqty)) as Qty,sum(Cost) as Cost,BrandOpeningID,    
sum(MasterRate) as MasterRate

,convert(numeric(14,2),avg(Cost)) as AverageCost    
from @tmptable        
group by LicenseID,Brand, [Size],BrandOpeningID        
end            

if @tag=3          
begin          
insert into @tmptable(LicenseID,BrandID,Brand,[Size],BQty,SQty,Cost,BrandOpeningID,MasterRate,AverageRate)          

select csl.LicenseID,sc.SubCategoryid,sc.SubCategoryName as Brand,csl.Alias as [Size],              
--convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) +'.'+ convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) as Qty,              
convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)),        
convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)),   
sum(tc.PurchaseRateCost) as Cost,tc.BrandOpeningID,sum(MasterPurRateCost) as MasterRate,
convert(numeric(14,2),avg(tc.PurchaseRateCost)) as AverageCost   

---on 5 nov 
--convert(numeric(14,2),avg(tc.PurchaseRateCost)) as AverageCost   
----                 
from @tempconsumption tc                  

join tbl_BrandOpening bo on bo.BrandOpeningID=tc.BrandOpeningID                    
join tbl_BrandHead bh on bh.BrandID=bo.BrandID                    
join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID             
----Shiva            
join Tbl_Category c on c.categoryID=csl.CategoryID            
join tbl_subCategorymst sc on sc.subcategoryID=bh.subCategoryID            
-------END Shiva      

where csl.LicenseID=@LicenseID                    
group by csl.LicenseID,sc.SubCategoryid,sc.SubCategoryName,csl.Alias,tc.BrandOpeningID,bo.CategorySizeLinkUpID,tc.PurchaseRateCost        

select LicenseID,Brand as SubCategoryName,[Size],BQty,SQty,Cost,BrandOpeningID,MasterRate from @tmptable        
end         
--select * from @tmptable


-- select @TotalCost=isnull(sum(Cost),0) from @tmptable             
--
-- select @MasterRateCost=isnull(sum(MasterRate),0) from @tmptable             
--
-- select @AverageCost1=isnull(sum(Averagerate),0) from @tmptable             

declare @FinalShowAllCost table
(
totalcost numeric(18,0),
MastreRateCost numeric(18,0),
AveargeCost numeric(18,0)
)
insert into @FinalShowAllCost (totalcost,MastreRateCost,AveargeCost) 
select isnull(sum(Cost),0),isnull(sum(MasterRate),0),isnull(sum(Averagerate),0) from  @tmptable
select * from @FinalShowAllCost    
*/

--sale quantity        
declare @temptable table            
(         
	id numeric(18,0) identity(1,1),
	BrandOpeningID numeric(18,0),
	MasterPurRate numeric(14,2),
	PurchaseRate numeric(14,2),
	MasterUnitBottleRate numeric(14,2),
	PurchaseUnitBottleRate numeric(14,2),
	Sale numeric(18,0)
)
insert into @temptable
(BrandOpeningID, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate, Sale)        
Select        
sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0), isnull(sd.MasterUnitBottleRate,0), isnull(sd.PurchaseUnitBottleRate,0), sum(sd.UnitQty)
from tbl_saledetail sd            
join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
join tbl_SaleHead sh on sh.billid=sd.billid         
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
where convert(smalldatetime,convert(varchar,sh.billdate,102))     
between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))
and sh.licenseid = @licenseid    
group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0), isnull(sd.MasterUnitBottleRate,0), isnull(sd.PurchaseUnitBottleRate,0)

union all

Select        
sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0), isnull(sd.MasterUnitBottleRate,0), isnull(sd.PurchaseUnitBottleRate,0), sum(sd.UnitQty)
from tbl_salecocktaildetail sd        
join tbl_salecocktailhead hd on sd.CocktailSaleId = hd.CocktailSaleId        
join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
join tbl_SaleHead sh on sh.billid=hd.billid         
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
where convert(smalldatetime,convert(varchar,sh.billdate,102))     
between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))
and sh.licenseid = @licenseid    
group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0), isnull(sd.MasterUnitBottleRate,0), isnull(sd.PurchaseUnitBottleRate,0)

select 'sachin'

select bo.licenseid as licenseid, bo.BrandDesc as Brand, bo.alias as [Size], 
convert(varchar,dbo.Fun_CalcBottlefromspeg(temp.sale, bo.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(temp.sale, bo.CategorySizeLinkUpID)) as Qty,
(dbo.Fun_CalcBottlefromspeg(temp.sale, bo.CategorySizeLinkUpID) * temp.PurchaseUnitBottleRate)+        
(dbo.Fun_Calcspegfromspeg(temp.sale, bo.CategorySizeLinkUpID) * temp.PurchaseRate) as FIFOCost,
bo.brandopeningid, 
(dbo.Fun_CalcBottlefromspeg(temp.sale, bo.CategorySizeLinkUpID) * temp.MasterUnitBottleRate)+      
(dbo.Fun_Calcspegfromspeg(temp.sale, bo.CategorySizeLinkUpID) * temp.MasterPurRate) as MasterRateCost,
convert(numeric (14,2),
(dbo.Fun_CalcBottlefromspeg(temp.sale, bo.CategorySizeLinkUpID) * ((temp.MasterUnitBottleRate + temp.PurchaseUnitBottleRate)/2))+        
(dbo.Fun_Calcspegfromspeg(temp.sale, bo.CategorySizeLinkUpID) * ((temp.PurchaseRate + temp.MasterPurRate)/2))) as AverageCost
into #tempCost
from @temptable temp
join vw_brandopeningdetails bo on bo.brandopeningid = temp.brandopeningid and bo.licenseid = @licenseid
order by categorydesc, branddesc

select * from #tempCost

select isnull(sum(FIFOCost),0) as totalcost, isnull(sum(MasterRateCost),0) as MastreRateCost, isnull(sum(AverageCost),0) as AveargeCost from #tempCost

end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'spr_FetchVarianceForSettalment') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE spr_FetchVarianceForSettalment
GO

CREATE procedure spr_FetchVarianceForSettalment     
@LicenseId numeric(18,0),    
@VarDate datetime    
as    
begin    
--declare @Temp table    
--(    
--BrandOpeningID numeric(18,0),    
--Bottle numeric(18,0),    
--speg numeric(18,0)    
--)      
--insert into @temp    
--select v.BrandOpeningID,v.Bottle,v.Speg+v.Glass 
--from vw_FetchVarianceTable v    
--where v.licenseId=@LicenseId and v.VarDate =@VarDate 
--group by v.BrandOpeningID,v.Bottle,v.Speg+v.Glass
-- declare @FinalTable table    
-- (    
-- BrandOpeningID numeric(18,0),    
-- Bottle numeric(18,0),    
-- speg numeric(18,0),    
-- BrandID numeric(18,0),    
-- alias varchar(50)
-- )   
--
--insert into @FinalTable    
--select t.BrandOpeningID,t.Bottle,abs(t.speg),bh.brandid,c.alias from @temp t    
--join tbl_BrandOpening bo on bo.BrandOpeningID=t.BrandOpeningID     
--join tbl_Brandhead bh on bh.BrandID=bo.BrandID     
--join Tbl_CategorySizeLinkup c on c.CategorySizeLinkID=bo.CategorySizeLinkUpID     
--where t.bottle <>-99999  

 declare @tempVar table    
 (    
 BrandOpeningID numeric(18,0),    
 Bottle numeric(18,0),    
 speg numeric(18,0)
 )
insert into @tempVar
(BrandOpeningID, Bottle, speg)
select 
BrandOpeningID, v.Bottle, v.sPeg
from vw_FetchVarianceTable v
where v.licenseId=@LicenseId and convert(smalldatetime,convert(varchar,v.VarDate,102)) =convert(smalldatetime,convert(varchar,@VarDate ,102))

delete from @tempVar where (Bottle is null and sPeg is null) or (Bottle >= 0 and sPeg >= 0)

--select * from @tempVar

select op.BrandOpeningID as brandid ,bh.BrandDesc as Brand,op.CategorySizeLinkUpID,lnk.alias as Size ,0 as taxtypeid,'' as taxtype ,0 as taxper,
abs(t.speg) as speg,isnull(bsr.SpegRate,0)as SpegRate,0 as lPegQty,isNull(bsr.LpegRate,0) as LpegRate,    
abs(t.Bottle) as BottleQty,op.sRate as BottleRate, (t.speg*bsr.SpegRate)+(0*bsr.LpegRate)+(t.Bottle*op.sRate) as Amount, 
(t.speg*bsr.SpegRate)+(0*bsr.LpegRate)+(t.Bottle*op.sRate) as Total, 0 as LpegPermitQty, 0 as SpegPermitQty, 0 as BottlePermitQty,
'' as Stock    
from tbl_brandopening op      
join @tempVar t on t.BrandOpeningID=op.BrandOpeningID     
join Tbl_CategorySizeLinkup lnk on op.CategorySizeLinkUpID = lnk.CategorySizeLinkID              
join tbl_Size s on s.sizeid = lnk.sizeid               
join tbl_BrandDet dt on dt.Brandid = op.brandid and dt.Sizeid = s.sizeid        
join tbl_brandhead bh on bh.brandid = dt.brandid        
left outer join tbl_BrandSaleRate bsr on bsr.BrandID=op.BrandId and bsr.licenseid=op.licenseid 
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_Qv_FetchVarianceDatewise') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_Qv_FetchVarianceDatewise
GO

CREATE procedure Spr_Qv_FetchVarianceDatewise
@month int,
@year int,
@fromDate smalldatetime = '1-Jan-1900',
@todate smalldatetime = '1-Jan-1900'
as  
begin  

declare @strSelectVariance varchar(max)
declare @strWhereVariance varchar(max)

declare @strSelectControls varchar(max)
declare @strWhereControls varchar(max)

set @strSelectVariance ='select l.LicenseDesc,VarDate,vw.LicenseID  from vw_fetchdistinctVariance vw join Tbl_License l  
on vw.LicenseID=l.LicenseID'
	if @month = 0 and @year = 0
		begin
		set @strWhereVariance = ' where vardate between '''+convert(varchar,@fromDate) +''' and ''' + convert(varchar,@todate)+ ''''		
		end
	else
		begin
		set @strWhereVariance = ' where datepart(month,VarDate)=' + convert(varchar,@month) + ' and datepart(year,VarDate)='+convert(varchar,@year)
		end
set @strSelectControls = 'select l.LicenseDesc,ControlDate as VarDate from tbl_ControlsHead ch join Tbl_License l  on ch.LicenseID=l.LicenseID'  

	if @month = 0 and @year = 0
		begin
		set @strWhereControls = ' where ControlDate between'''+convert(varchar,@fromDate) +'''and ''' + convert(varchar,@todate) +''''
		end
	else
		begin
		set @strWhereControls = ' where datepart(month,ControlDate-1)=' + convert(varchar,@month) + ' and datepart(year,ControlDate-1)='+convert(varchar,@year)
		end
	exec (@strSelectVariance + @strWhereVariance)
	exec (@strSelectControls + @strWhereControls)
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[spr_SaveBrandOpening]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[spr_SaveBrandOpening]
GO

CREATE procedure [dbo].[spr_SaveBrandOpening]    
@BrandID  numeric(18,0),      
@LicenseID  numeric(18,0),      
@BrandOpeningXML XML,    
@SpegRate numeric(14,3),    
@LpegRate numeric(14,3),      
@Username   varchar(100),    
@IsBaseQty bit = 0,    
@Outbit   bit output,      
@OutMsg   varchar(100) output      
as      
begin      
--Begin Try      
 --Begin Tran      
  Declare @hDoc int      
  EXEC sp_xml_preparedocument @hDoc Output, @BrandOpeningXML      
 declare  @temptable table      
 (      
    categorysizelinkupid numeric(18,0),      
    sRate numeric(14,2),      
    OpeningQty numeric(18,0),      
    OpSpQty numeric (18,0),      
    BaseQty numeric(18,0),      
    OrdNo numeric(18,0),
	ReorderLevel numeric(14,2),   
	OptimumLevel numeric(14,2)      
   )      
 insert into @temptable      
 (categorysizelinkupid,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo,ReorderLevel,OptimumLevel)      
 select categorysizelinkupid ,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo,ReorderLevel,OptimumLevel     
 from openXML(@hdoc,'/Master/BrandOpening/BrandOpeningDet') with      
  (              
    categorysizelinkupid numeric(18,0),                        
    sRate numeric(14,2),                  
    OpeningQty numeric(18,0),                  
    OpSpQty numeric (18,0),                  
    BaseQty numeric(18,0),                  
    OrdNo numeric(18,0),
	ReorderLevel numeric(14,2),   
	OptimumLevel numeric(14,2)   
  )              
         
 declare  @temptablev2 table              
 (              
  categorysizelinkupid numeric(18,0),                        
  sRate numeric(14,2),                  
  OpeningQty numeric(18,0),                  
  OpSpQty numeric (18,0),                  
  BaseQty numeric(18,0),                  
  OrdNo numeric(18,0),      
  Categoryid numeric(18,0),      
  SizeId numeric(18,0),
  ReorderLevel numeric(14,2),   
  OptimumLevel numeric(14,2)      
 )      
 insert into @temptablev2              
 (categorysizelinkupid,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo,Categoryid,SizeId,ReorderLevel,OptimumLevel)      
 Select      
 temp.categorysizelinkupid,temp.sRate,temp.OpeningQty,temp.OpSpQty,temp.BaseQty,temp.OrdNo,      
 case                       
  when c.CategoryDesc like '%BEER%'   then 1                        
  when c.CategoryDesc like '%wine%'   then 2                      
  when c.CategoryDesc like '%SPIRIT%' then 3                      
 end,      
 --lnk.Categoryid      
 lnk.SizeId ,temp.ReorderLevel,temp.OptimumLevel    
 From @temptable temp      
 join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = temp.categorysizelinkupid      
 join Tbl_Category c on lnk.CategoryID=c.CategoryID      
       
--select * from      @temptable      
          
 if @IsBaseQty = 0    
 begin    
  
  insert into tbl_BrandOpening                            
  (BrandID,LicenseID,CategorySizeLinkUpID,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo,ReorderLevel,OptimumLevel, Oprc,Dtc,PurchaseUnitQty,NonMovingQty,PurchaseUnitRate,MasterUnitBottleRate)      
  Select      
  @BrandID,@LicenseID,temp.categorysizelinkupid, temp.sRate,temp.OpeningQty,temp.OpSpQty,temp.BaseQty,temp.OrdNo,temp.ReorderLevel,temp.OptimumLevel, @Username, getdate(),      
  dbo.Fun_Calcunits(temp.categorysizelinkupid, temp.OpeningQty, temp.OpSpQty),    
  dbo.Fun_Calcunits(temp.categorysizelinkupid, temp.OpeningQty, temp.OpSpQty),        
  bh.PurRatePeg,
  det.PurchaseRate
  --case      
  --when temp.Categoryid = 5 then det.PurchaseRate    
  --when temp.Categoryid = 6 then det.PurchaseRate    
  --when temp.Categoryid = 7 then det.PurchaseRate    
  --when temp.Categoryid = 9 then det.PurchaseRate    
  --else bh.PurRatePeg    
  --end      
  From @temptablev2 temp      
  left outer join tbl_BrandOpening bo on bo.categorysizelinkupid = temp.categorysizelinkupid and                             
  bo.LicenseID = @LicenseID and bo.BrandID = @BrandID    
  left outer join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID    
  join tbl_BrandHead bh on bh.brandid = @BrandID      
  join tbl_BrandDet det on det.brandid = bh.brandid and det.sizeid = temp.sizeid      
  where bo.categorysizelinkupid is null      
    
    
    
  Update bo  
  Set  bo.sRate=temp.sRate,bo.OpeningQty=temp.OpeningQty,bo.OpSpQty=temp.OpSpQty,bo.BaseQty=temp.BaseQty,bo.OrdNo=temp.OrdNo,bo.ReorderLevel=temp.ReorderLevel,bo.OptimumLevel=temp.OptimumLevel,
	bo.oprm=@username,bo.dtm=getdate(),      
  bo.PurchaseUnitQty = dbo.Fun_Calcunits(bo.categorysizelinkupid, temp.OpeningQty, temp.OpSpQty),    
  bo.NonMovingQty = dbo.Fun_Calcunits(bo.categorysizelinkupid, temp.OpeningQty, temp.OpSpQty),     
  bo.PurchaseUnitRate = bh.PurRatePeg, bo.MasterUnitBottleRate = det.PurchaseRate
  --bo.PurchaseUnitRate = case      
  --when temp.Categoryid = 5 then det.PurchaseRate    
  --when temp.Categoryid = 6 then det.PurchaseRate    
  --when temp.Categoryid = 7 then det.PurchaseRate    
  --when temp.Categoryid = 9 then det.PurchaseRate    
  --else bh.PurRatePeg     
  --end    
  From @temptablev2 temp      
  join tbl_BrandOpening bo on bo.categorysizelinkupid = temp.categorysizelinkupid    
  join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID      
  join tbl_BrandHead bh on bh.brandid = bo.brandid       
  join tbl_BrandDet det on det.brandid = bh.brandid and det.sizeid = temp.sizeid                           
  where bo.LicenseID = @LicenseID and bo.BrandID = @BrandID              
    
  --delete bo                            
  --From tbl_BrandOpening bo                            
  --left outer join @temptable temp on bo.categorysizelinkupid = temp.categorysizelinkupid                               
  --where bo.LicenseID = @LicenseID and temp.categorysizelinkupid is null and bo.BrandID = @BrandID              
  set @Outbit=1                    
  set @OutMsg='Saved Successfully'             
 end    
 else    
 begin    
    
  Update bo    
  set bo.sRate=temp.sRate, bo.BaseQty = temp.BaseQty,     
  bo.OrdNo = temp.OrdNo,bo.OptimumLevel=temp.OptimumLevel,bo.ReorderLevel=temp.ReorderLevel 
  From @temptablev2 temp      
  join tbl_BrandOpening bo on bo.categorysizelinkupid = temp.categorysizelinkupid    
  where bo.LicenseID = @LicenseID and bo.BrandID = @BrandID    
  set @Outbit=1                    
  set @OutMsg='Updated Successfully'    
    
 end    
       
   if exists(select BrandSaleRateID from tbl_BrandSaleRate where brandid=@BrandID and LicenseID = @LicenseID)
    begin    
       update tbl_BrandSaleRate set SpegRate=@SpegRate,LpegRate=@LpegRate,Oprm=@username,Dtm=getdate()     
          where brandid=@BrandID and LicenseID = @LicenseID    
    end    
   else    
	begin    
       insert into tbl_BrandSaleRate(brandid,LicenseID,SpegRate,LpegRate,Oprc,Dtc) 
		values (@brandid,@LicenseID,@SpegRate,@LpegRate,@username,getdate())    
    end    
      
 --Commit             
--End Try            
--Begin Catch            
 set @Outbit=1                    
   set @OutMsg='Saved successfully'             
 --rollback            
--End Catch
                   
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Dash_PotentialCosting]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Dash_PotentialCosting]
GO

CREATE procedure [dbo].[Spr_Dash_PotentialCosting]
@LicenseID numeric(18,0),        
@ControlHeadID numeric(18,0),       
--@FromDate DateTime,      
--@ToDate DateTime,

@CategoryID numeric(18,0),
@SubCategoryID numeric(18,0),
@IsExport bit = 0  
as          
begin  
declare @FromDate DateTime      
declare @ToDate DateTime

select @FromDate=FromDate,@ToDate=ToDate from
	Tbl_ControlsHead where ControlHeadID = @ControlHeadID    
        
declare @StrSelect varchar(max)
set @StrSelect=''


declare @date smalldatetime        
select @date = VarDate  from vw_fetchdistinctVariance where licenseid = @LicenseID order by VarDate desc        

declare @temptable table        
(     
	id numeric(18,0)  identity(1,1),     
	BrandOpeningID numeric(18,0),        
	MasterPurRate numeric(14,2),        
	PurchaseRate numeric(14,2),
	MasterUnitBottleRate numeric(14,2),
	PurchaseUnitBottleRate numeric(14,2),        
	Sale  numeric(18,0),    
	Stockin char(1),    
	PegSize numeric(18,0),
	CostType char(1),
	ML numeric(18,0),
	NoOfSpeg numeric(18,0)    
)        

insert into @temptable(BrandOpeningID, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate, Sale, CostType, ML, NoOfSpeg)             
	Select        
	sd.brandopeningid,            
	isnull(sd.MasterPurRate,0),            
	isnull(sd.PurchaseRate,0),
	isnull(sd.MasterUnitBottleRate,0),            
	isnull(sd.PurchaseUnitBottleRate,0),        
	sum(sd.UnitQty),
	sd.CostType,
	lnk.ML,
	lnk.NoOfSpeg
	--Case        
	--when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))        
	--else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))        
	--End        
	from tbl_saledetail sd            
	join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
	join tbl_SaleHead sh on sh.billid=sd.billid         
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
	--where sh.billdate between @FromDate and @ToDate    
	where convert(smalldatetime,convert(varchar,sh.billdate,102))     
	between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))
	group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0), isnull(sd.MasterUnitBottleRate,0), isnull(sd.PurchaseUnitBottleRate,0), 
	sd.CostType, lnk.ML, lnk.NoOfSpeg
	    
	union all

	Select        
	sd.brandopeningid,            
	isnull(sd.MasterPurRate,0),            
	isnull(sd.PurchaseRate,0),
	0,            
	0,        
	sum(sd.UnitQty),
	null,
	null,
	null
	--Case        
	--when lower(lnk.StockIN) = 'm' then dbo.Fun_CalcunitsForFLR4(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))        
	--else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))        
	--End
	from tbl_salecocktaildetail sd        
	join tbl_salecocktailhead hd on sd.CocktailSaleId = hd.CocktailSaleId        
	join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
	join tbl_SaleHead sh on sh.billid=hd.billid         
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
	where convert(smalldatetime,convert(varchar,sh.billdate,102))     
	between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))    
	group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0)

/*
insert into @temptable(id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale)
Select    
sd.BilldetailId,    
sd.brandopeningid,        
isnull(sd.MasterPurRate,0),        
isnull(sd.PurchaseRate,0),    
Case    
 when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))    
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))    
End    
from tbl_saledetail sd        
join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid        
join tbl_SaleHead sh on sh.billid=sd.billid     
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID    
where 
convert(smalldatetime,convert(varchar,sh.billdate,102)) 
between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102)) 

and sh.Licenseid= @LicenseID  
union all    
Select    
sd.CocktailSaleDtlId,    
sd.brandopeningid,        
isnull(sd.MasterPurRate,0),        
isnull(sd.PurchaseRate,0),    
Case    
 when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))    
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))    
End    
from tbl_salecocktaildetail sd    
join tbl_salecocktailhead hd on sd.CocktailSaleId = hd.CocktailSaleId    
join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid        
join tbl_SaleHead sh on sh.billid=hd.billid     
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID    
where  
convert(smalldatetime,convert(varchar,sh.billdate,102)) 
between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))    and sh.Licenseid= @LicenseID   

*/
  
declare @tempVariance table        
(        
 BrandOpeningID numeric(18,0),        
 Variance numeric(18,0)        
)    
insert into @tempVariance(BrandOpeningID, Variance)        
Select         
varn.brandopeningid,    
Case    
 when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)))    
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)))    
end        
from vw_FetchVarianceTable varn    
join tbl_brandopening bo on varn.brandopeningid = bo.brandopeningid       
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID    
where  varn.VarDate = @date and varn.licenseid = @LicenseID        

--declare @id numeric(18,0)    
--declare @BrandOpeningID numeric(18,0)    
--declare @variance numeric(18,0)    

--while(select count(BrandOpeningID) from @tempVariance) > 0    
--begin    
     
-- declare @newidn numeric(18,0)    
 
-- declare @sale numeric(18,0)    
    
-- select top 1 @BrandOpeningID = BrandOpeningID, @variance = variance from @tempVariance order by BrandOpeningID    
    
-- declare @tempBrandWhile table    
-- (    newidn numeric(18,0) identity,    
--  id numeric(18,0),        
--  BrandOpeningID numeric(18,0),        
--  MasterPurRate numeric(14,2) default 0,        
--  PurchaseRate numeric(14,2) default 0,        
-- Sale  numeric(18,0)    
-- )      
-- insert into @tempBrandWhile(id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale)    
-- select id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale from @temptable where BrandOpeningID = @BrandOpeningID    
 
  
-- while(select count(*) from @tempBrandWhile) > 0    
-- begin    
--  set @newidn = 0    
--  set @id = 0    
--  set @sale = 0    
--  select top 1 @newidn = newidn, @id = id from @tempBrandWhile order by newidn desc    
--  if @variance <> 0    
--  begin    
--   select @sale = sale from @temptable where id = @id  
    
-- if @variance < 0  
-- begin  
--  set @variance = @variance * -1  
  
--  update @temptable set Sale =     
--  case    
--   when @variance > sale then @variance - sale     
--   else sale - @variance    
--  end    
--  where id = @id  
     
--  select @variance =     
--  case    
--   when @variance > @sale then @variance - @sale     
--   else @sale - @variance    
--  end  
-- end  
-- else  
-- begin  
--  update @temptable set Sale = Sale + @variance  
--  where id = @id  
-- end  
--  end    
--  delete from @tempBrandWhile where newidn = @newidn    
-- end    
     
-- delete from @tempVariance where BrandOpeningID = @BrandOpeningID    
--end    
 --select * from @temptable   

declare  @tempcost table    
(    
Brandopeningid numeric(18,0),    
Stockin char(1),    
PegSize numeric(18,0)    
)    
    
insert into @tempcost (Brandopeningid,Stockin,PegSize)     
select b.BrandOpeningID,c.StockIN,c.PegSize from @temptable t    
join  tbl_BrandOpening b on t.BrandOpeningID=b.BrandOpeningID    
join  Tbl_CategorySizeLinkup c on c.CategorySizeLinkID=b.CategorySizeLinkUpID      
    
declare @tempconsumption table        
(        
 BrandOpeningID numeric(18,0),         
 Consumption numeric(18,0) default 0,        
 MasterPurRateCost numeric(14,2) default 0,        
 PurchaseRateCost numeric(14,2) default 0        
)    
 
update temp    
set temp.PegSize = cost.PegSize,    
temp.Stockin = cost.Stockin    
from @tempcost cost    
join @temptable temp on cost.Brandopeningid = temp.brandopeningid    
    
insert into @tempconsumption        
(BrandOpeningID, Consumption, MasterPurRateCost, PurchaseRateCost)      
select    
temp.BrandOpeningID,    
sum(temp.Sale),    
--temp.MasterPurRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end ),    
--temp.PurchaseRate *  (case when lower(temp.Stockin)='m' then   ((sum(temp.Sale))/temp.PegSize) else  (sum(temp.Sale)) end)     
case
	when temp.costtype = 'B' then temp.MasterUnitBottleRate * (sum(temp.Sale)/temp.NoOfSpeg)
	else temp.MasterPurRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end)        	
end,
case
	when temp.costtype = 'B' then temp.PurchaseUnitBottleRate * (sum(temp.Sale)/temp.NoOfSpeg)
	else temp.PurchaseRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end)        	
end from @temptable temp    

group by temp.BrandOpeningID, temp.MasterPurRate, temp.PurchaseRate,temp.PegSize,temp.Stockin, temp.NoOfSpeg, temp.costtype, 
temp.MasterUnitBottleRate, temp.PurchaseUnitBottleRate   
 
--select * from @tempconsumption
---- 

 
-----------        
 create table #tmptable                           
 (              
  LicenseID numeric(18,0),                       
  BrandID numeric(18,0),              
  Brand varchar(50),            
[Size] varchar(50),            
  BQty numeric(18,0),    
SQty numeric(18,0),    
  Cost Numeric(18,0),        
        
BrandOpeningID numeric(18,0),        
MasterRate numeric(14,2),        
   Units numeric(18,0)          
 )               
  
insert into #tmptable(LicenseID,BrandID,Brand,[Size],BQty,SQty,Cost,BrandOpeningID,MasterRate,Units)      
             
 select csl.LicenseID,bh.BrandID,bh.BrandDesc as Brand,csl.Alias as [Size],          
 --convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) +'.'+ convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) as Qty,    
dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),    
dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),    
--sum(tc.Consumption) as Qty,        
 sum(tc.PurchaseRateCost) as Cost,tc.BrandOpeningID,sum(MasterPurRateCost) as MasterRate,
   sum(tc.Consumption)        
 from @tempconsumption tc     
    
 join tbl_BrandOpening bo on bo.BrandOpeningID=tc.BrandOpeningID                
 join tbl_BrandHead bh on bh.BrandID=bo.BrandID                
 join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID         
    
where csl.LicenseID=@LicenseID      
group by csl.LicenseID,bh.BrandID,bh.BrandDesc,csl.Alias,tc.BrandOpeningID,bo.CategorySizeLinkUpID,tc.PurchaseRateCost    
    if @IsExport = 1
     begin
         set @strSelect=''
			set @strSelect ='select bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
			convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units),
			 bo.CategorySizeLinkUpID)) as Quantity,
			sum(tmp.cost) as cost,c.categorydesc as Category,isnull(sub.SubCategoryName,'''') as SubCategory
			from #tmptable tmp
			join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
			join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
			join tbl_brandhead bh on bh.brandid=bo.brandid
			join tbl_category c on c.categoryid=bh.categoryid
			left outer join tbl_Subcategorymst sub on sub.categoryid=c.categoryid and bh.subcategoryid=sub.subcategoryid
			group by bh.BrandID,bh.BrandDesc,lnk.alias,tmp.units,bo.CategorySizeLinkUpID,bh.categoryid,c.categorydesc,sub.subcategoryid,sub.SubCategoryName'
     end
     else
     begin

	if  @Categoryid = 0
		begin
			set @StrSelect= 'select bh.categoryid,c.categorydesc+''(''+lnk.alias+'')'' as Category,
			convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units), bo.CategorySizeLinkUpID)) as Quantity,
			sum(tmp.cost) as cost
			from #tmptable tmp
			join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
			join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
			join tbl_brandhead bh on bh.brandid=bo.brandid
			join tbl_category c on c.categoryid=bh.categoryid
			group by bh.categoryid,c.categorydesc,lnk.alias,tmp.units,bo.CategorySizeLinkUpID'
		end
	else if  @SubCategoryid = 0
		begin
		    set @strSelect=''
			set @strSelect ='select sub.subcategoryid,sub.SubCategoryName+''(''+lnk.alias+'')'' as SubCategory,
			convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units), bo.CategorySizeLinkUpID)) as Quantity,
			sum(tmp.cost) as cost
			from #tmptable tmp
			join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
			join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
			join tbl_brandhead bh on bh.brandid=bo.brandid
			join tbl_category c on c.categoryid=bh.categoryid
			join tbl_Subcategorymst sub on sub.categoryid=c.categoryid  and bh.subcategoryid=sub.subcategoryid
			where c.categoryid='+convert(varchar, @Categoryid) +'
			group by sub.subcategoryid,sub.SubCategoryName,lnk.alias,tmp.units,bo.CategorySizeLinkUpID'
		end
    else
        begin
		    set @strSelect=''
			set @strSelect ='select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
			convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units), bo.CategorySizeLinkUpID)) as Quantity,
			sum(tmp.cost) as cost
			from #tmptable tmp
			join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
			join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
			join tbl_brandhead bh on bh.brandid=bo.brandid
			join tbl_category c on c.categoryid=bh.categoryid
			join tbl_Subcategorymst sub on sub.categoryid=c.categoryid  and bh.subcategoryid=sub.subcategoryid
			where c.categoryid='+convert(varchar, @Categoryid) +' and sub.subcategoryid='+convert(varchar, @SubCategoryid) +'
			group by bh.BrandID,bh.BrandDesc,lnk.alias,tmp.units,bo.CategorySizeLinkUpID'
		end
		end
 print @StrSelect

  exec (@StrSelect )
  drop table #tmptable
end
go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Dash_QCStep1Report]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Dash_QCStep1Report]
GO

CREATE procedure [dbo].[Spr_Dash_QCStep1Report]
@LicenseID numeric(18,0), 
@ControlHeadID numeric(18,0),       
--@FromDate DateTime,      
--@ToDate DateTime,
@CategoryID numeric(18,0),
@SubCategoryID numeric(18,0),
@IsExport bit=0
as          
begin   
declare @FromDate DateTime      
declare @ToDate DateTime

select @FromDate=FromDate,@ToDate=ToDate from
	Tbl_ControlsHead where ControlHeadID = @ControlHeadID    
       
declare @StrSelect varchar(max)
set @StrSelect=''


declare @date smalldatetime        
select @date = VarDate  from vw_fetchdistinctVariance where licenseid = @LicenseID order by VarDate desc        

declare @temptable table        
(     
	id numeric(18,0)  identity(1,1),     
	BrandOpeningID numeric(18,0),        
	MasterPurRate numeric(14,2),        
	PurchaseRate numeric(14,2),
	MasterUnitBottleRate numeric(14,2),
	PurchaseUnitBottleRate numeric(14,2),        
	Sale  numeric(18,0),    
	Stockin char(1),    
	PegSize numeric(18,0),
	CostType char(1),
	ML numeric(18,0),
	NoOfSpeg numeric(18,0)
)        

insert into @temptable(BrandOpeningID, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate, Sale, CostType, ML, NoOfSpeg)        
	Select        
	sd.brandopeningid,            
	isnull(sd.MasterPurRate,0),            
	isnull(sd.PurchaseRate,0),
	isnull(sd.MasterUnitBottleRate,0),            
	isnull(sd.PurchaseUnitBottleRate,0),        
	sum(sd.UnitQty),
	sd.CostType,
	lnk.ML,
	lnk.NoOfSpeg
	--Case        
	--when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))        
	--else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))        
	--End        
	from tbl_saledetail sd            
	join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
	join tbl_SaleHead sh on sh.billid=sd.billid         
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
	--where sh.billdate between @FromDate and @ToDate    
	where convert(smalldatetime,convert(varchar,sh.billdate,102))     
	between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))
	group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0), isnull(sd.MasterUnitBottleRate,0), isnull(sd.PurchaseUnitBottleRate,0), 
	sd.CostType , lnk.ML, lnk.NoOfSpeg
	    
	union all

	Select        
	sd.brandopeningid,            
	isnull(sd.MasterPurRate,0),            
	isnull(sd.PurchaseRate,0),
	0,            
	0,        
	sum(sd.UnitQty),
	null,
	null,
	null
	--Case        
	--when lower(lnk.StockIN) = 'm' then dbo.Fun_CalcunitsForFLR4(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))        
	--else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))        
	--End
	from tbl_salecocktaildetail sd        
	join tbl_salecocktailhead hd on sd.CocktailSaleId = hd.CocktailSaleId        
	join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid            
	join tbl_SaleHead sh on sh.billid=hd.billid         
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID        
	where convert(smalldatetime,convert(varchar,sh.billdate,102))     
	between convert(smalldatetime,convert(varchar,@FromDate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102))    
	group by sd.brandopeningid, isnull(sd.MasterPurRate,0), isnull(sd.PurchaseRate,0)

/*
declare @temptable table        
(     
 id numeric(18,0),        
 BrandOpeningID numeric(18,0),        
 MasterPurRate numeric(14,2),        
 PurchaseRate numeric(14,2),        
 Sale  numeric(18,0),    
Stockin char(1),    
PegSize numeric(18,0)    
)        
insert into @temptable(id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale)    
Select    
sd.BilldetailId,    
sd.brandopeningid,        
isnull(sd.MasterPurRate,0),        
isnull(sd.PurchaseRate,0),    
Case  
 when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))    
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(sd.BottleQty,0), isnull(sd.Speg,0)+(isnull(sd.Lpeg,0)*2))    
End    
from tbl_saledetail sd        
join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid        
join tbl_SaleHead sh on sh.billid=sd.billid     
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID    
where convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@FromDate,102))  and convert(smalldatetime,convert(varchar,@ToDate,102))  and sh.Licenseid= @LicenseID  
union all    
Select    
sd.CocktailSaleDtlId,    
sd.brandopeningid,        
isnull(sd.MasterPurRate,0),        
isnull(sd.PurchaseRate,0),    
Case    
 when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))    
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, 0, isnull(sd.Speg,0))    
End    
from tbl_salecocktaildetail sd    
join tbl_salecocktailhead hd on sd.CocktailSaleId = hd.CocktailSaleId    
join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid        
join tbl_SaleHead sh on sh.billid=hd.billid     
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID    
where convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@FromDate,102))  and convert(smalldatetime,convert(varchar,@ToDate,102))  and sh.Licenseid= @LicenseID   
  */
declare @tempVariance table        
(        
 BrandOpeningID numeric(18,0),        
 Variance numeric(18,0)        
)    
insert into @tempVariance(BrandOpeningID, Variance)        
Select         
varn.brandopeningid,    
Case    
 when lower(lnk.StockIN) = 'm' then dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)))    
 else dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, isnull(varn.Bottle,0), isnull(varn.Speg,0)+(isnull(varn.glass,0)))    
end        
from vw_FetchVarianceTable varn    
join tbl_brandopening bo on varn.brandopeningid = bo.brandopeningid       
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID    
where varn.VarDate = @date and varn.licenseid = @LicenseID        

declare @id numeric(18,0)    
declare @BrandOpeningID numeric(18,0)    
declare @variance numeric(18,0)    

declare @tempBrandWhile table    
(    
	newidn numeric(18,0) identity,    
	id numeric(18,0),        
	BrandOpeningID numeric(18,0),        
	MasterPurRate numeric(14,2) default 0,        
	PurchaseRate numeric(14,2) default 0,        
	Sale  numeric(18,0)    
)

while(select count(BrandOpeningID) from @tempVariance) > 0    
begin    

	declare @newidn numeric(18,0)
	declare @sale numeric(18,0)
	select top 1 @BrandOpeningID = BrandOpeningID, @variance = variance from @tempVariance order by BrandOpeningID
	      
	insert into @tempBrandWhile(id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale)    
	select id, BrandOpeningID, MasterPurRate, PurchaseRate, Sale from @temptable where BrandOpeningID = @BrandOpeningID    


	while(select count(*) from @tempBrandWhile) > 0    
	begin    
		set @newidn = 0    
		set @id = 0    
		set @sale = 0    
		select top 1 @newidn = newidn, @id = id from @tempBrandWhile order by newidn desc    
		if @variance <> 0    
		begin    
			select @sale = sale from @temptable where id = @id  

			if @variance < 0      
			begin      
				--set @variance = @variance * -1
				--Commented on 26 Dec 2012 for @variance > @sale argument
				/*
				update @temptable set Sale =         
				case        
				when @variance > sale then @variance - sale         
				else sale - @variance        
				end        
				where id = @id      
				*/

				/*
				select @variance =         
				case        
					when @variance > @sale then @variance - @sale         
					else @sale - @variance        
				end
				*/
				update @temptable set Sale = sale - @variance where id = @id
				select @variance = @sale - @variance
			end  
--		end  
--		else  
--		begin  
--			update @temptable set Sale = Sale + @variance  
--			where id = @id  
--		end  
		end    
		delete from @tempBrandWhile where newidn = @newidn    
	end    

	delete from @tempVariance where BrandOpeningID = @BrandOpeningID    
end    
    

declare  @tempcost table    
(    
Brandopeningid numeric(18,0),    
Stockin char(1),    
PegSize numeric(18,0)    
)    
    
insert into @tempcost (Brandopeningid,Stockin,PegSize)     
select b.BrandOpeningID,c.StockIN,c.PegSize from @temptable t    
join  tbl_BrandOpening b on t.BrandOpeningID=b.BrandOpeningID    
join  Tbl_CategorySizeLinkup c on c.CategorySizeLinkID=b.CategorySizeLinkUpID      
    
declare @tempconsumption table        
(        
 BrandOpeningID numeric(18,0),         
 Consumption numeric(18,0) default 0,        
 MasterPurRateCost numeric(14,2) default 0,        
 PurchaseRateCost numeric(14,2) default 0        
)    
 
update temp    
set temp.PegSize = cost.PegSize,    
temp.Stockin = cost.Stockin    
from @tempcost cost    
join @temptable temp on cost.Brandopeningid = temp.brandopeningid    
    
--select * from @temptable

insert into @tempconsumption        
(BrandOpeningID, Consumption, MasterPurRateCost, PurchaseRateCost)      
select    
temp.BrandOpeningID,    
sum(temp.Sale),    
--temp.MasterPurRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end ),    
--temp.PurchaseRate *  (case when lower(temp.Stockin)='m' then   ((sum(temp.Sale))/temp.PegSize) else  (sum(temp.Sale)) end)     
case
	when temp.costtype = 'B' then temp.MasterUnitBottleRate * (sum(temp.Sale)/temp.NoOfSpeg)
	else temp.MasterPurRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end)        	
end,
case
	when temp.costtype = 'B' then temp.PurchaseUnitBottleRate * (sum(temp.Sale)/temp.NoOfSpeg)
	else temp.PurchaseRate * (case when lower(temp.Stockin)='m' then ((sum(temp.Sale))/temp.PegSize) else (sum(temp.Sale)) end)        	
end 
from @temptable temp    

group by temp.BrandOpeningID, temp.MasterPurRate, temp.PurchaseRate,temp.PegSize,temp.Stockin, temp.NoOfSpeg, temp.costtype, 
temp.MasterUnitBottleRate, temp.PurchaseUnitBottleRate      
 
--select * from @tempconsumption
---- 

 
-----------        
 create table #tmptable                           
 (              
  LicenseID numeric(18,0),                       
  BrandID numeric(18,0),              
  Brand varchar(50),            
[Size] varchar(50),            
  BQty numeric(18,0),    
SQty numeric(18,0),    
  Cost Numeric(18,0),        
        
BrandOpeningID numeric(18,0),        
MasterRate numeric(14,2),        
   Units numeric(18,0)          
 )               
  
--select * from @tempconsumption

insert into #tmptable(LicenseID,BrandID,Brand,[Size],BQty,SQty,Cost,BrandOpeningID,MasterRate,Units)      
             
 select csl.LicenseID,bh.BrandID,bh.BrandDesc as Brand,csl.Alias as [Size],          
 --convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) +'.'+ convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID)) as Qty,    
dbo.Fun_CalcBottlefromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),    
dbo.Fun_Calcspegfromspeg(sum(tc.Consumption), bo.CategorySizeLinkUpID),    
--sum(tc.Consumption) as Qty,        
 sum(tc.PurchaseRateCost) as Cost,tc.BrandOpeningID,sum(MasterPurRateCost) as MasterRate,
   sum(tc.Consumption)        
 from @tempconsumption tc  
    
 join tbl_BrandOpening bo on bo.BrandOpeningID=tc.BrandOpeningID                
join tbl_BrandHead bh on bh.BrandID=bo.BrandID                
 join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID         
    
where csl.LicenseID=@LicenseID      
group by csl.LicenseID,bh.BrandID,bh.BrandDesc,csl.Alias,tc.BrandOpeningID,bo.CategorySizeLinkUpID,tc.PurchaseRateCost    
 
--select * from #tmptable
  if @IsExport = 1
    begin
       set @strSelect=''
				set @strSelect ='select bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
				convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units), bo.CategorySizeLinkUpID)) as Quantity,
				sum(tmp.cost) as Cost,c.categorydesc as Category,isnull(sub.SubCategoryName,'''') as SubCategory
				from #tmptable tmp
				join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.brandid=bo.brandid
				join tbl_category c on c.categoryid=bh.categoryid
				left outer join tbl_Subcategorymst sub on sub.categoryid=c.categoryid and bh.subcategoryid=sub.subcategoryid
				group by bh.BrandID,bh.BrandDesc,lnk.alias,tmp.units,bo.CategorySizeLinkUpID,bh.categoryid,c.categorydesc,sub.subcategoryid,sub.SubCategoryName'
    end
	else
	   begin
		if  @Categoryid = 0
			begin
				set @StrSelect= 'select bh.categoryid,c.categorydesc+''(''+lnk.alias+'')'' as Category,
				convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units), bo.CategorySizeLinkUpID)) as Quantity,
				sum(tmp.cost) as Cost
				from #tmptable tmp
				join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.brandid=bo.brandid
				join tbl_category c on c.categoryid=bh.categoryid
				group by bh.categoryid,c.categorydesc,lnk.alias,tmp.units,bo.CategorySizeLinkUpID'
			end
		else if  @SubCategoryid = 0
			begin
				set @strSelect=''
				set @strSelect ='select sub.subcategoryid,sub.SubCategoryName+''(''+lnk.alias+'')'' as SubCategory,
				convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units), bo.CategorySizeLinkUpID)) as Quantity,
				sum(tmp.cost) as Cost
				from #tmptable tmp
				join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.brandid=bo.brandid
				join tbl_category c on c.categoryid=bh.categoryid
				join tbl_Subcategorymst sub on sub.categoryid=c.categoryid  and bh.subcategoryid=sub.subcategoryid
				where c.categoryid='+convert(varchar, @Categoryid) +'
				group by sub.subcategoryid,sub.SubCategoryName,lnk.alias,tmp.units,bo.CategorySizeLinkUpID'
			end
		else
			begin
				set @strSelect=''
				set @strSelect ='select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
				convert(varchar,dbo.Fun_CalcBottlefromspeg(sum(tmp.units), bo.CategorySizeLinkUpID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg(sum(tmp.units), bo.CategorySizeLinkUpID)) as Quantity,
				sum(tmp.cost) as Cost
				from #tmptable tmp
				join tbl_brandopening bo on tmp.BrandOpeningID=bo.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.brandid=bo.brandid
				join tbl_category c on c.categoryid=bh.categoryid
				join tbl_Subcategorymst sub on sub.categoryid=c.categoryid  and bh.subcategoryid=sub.subcategoryid
				where c.categoryid='+convert(varchar, @Categoryid) +' and sub.subcategoryid='+convert(varchar, @SubCategoryid) +'
				group by bh.BrandID,bh.BrandDesc,lnk.alias,tmp.units,bo.CategorySizeLinkUpID'
			end
		end
 print @StrSelect

  exec (@StrSelect )
  drop table #tmptable
end
GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Dash_QuickVarianceReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Dash_QuickVarianceReport]
GO

CREATE proc [dbo].[Spr_Dash_QuickVarianceReport] --'30-Aug-2012','30-Aug-2012',46,0,0
@FromDate smalldatetime,
@ToDate smalldatetime,
@LicenseID numeric(18,0),
@CategoryID numeric(18,0),
@SubCategoryID numeric(18,0),
@IsExport bit=0   
As
Begin
    declare @StrSelect varchar(max)
    set @StrSelect = ''
    
    create table #Temp
    (
      BrandOpeningId numeric(18,0),
      Units numeric(18,0)
    )
    
    insert into #Temp(BrandOpeningId,Units) 
    select v.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID,isnull(v.Bottle,0),isnull(v.Speg,0)+isnull(v.Glass,0))
    from vw_FetchVarianceTable v
    join tbl_Brandopening bo on bo.BrandOpeningID=v.BrandOpeningID and v.licenseid = bo.licenseid
    join tbl_categorySizeLinkup lnk on bo.CategorySizeLinkUpID=lnk.CategorySizeLinkID
    where (convert(smalldatetime,convert(varchar,v.VarDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
    and convert(smalldatetime,convert(varchar,@todate,102))) and v.licenseid = @LicenseID
delete from #Temp where units is null
--select * from #Temp

   if @IsExport =1
      begin
          set @strSelect=''
			
			set @strSelect ='select bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
			case 
				when sum(v.Units) < 0 then 
				''-''+convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))
				else
				convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))  
			end as Quantity,
			c.categorydesc as Category,isnull(sub.SubCategoryName,'''') as SubCategory
			from #Temp v
			join tbl_brandopening bo on bo.BrandOpeningID = v.BrandOpeningID and bo.LicenseID ='''+ convert(varchar, @LicenseID)+'''
			join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
			join tbl_brandhead bh on bh.brandid=bo.brandid
			join tbl_category c on c.categoryid=bh.categoryid
			left outer join tbl_Subcategorymst sub on sub.categoryid=c.categoryid and bh.subcategoryid=sub.subcategoryid
			left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID and 
            convert(smalldatetime,convert(varchar,varn.VarDate,102)) between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
			+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') 
			group by bh.BrandID,bh.BrandDesc,lnk.alias,lnk.CategorySizeLinkID,bh.categoryid,c.categorydesc,sub.subcategoryid,sub.SubCategoryName'
			

      end
   else
  if  @Categoryid = 0
		begin
		    set @strSelect=''
			set @StrSelect= 'select bh.categoryid,ctg.categorydesc+''(''+lnk.alias+'')'' as Category,
			case 
				when sum(v.Units) < 0 then 
				''-''+convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))
				else
				convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))  
			end as Quantity
			from #Temp v
			join tbl_brandopening bo on  bo.BrandOpeningID = v.BrandOpeningID and bo.LicenseID ='''+ convert(varchar, @LicenseID)+'''
			join tbl_Brandhead bh on bh.brandid = bo.brandid
			join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
			left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID and
            convert(smalldatetime,convert(varchar,varn.VarDate,102)) between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
			+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') 
			group by bh.categoryid,ctg.categorydesc,lnk.alias,lnk.CategorySizeLinkID'
			
		end
   else if  @SubCategoryid = 0
		begin
		    set @strSelect=''
			set @strSelect ='select sub.subcategoryid,sub.SubCategoryName+''(''+lnk.alias+'')'' as SubCategory,
			case 
				when sum(v.Units) < 0 then 
				''-''+convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))
				else
				convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))  
			end as Quantity
			from #Temp v
			join tbl_brandopening bo on bo.BrandOpeningID = v.BrandOpeningID and bo.LicenseID ='''+ convert(varchar, @LicenseID)+'''
			join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
			join tbl_brandhead bh on bh.brandid=bo.brandid
			join tbl_category c on c.categoryid=bh.categoryid
			join tbl_Subcategorymst sub on sub.categoryid=c.categoryid and bh.subcategoryid=sub.subcategoryid
			left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID and
            convert(smalldatetime,convert(varchar,varn.VarDate,102)) between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
			+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') 
			where c.categoryid='+convert(varchar, @Categoryid) +'
			group by sub.subcategoryid,sub.SubCategoryName,lnk.alias,lnk.CategorySizeLinkID'
		end
    else
       begin
		    set @strSelect=''
			set @strSelect ='select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
			case 
				when sum(v.Units) < 0 then 
				''-''+convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))
				else
				convert(varchar,dbo.Fun_CalcBottlefromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))+''.''+convert(varchar,dbo.Fun_Calcspegfromspeg((sum(v.Units)*-1),lnk.CategorySizeLinkID))  
			end as Quantity
			from #Temp v
			join tbl_brandopening bo on bo.BrandOpeningID = v.BrandOpeningID and bo.LicenseID ='''+ convert(varchar, @LicenseID)+'''
			join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
			join tbl_brandhead bh on bh.brandid=bo.brandid
			join tbl_category c on c.categoryid=bh.categoryid
			join tbl_Subcategorymst sub on sub.categoryid=c.categoryid and bh.subcategoryid=sub.subcategoryid
			left outer join tbl_variance varn on varn.BrandOpeningID = bo.BrandOpeningID and bo.LicenseID = varn.LicenseID
            and convert(smalldatetime,convert(varchar,varn.VarDate,102)) between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
			+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') 
			where c.categoryid='+convert(varchar, @Categoryid) +' and sub.subcategoryid='''+convert(varchar, @SubCategoryid) +'''
			group by bh.BrandID,bh.BrandDesc,lnk.alias,lnk.CategorySizeLinkID'
		end

     print (@StrSelect)
	exec (@StrSelect) 
drop table #Temp
End

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchBrandQuntityForsale]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchBrandQuntityForsale]
GO

--This procedure is used to fetch brand quantity in sale form saving 
--to avoid by transfer id
CREATE procedure [dbo].[Spr_FetchBrandQuntityForsale]
@date smalldatetime,  
@brandid numeric(18,0),    
@LicenseID numeric(18,0),                                                
@CategorySizeLinkUpID numeric(18,0),
@saleid numeric(18,0),
@unitwiseqty numeric(18,0) = 0 output
--@outbit bit output ,
--@outmsg varchar(1000) output       
as                
begin

	declare @spegmltype char(5)
	set @spegmltype = 'ML'
	declare @BrandOpeningID numeric(18,0)
	select @BrandOpeningID = brandopeningid from tbl_brandopening 
	where brandid = @brandid and licenseid = @LicenseID and CategorySizeLinkUpID = @CategorySizeLinkUpID

	declare @temptable table                         
	(                
		brandid numeric(18,0),                
		bottle int default 0,                
		spag int default 0
	)                
	insert into @temptable (brandid)values(@brandid) 

	declare @StockIN char(1)
	declare @spegqty numeric(18,0)
	declare @sizeml int
	declare @totalspges numeric(18,0)
	declare @TransferLicenseID numeric(18,0)
	declare @TransferCategoryID numeric(18,0)
	declare @TransferSizeID numeric(18,0)
	declare @TransferCategorySizeLinkID numeric(18,0)

	set @totalspges = 0     

	set @TransferLicenseID = 0
	set @TransferCategoryID = 0
	set @TransferSizeID = 0
	set @TransferCategorySizeLinkID = 0		

	select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
	from tbl_categorysizelinkup	
	where CategorySizeLinkID = @CategorySizeLinkUpID

	select @TransferCategorySizeLinkID = CategorySizeLinkID
	from tbl_categorysizelinkup
	where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID


	set @StockIN = 'M'
	set @spegqty = 0
	set @sizeml = 0
	set @totalspges = 0

	select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID

	if lower(@StockIN) <> 'm'
	begin
		set @spegmltype = 'Speg'

		select @totalspges = b.OpeningQty * @spegqty 
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
		
		select @totalspges = @totalspges + b.OpSpQty
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
		
		Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		
		Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)
		from tbl_purchasehead ph       
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		Select @totalspges = @totalspges + sum(pd.SQuantity)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID


		Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid 		
		group by td.BrandOpeningID

		Select @totalspges = @totalspges + sum(td.spegqty)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid		
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid 
		group by td.BrandOpeningID

		Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)
		from Tbl_TransferHeadMst th            
		join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID          
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null        
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		Select @totalspges = @totalspges - sum(td.spegqty)
		from Tbl_TransferHeadMst th               
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null          
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
		--and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))         
		and s.BillId <> @saleid
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		Select @totalspges = @totalspges - sum(sd.Speg) - (sum(sd.Lpeg)*2)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		--and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		and s.BillId <> @saleid
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		select @totalspges = @totalspges - sum(sc.Speg)
		from Tbl_SaleCocktailHead sa
		join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
		join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
		join Tbl_SaleHead sh on sh.billid = sa.billid
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		--and convert(smalldatetime,convert(varchar,sh.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		and sa.BillId <> @saleid
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		
		print @totalspges
		update @temptable
		set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
		spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

	end
	else
	begin
		print 'sachin'
		
		select @totalspges = b.OpeningQty * @sizeml 
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
		
		select @totalspges = @totalspges + (b.OpSpQty*@spegqty)
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
		
		print '1:'+convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		--print '2:' + convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid 		
		group by td.BrandOpeningID

		Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid
		group by td.BrandOpeningID
		
		Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)
		from Tbl_TransferHeadMst th           
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID            
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)
		from Tbl_TransferHeadMst th           
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID           
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null       
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		--and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		--and th.TransferHeadID <> @TransferHeadid 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		print '3:'+convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and s.BillId <> @saleid
		--and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		print '4:'+convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty) - ((sum(sd.Lpeg)*@spegqty)*2)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and s.BillId <> @saleid
		--and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty) 
		from Tbl_SaleCocktailHead sa
		join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
		join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
		join Tbl_SaleHead sh on sh.billid = sa.billid
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and sa.BillId <> @saleid
		--and convert(smalldatetime,convert(varchar,sh.billdate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		print 'Rakesh:' + convert(varchar,@totalspges)
		
		update @temptable
		set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
		spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

	end

	select brandid, 'Botttle: '+convert(varchar,bottle)+', ' + ltrim(rtrim(@spegmltype)) + ': '+convert(varchar,spag) as BrandStock from @temptable     
	set @unitwiseqty = @totalspges
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchBrandQuntityForTransfer]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchBrandQuntityForTransfer]
GO

--This procedure is used to fetch brand quantity in transfer form saving 
--to avoid by transfer id
CREATE procedure [dbo].[Spr_FetchBrandQuntityForTransfer]
@date smalldatetime,  
@brandid numeric(18,0),    
@LicenseID numeric(18,0),                                                
@CategorySizeLinkUpID numeric(18,0),
@TransferHeadid numeric(18,0),
@unitwiseqty numeric(18,0) = 0 output
--@outbit bit output ,
--@outmsg varchar(1000) output       
as                
begin

	declare @spegmltype char(5)
	set @spegmltype = 'ML'
	declare @BrandOpeningID numeric(18,0)
	select @BrandOpeningID = brandopeningid from tbl_brandopening 
	where brandid = @brandid and licenseid = @LicenseID and CategorySizeLinkUpID = @CategorySizeLinkUpID

	declare @temptable table                         
	(                
		brandid numeric(18,0),                
		bottle int default 0,                
		spag int default 0
	)                
	insert into @temptable (brandid)values(@brandid) 

	declare @StockIN char(1)
	declare @spegqty numeric(18,0)
	declare @sizeml int
	declare @totalspges numeric(18,0)
	declare @TransferLicenseID numeric(18,0)
	declare @TransferCategoryID numeric(18,0)
	declare @TransferSizeID numeric(18,0)
	declare @TransferCategorySizeLinkID numeric(18,0)

	set @totalspges = 0     

	set @TransferLicenseID = 0
	set @TransferCategoryID = 0
	set @TransferSizeID = 0
	set @TransferCategorySizeLinkID = 0		

	select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
	from tbl_categorysizelinkup	
	where CategorySizeLinkID = @CategorySizeLinkUpID

	select @TransferCategorySizeLinkID = CategorySizeLinkID
	from tbl_categorysizelinkup
	where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID


	set @StockIN = 'M'
	set @spegqty = 0
	set @sizeml = 0
	set @totalspges = 0

	select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID

	if lower(@StockIN) <> 'm'
	begin
		set @spegmltype = 'Speg'

		select @totalspges = b.OpeningQty * @spegqty 
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
		
		select @totalspges = @totalspges + b.OpSpQty
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
		
		Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		
		Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)
		from tbl_purchasehead ph       
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		Select @totalspges = @totalspges + sum(pd.SQuantity)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID


		Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid 		
		group by td.BrandOpeningID

		Select @totalspges = @totalspges + sum(td.spegqty)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid		
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid 
		group by td.BrandOpeningID

		Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)
		from Tbl_TransferHeadMst th            
		join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID          
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null        
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		Select @totalspges = @totalspges - sum(td.spegqty)
		from Tbl_TransferHeadMst th               
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null          
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		
		
		Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
		and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))         
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		Select @totalspges = @totalspges - sum(sd.Speg) - (sum(sd.Lpeg)*2)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		select @totalspges = @totalspges - sum(sc.Speg)
		from Tbl_SaleCocktailHead sa
		join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
		join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
		join Tbl_SaleHead sh on sh.billid = sa.billid
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,sh.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		
		print @totalspges
		update @temptable
		set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
		spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

	end
	else
	begin
		print 'sachin'
		
		select @totalspges = b.OpeningQty * @sizeml 
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
		
		select @totalspges = @totalspges + (b.OpSpQty*@spegqty)
		from tbl_brandopening b
		where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
		
		print '1:'+convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		--print '2:' + convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)
		from tbl_purchasehead ph            
		join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
		join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid 		
		group by td.BrandOpeningID

		Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
		from tbl_categorysizelinkup lnk
		join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
		join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
		where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid
		group by td.BrandOpeningID
		
		Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)
		from Tbl_TransferHeadMst th           
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID            
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null            
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)
		from Tbl_TransferHeadMst th           
		join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID           
		join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID --and th.ForLicenseID is not null       
		where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
		and th.TransferHeadID <> @TransferHeadid 
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		print '3:'+convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		print '4:'+convert(varchar,@totalspges)
		
		Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty) - ((sum(sd.Lpeg)*@spegqty)*2)
		from Tbl_SaleHead s        
		join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
		join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

		
		select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty) 
		from Tbl_SaleCocktailHead sa
		join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
		join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
		join Tbl_SaleHead sh on sh.billid = sa.billid
		where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
		and convert(smalldatetime,convert(varchar,sh.billdate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
		group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
		
		
		print 'Rakesh:' + convert(varchar,@totalspges)
		
		update @temptable
		set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
		spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

	end

	select brandid, 'Botttle: '+convert(varchar,bottle)+', ' + ltrim(rtrim(@spegmltype)) + ': '+convert(varchar,spag) as BrandStock from @temptable     
	set @unitwiseqty = @totalspges


/*
declare @spegmltype char(5)
set @spegmltype = 'ML'

declare @temptable table                         
(                
brandid numeric(18,0),                
bottle int default 0,                
spag int default 0,                
glass int default 0                 
)                
insert into @temptable (brandid)values(@brandid) 

--select * from @temptable
               

declare @categorytype int                
set @categorytype=0                
select @categorytype=                
case                 
when c.CategoryDesc like '%BEER%'   then 1                  
when c.CategoryDesc like '%wine%'   then 2                
when c.CategoryDesc like '%SPIRIT%' then 3                
end                 
from tbl_BrandHead b join Tbl_Category c                
on b.CategoryID=c.CategoryID where  b.brandid = @brandid

declare @StockIN char(1)
declare @spegqty numeric(18,0)
declare @sizeml int
declare @totalspges numeric(18,0)
set @totalspges = 0     

--print  @categorytype

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

set @TransferLicenseID = 0
set @TransferCategoryID = 0
set @TransferSizeID = 0
set @TransferCategorySizeLinkID = 0		

select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
from tbl_categorysizelinkup	
where CategorySizeLinkID = @CategorySizeLinkUpID

select @TransferCategorySizeLinkID = CategorySizeLinkID
from tbl_categorysizelinkup
where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

----------------------------------------------------update Beer-------------------------------------------------------------------------------                

if @categorytype =  1                
begin                
update t set t.bottle=b.OpeningQty                
from @temptable t join  tbl_brandopening b on b.brandid=t.brandid 
where b.brandid = @brandid and b.LicenseID=@LicenseID and b.CategorySizeLinkUpID=@CategorySizeLinkUpID          

--select * from @temptable 
declare @purbottleqty numeric(18,0)
set @purbottleqty=0

select @purbottleqty = sum(pd.BottleQty)
from tbl_purchasehead ph            
join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID 

declare @Freeqty numeric(18,0)
set @Freeqty=0  

select @Freeqty = sum(pd.FreeQty)
from tbl_purchasehead ph            
join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID 


declare @transfer numeric(18,0)
set @transfer=0

select @transfer = sum(td.BottleQty) 
from tbl_categorysizelinkup lnk
join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
and th.TransferHeadID <> @TransferHeadid		
group by td.BrandOpeningID

/*
select @transfer = sum(td.BottleQty) 
from Tbl_TransferHeadMst th           
join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID
where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
*/

declare @fortransfer numeric(18,0)
set @fortransfer =0 

select @fortransfer =sum(td.BottleQty) 
from Tbl_TransferHeadMst th           
join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null
where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
and th.TransferHeadID <> @TransferHeadid		
group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
 
 

Update @temptable            
set bottle=bottle + @purbottleqty + @Freeqty + @transfer -  @fortransfer         
---from tbl_purchasehead ph            
---join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
---join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
--join @temptable t on t.brandid = bo.brandid            
--where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
--group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

--select * from @temptable 
                      
declare @salebottleqty numeric(18,0)
set @salebottleqty = 0

select @salebottleqty=sum(sd.BottleQty)
from Tbl_SaleHead s        
join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
 
update @temptable         
set bottle=bottle - @salebottleqty   

--from Tbl_SaleHead s        
--join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
--join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
--join @temptable t on t.brandid=bo.brandid        
--where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
 --group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

select @totalspges = bottle from @temptable

--print 'Raj' + convert(varchar,@totalspges) 

end   

------------------------------------------------update Wine-------------------------------------------------------------------------------                
if @categorytype = 2                 
begin

set @StockIN = 'G'
set @spegqty = 0
set @sizeml = 0
set @totalspges = 0

select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID
--print @spegqty
--print @sizeml

if lower(@StockIN) <> 'm'
begin
	--print 'sachin'
	set @spegmltype = 'Speg'

	select @totalspges = b.OpeningQty * @spegqty 
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
	
	print 'After brandopening1: '+convert(varchar,@totalspges)
	
	select @totalspges = @totalspges + b.OpSpQty
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
	
	print 'After brandopening: '+convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
    Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	
	--print 'after purches1' + convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges + sum(pd.SQuantity)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by td.BrandOpeningID

	Select @totalspges = @totalspges + sum(td.spegqty)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by td.BrandOpeningID	
	/*
    Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	Select @totalspges = @totalspges + sum(td.spegqty)
	from Tbl_TransferHeadMst th            
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	*/	
	
	Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	Select @totalspges = @totalspges - sum(td.spegqty)
	from Tbl_TransferHeadMst th            
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	print 'After purchase: '+convert(varchar,@totalspges)
	
	--declare @totalbottle numeric(18,0)
	
	--select @totalbottle=(sum(sd.BottleQty)*@spegqty)
	--from Tbl_SaleHead s        
	--join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	--join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	--where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID          
	--group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	--print  @totalbottle
	
	--if @totalspges > @totalbottle
	--begin 
	Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))                    
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	print 'After sale1: '+ convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges - sum(sd.Speg)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	select @totalspges = @totalspges - sum(sc.Speg)
	from Tbl_SaleCocktailHead sa
	join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
	join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
	join Tbl_SaleHead sh on sh.Billid = sa.billid
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,sh.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	--set @Outbit=1
	--end 
	--else
	--begin
	--set @OutMsg='can not sale stock is less'    
	--set @Outbit=0
	--end 
	
	print 'After sale: '+ convert(varchar,@totalspges)
	
	print @CategorySizeLinkUpID
	print @totalspges
	update @temptable
	set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
	glass = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

end
else
begin

	select @totalspges = b.OpeningQty * @sizeml 
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
	 
	 --print 'brand opening1' + convert(varchar,@totalspges)
	
	select @totalspges = @totalspges + (b.OpSpQty*@spegqty)
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
	print 'brand opening' + convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	 --print 'after purches1' + convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid 		
	group by td.BrandOpeningID

	Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by td.BrandOpeningID

	/*
	Select @totalspges = @totalspges + (sum(tm.BottleQty) * @sizeml)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst tm on th.TransferHeadID=tm.TransferHeadID            
	join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	Select @totalspges = @totalspges + (sum(tm.spegqty)*@spegqty)
	from Tbl_TransferHeadMst th            
	join Tbl_TransferDetailsMst tm  on th.TransferHeadID=tm.TransferHeadID           
	join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	*/
	
    Select @totalspges = @totalspges - (sum(tm.BottleQty) * @sizeml)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst tm on th.TransferHeadID=tm.TransferHeadID            
	join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	Select @totalspges = @totalspges - (sum(tm.spegqty)*@spegqty)
	from Tbl_TransferHeadMst th  
	join Tbl_TransferDetailsMst tm  on th.TransferHeadID=tm.TransferHeadID           
	join tbl_brandopening bo on tm.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null           
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	
	--print 'after purches' + convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))         
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	--print 'after sales:' + convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId      
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	select @totalspges = @totalspges - (sum(sc.Speg) * @spegqty)
	from Tbl_SaleCocktailHead sa
	join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
	join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
	join Tbl_SaleHead sh on sh.billid = sa.billid
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,sh.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))         
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	
	
	print @totalspges
	update @temptable
	set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
	glass = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

end

/*                
update t set t.glass=dbo.Fun_Calcspegfromspeg(b.OpSpQty,b.CategorySizeLinkUpID),t.bottle=b.OpeningQty + dbo.Fun_CalcBottlefromspeg(b.OpSpQty,b.CategorySizeLinkUpID)               
from @temptable t join tbl_brandopening b on b.brandid=t.brandid where b.brandid = @brandid and b.LicenseID=@LicenseID and b.CategorySizeLinkUpID=@CategorySizeLinkUpID             

Update t            
set t.bottle=t.bottle + pd.BottleQty + dbo.Fun_CalcBottlefromspeg(pd.SQuantity,bo.CategorySizeLinkUpID),t.glass=t.glass + dbo.Fun_Calcspegfromspeg(pd.SQuantity,bo.CategorySizeLinkUpID)       
from tbl_purchasehead ph            
join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
join @temptable t on t.brandid = bo.brandid            
where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID       

update t         
set t.bottle=t.bottle - sd.BottleQty - dbo.Fun_CalcBottlefromspeg(sd.Speg,bo.CategorySizeLinkUpID),t.glass=t.glass - dbo.Fun_Calcspegfromspeg(sd.Speg,bo.CategorySizeLinkUpID)  
from Tbl_SaleHead s        
join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId        
join @temptable t on t.brandid=bo.brandid         
where bo.brandid = @brandid and  bo.licenseid = @licenseid and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID            
*/

end                

---------------------------------------------update spirit----------------------------------------------------------------------------                
if @categorytype = 3                 
begin
set @StockIN = 'M'
set @spegqty = 0
set @sizeml = 0
set @totalspges = 0

select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID



if lower(@StockIN) <> 'm'
begin
	
	set @spegmltype = 'Speg'

	select @totalspges = b.OpeningQty * @spegqty 
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
	
	select @totalspges = @totalspges + b.OpSpQty
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
	
	Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	
	Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)
	from tbl_purchasehead ph       
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	Select @totalspges = @totalspges + sum(pd.SQuantity)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID


	Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid 		
	group by td.BrandOpeningID

	Select @totalspges = @totalspges + sum(td.spegqty)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid		
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid 
	group by td.BrandOpeningID
	
	/*
	Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
	from Tbl_TransferHeadMst th            
	join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID          
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	Select @totalspges = @totalspges + sum(td.spegqty)
	from Tbl_TransferHeadMst th               
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	*/

	Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)
	from Tbl_TransferHeadMst th            
	join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID          
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null        
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	Select @totalspges = @totalspges - sum(td.spegqty)
	from Tbl_TransferHeadMst th               
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null          
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	
	
	Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))         
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	Select @totalspges = @totalspges - sum(sd.Speg) - (sum(sd.Lpeg)*2)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	select @totalspges = @totalspges - sum(sc.Speg)
	from Tbl_SaleCocktailHead sa
	join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
	join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
	join Tbl_SaleHead sh on sh.billid = sa.billid
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,sh.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	
	print @totalspges
	update @temptable
	set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
	spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

end
else
begin
	print 'sachin'
	
	select @totalspges = b.OpeningQty * @sizeml 
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID                
	
	select @totalspges = @totalspges + (b.OpSpQty*@spegqty)
	from tbl_brandopening b
	where b.brandid = @brandid  and b.LicenseID=@LicenseID  and b.CategorySizeLinkUpID=@CategorySizeLinkUpID
	
	print '1:'+convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID    
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	--print '2:' + convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)
	from tbl_purchasehead ph            
	join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId             
	join tbl_brandopening bo on pd.BrandOpeningID = bo.BrandOpeningID and ph.LicenseId = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid 		
	group by td.BrandOpeningID

	Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
	from tbl_categorysizelinkup lnk
	join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
	join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
	where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid
	group by td.BrandOpeningID
	
	/*
	Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID            
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102)) 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID           
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.ForLicenseID = bo.LicenseID            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID 
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	*/
	
	
	Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID            
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null            
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)
	from Tbl_TransferHeadMst th           
	join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID           
	join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID and th.ForLicenseID is not null       
	where bo.brandid = @brandid and bo.licenseid = @LicenseID and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,th.TransferDate,102))<= convert(smalldatetime,convert(varchar,@date,102))
	and th.TransferHeadID <> @TransferHeadid 
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	print '3:'+convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	print '4:'+convert(varchar,@totalspges)
	
	Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty) - ((sum(sd.Lpeg)*@spegqty)*2)
	from Tbl_SaleHead s        
	join Tbl_SaleDetail sd  on s.BillId=sd.BillId        
	join tbl_brandopening bo on sd.BrandOpeningID=bo.BrandOpeningID and s.LicenseId=bo.LicenseId
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,s.BillDate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

	
	select @totalspges = @totalspges - (sum(sc.Speg) * @spegqty) 
	from Tbl_SaleCocktailHead sa
	join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
	join  tbl_brandopening bo  on sc.BrandOpeningID=bo.BrandOpeningID and sa.LicenseId = bo.LicenseId
	join Tbl_SaleHead sh on sh.billid = sa.billid
	where bo.brandid = @brandid and  bo.licenseid = @licenseid  and bo.CategorySizeLinkUpID=@CategorySizeLinkUpID
	and convert(smalldatetime,convert(varchar,sh.billdate,102))<= convert(smalldatetime,convert(varchar,@date,102))          
	group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
	
	
	print 'Rakesh:' + convert(varchar,@totalspges)
	
	update @temptable
	set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),
	spag = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)

end
end         

if @categorytype=1 
begin
select brandid, 'Botttle: '+convert(varchar,bottle) as BrandStock from @temptable         
end

if @categorytype=2
begin
select brandid, 'Botttle: '+convert(varchar,bottle)+',Glass: '+convert(varchar,glass) as BrandStock from @temptable     
end

if @categorytype=3
begin
select brandid, 'Botttle: '+convert(varchar,bottle)+', ' + ltrim(rtrim(@spegmltype)) + ': '+convert(varchar,spag) as BrandStock from @temptable     
end

set @unitwiseqty = @totalspges
*/
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_fetchpurchaseRate') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_fetchpurchaseRate
GO

CREATE procedure Spr_fetchpurchaseRate          
@Brandid numeric(18,0),          
@CategorySizeLinkUpID numeric(18,0),          
@categorytaxid numeric(18,0) = 0    
As          
Begin         

	Select op.BrandOpeningID,op.BrandID,op.LicenseID,op.CategorySizeLinkUpID,op.sRate,op.OpeningQty,op.OpSpQty,op.BaseQty,op.OrdNo,
	isnull(dt.PurchaseTrnRate,0) as PurchaseTrnRate,   
	cm.categoryid,cm.qty,cm.consumptionid,cm.mltype,isnull(bh.PurchasePegRate,0) as PurRatePeg, isnull(tax.Taxpercetage,0) as Taxpercetage,  
	isnull(bsr.SpegRate,0)as SpegRate,isNull(bsr.LpegRate,0) as LpegRate,dt.BoxQty  
	--select *    
	from tbl_brandopening op    
	join Tbl_CategorySizeLinkup lnk on op.CategorySizeLinkUpID = lnk.CategorySizeLinkID          
	join tbl_Size s on s.sizeid = lnk.sizeid          
	join tbl_BrandDet dt on dt.Brandid = op.brandid and dt.Sizeid = s.sizeid    
	join tbl_brandhead bh on bh.brandid = dt.brandid    
	left outer join Tbl_ConsumptionMst cm on cm.CategorySizeLinkID=lnk.CategorySizeLinkID    
	left outer join tbl_BrandSaleRate bsr on bsr.BrandID=op.BrandId and bsr.licenseid=op.licenseid  
	left outer join tbl_Categorytax tax on tax.categorytaxid = @categorytaxid    
	where op.CategorySizeLinkUpID = @CategorySizeLinkUpID and op.Brandid = @Brandid          

End  
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchOpeningStockReport') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchOpeningStockReport
GO

CREATE proc Spr_FetchOpeningStockReport      
@LicenseID numeric(18,0),  
@brandid numeric(18,0),  
@CategoryID numeric(18,0)    
as      
  begin      
   create table #temp  
   (        
   branddesc varchar(100),    
   licenseid numeric(18,0),    
   alias   varchar(50)    
   )         
   insert into #temp         
   select branddesc,alias,licenseid    
   from vw_brandopeningdetails    
   group by branddesc, alias, licenseid    
   having count(branddesc) > 1    
   declare @StrSelect varchar(max)        
   declare @StrWhere varchar(max)    
   set @StrSelect=''    
   set @StrWhere=''      
  set @StrSelect='select bo.categorydesc,bo.branddesc,bo.alias,bo.OrdNo,  
  bo.BaseQty,bo.OpeningQty,bo.OpSpQty,bo.PurchaseUnitQty,bo.NonMovingQty,bo.sRate,bo.PurchaseUnitRate,bo.MasterUnitBottleRate,       
  bo.brandopeningid, bo.CategorySizeLinkUpID,  bo.brandid,      
  Case when tmp.branddesc is Null  then ''1'' else ''0'' end ValidBrand      
  from vw_BrandOpeningDetails bo      
  left outer join #temp tmp on ltrim(rtrim(tmp.branddesc)) = ltrim(rtrim(bo.BrandDesc)) collate DATABASE_DEFAULT and ltrim(rtrim(tmp.alias)) = ltrim(rtrim(bo.alias)) collate DATABASE_DEFAULT and tmp.licenseid = bo.licenseid
  where bo.LicenseID=' + convert(varchar,@LicenseID)     
   if @brandid<>0         
    begin         
     set @StrWhere=@StrWhere+' and  bo.BrandID='+ convert(varchar,@brandid)        
    end   
   if @CategoryID <> 0                                
     Begin                                
     set @Strwhere=@strwhere + ' and  bo.CategoryID = '+ convert(varchar,@CategoryID)  
     End     
	print (@strSelect + @StrWhere)  
   exec  (@strSelect + @StrWhere)  
   drop table #temp   
  end   
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[SpRpt_FetchBrandDetailReports]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[SpRpt_FetchBrandDetailReports]
GO

Create procedure [dbo].[SpRpt_FetchBrandDetailReports]          
@brandid numeric(18,0),       
@BrandDesc varchar(100)      
as          
begin                
create table #temp       
(        
Brands varchar(500)        
)         
insert into #temp         
select b.BrandDesc as Brand         
from tbl_BrandHead b         
GROUP BY b.BrandDesc         
HAVING COUNT(b.BrandDesc) > 1
declare @StrSelect varchar(max)          
 declare @StrWhere varchar(max)
set @StrSelect=''      
set @StrWhere=''
set @StrSelect='select c.CategoryDesc as Category,b.BrandDesc as Brand,s.SizeDesc,b.ShortName,b.Strength,b.PurRatePeg,b.PurchasePegRate,bd.BoxQty,        
bd.PurchaseRate,bd.PurchaseTrnRate,Case when tmp.Brands is Null  then 1 else 0 end ValidBrand from tbl_BrandHead b           
join tbl_Category c on b.CategoryID=c.CategoryID         
join tbl_BrandDet bd on bd.BrandID=b.BrandID        
join tbl_size s on s.SizeID=bd.SizeID         
left outer join #temp tmp on tmp.Brands COLLATE DATABASE_DEFAULT = b.BrandDesc COLLATE DATABASE_DEFAULT
where 1=1' 
if @brandid<>0           
    begin           
  set @StrWhere=@StrWhere+' and  b.BrandID='+ convert(varchar,@brandid)          
    end 
if @BrandDesc <> 0                                  
     Begin                                  
     set @Strwhere=@strwhere + ' and  c.CategoryID = '+ convert(varchar,@BrandDesc)    
     End 
print (@strSelect + @StrWhere)                                                    
exec  (@strSelect + @StrWhere)
drop table #temp     
end

GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_GenSetUp') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_GenSetUp
GO
CREATE procedure Spr_GenSetUp 
as  
Begin    
select FLIVAddress from Tbl_GeneralSetUp
end
go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_GenSetUpSaveing') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_GenSetUpSaveing
GO  
CREATE proc Spr_GenSetUpSaveing  
@FLIVAddress bit,  
@oprm varchar(50),  
@outbit bit output ,  
@outmsg varchar(20) output  
as    
Begin      
UPDATE Tbl_GeneralSetUp set FLIVAddress = @FLIVAddress , oprm =@oprm,dtm=getdate()  
set @outbit =0  
set @outmsg = 'Updated SuccessFully'  
print @outmsg  
end  
go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Prototsale]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Prototsale]
GO

CREATE procedure [dbo].[Spr_Prototsale]  
@fdate varchar(12),  
@tdate varchar(12),   
@vlno varchar(12),   
@vusername varchar(50)   
as  
  
delete from totsale where username=@vusername  
  
--insert sale details  
insert into totsale (lno,username,sdate,catg,stho,sfive,sqt,ssf,spt,stt,sttf,snip,ssixty)  
select @vlno,@vusername as username,convert(smalldatetime,convert(varchar,sh.BillDate,102)) as sdate,vb.CategoryDesc,   
sum(case when vb.SizeDesc='1000 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty * vb.ML end) +  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))* vb.speg end)  
else 0 end) as 'stho',  
sum(case when vb.SizeDesc='500 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'sfive',  
sum(case when vb.SizeDesc='750 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'sqt',   
sum(case when vb.SizeDesc='650 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'ssf',   
sum(case when vb.SizeDesc='375 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'spt',   
sum(case when vb.SizeDesc='330 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'stt',   
sum(case when vb.SizeDesc='325 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'sttf',   
sum(case when vb.SizeDesc='180 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'snip',   
sum(case when vb.SizeDesc='60 ml' then  
(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty*vb.ML end)+  
(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else (sd.Speg+(sd.Lpeg*2))*vb.speg end)  
else 0 end) as 'ssixty'   
from Tbl_SaleDetail sd   
inner join Tbl_SaleHead sh on sh.BillId=sd.BillId   
inner join ViewBrandOpeningflr6 vb on sd.BrandOpeningID=vb.BrandOpeningID       
WHERE sh.LicenseId=@vlno   
and convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,convert(varchar,@fdate,102)) and convert(smalldatetime,convert(varchar,@tdate,102))  
group by vb.CategoryDesc,sh.BillDate  

 
--insert cocktail sale details  
insert into totsale (lno,username,sdate,catg,stho,sfive,sqt,ssf,spt,stt,sttf,snip,ssixty)  
select @vlno,@vusername as username,convert(smalldatetime,convert(varchar,BillDate,102)) as sdate,CategoryDesc,  
sum(case when SizeDesc='1000 ml' then ctsale else 0 end) as 'stho',  
sum(case when SizeDesc='500 ml' then ctsale else 0 end) as 'sfive',  
sum(case when SizeDesc='750 ml' then ctsale else 0 end) as 'sqt',  
sum(case when SizeDesc='650 ml' then ctsale else 0 end) as 'ssf',  
sum(case when SizeDesc='375 ml' then ctsale else 0 end) as 'spt',       
sum(case when SizeDesc='330 ml' then ctsale else 0 end) as 'stt',     
sum(case when SizeDesc='325 ml' then ctsale else 0 end) as 'sttf',  
sum(case when SizeDesc='180 ml' then ctsale else 0 end) as 'snip',  
sum(case when SizeDesc='60 ml' then ctsale else 0 end) as 'ssixty'  
from  
(select sh.BillDate,vb.CategoryDesc,vb.SizeDesc,
--sum(sch.Quantity*scd.Speg) as ctsale
sum(scd.Speg) as ctsale
from Tbl_SaleHead sh   
inner join Tbl_SaleCocktailHead sch on sh.BillId=sch.BillId   
left join Tbl_SaleCocktailDetail scd on scd.CocktailSaleId=sch.CocktailSaleId   
--and ctbdet.bmno=cocktailbdet.bmno   
--and ctbdet.srno=cocktailbdet.srno   
left join ViewBrandOpeningflr6 vb on vb.BrandOpeningID=scd.BrandOpeningid   
WHERE sh.LicenseId=@vlno and vb.CategoryDesc is not null  
and convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,convert(varchar,@fdate,102)) and convert(smalldatetime,convert(varchar,@tdate,102))  
group by sh.BillDate,vb.CategoryDesc,vb.SizeDesc)COCKTAI group by CategoryDesc,BillDate  

--stho,sfive,sqt,ssf,spt,stt,sttf,snip,ssixty
--select * from totsale

update t
set t.stho = total.stho,
t.sfive = total.sfive,
t.sqt = total.sqt,
t.ssf = total.ssf,
t.spt = total.spt,
t.stt = total.stt,
t.sttf = total.sttf,
t.snip = total.snip,
t.ssixty = total.ssixty
from totsale t
join (select lno,username,sdate, catg, 
sum(convert(float,stho)) as stho,
sum(convert(float,sfive)) as sfive,
sum(convert(float,sqt)) as sqt,
sum(convert(float,ssf)) as ssf ,
sum(convert(float,spt)) as spt,
sum(convert(float,stt)) as stt,
sum(convert(float,sttf)) as sttf,
sum(convert(float,snip)) as snip,
sum(convert(float,ssixty)) as ssixty
from totsale group by lno,username,sdate,catg) total on total.catg = t.catg

/*
update totsale
set stho = (select sum(convert(float,stho)) from totsale group by lno,username,sdate,catg),
sfive = (select sum(convert(float,sfive)) from totsale group by lno,username,sdate,catg),
sqt = (select sum(convert(float,sqt)) from totsale group by lno,username,sdate,catg),
ssf = (select sum(convert(float,ssf)) from totsale group by lno,username,sdate,catg),
spt = (select sum(convert(float,spt)) from totsale group by lno,username,sdate,catg),
stt = (select sum(convert(float,stt)) from totsale group by lno,username,sdate,catg),
sttf = (select sum(convert(float,sttf)) from totsale group by lno,username,sdate,catg),
snip = (select sum(convert(float,snip)) from totsale group by lno,username,sdate,catg),
ssixty = (select sum(convert(float,ssixty)) from totsale group by lno,username,sdate,catg)
*/

declare @temp table  
(  
category varchar(50)  
)  
  
insert into @temp(category)   
select catg from TotSale   
  
while (select COUNT(*) from @temp) > 0  
  
begin  
  
declare @category  varchar(50)  
  
  
select top 1 @category=category from @temp   
  
update t set sthoid=lnk.CategorySizeLinkID  
from  totsale t     
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 1000 and lnk.licenseid = @vlno  
  
update t set sfiveid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 500 and lnk.licenseid = @vlno  
  
update t set sqtid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 750 and lnk.licenseid = @vlno  
  
update t set ssfid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 650 and lnk.licenseid = @vlno  
  
update t set sptid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 375 and lnk.licenseid = @vlno  
  
update t set sttid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 330 and lnk.licenseid = @vlno  
  
update t set sttfid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 325 and lnk.licenseid = @vlno  
  
update t set snipid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 180 and lnk.licenseid = @vlno  
  
update t set ssixtyid=lnk.CategorySizeLinkID  
from totsale t    
join  tbl_category c on t.catg=c.CategoryDesc  
join tbl_categorysizelinkup lnk  on c.categoryid = lnk.categoryid  
join tbl_Size s on s.sizeid = lnk.sizeid  
where c.CategoryDesc = @category and s.Reportsize = 60 and lnk.licenseid = @vlno  
  
  
delete from  @temp where category=@category   
  
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'SprFetchButtonSetup') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE SprFetchButtonSetup
GO

create procedure SprFetchButtonSetup
as
Begin

	select ReportID,reportName,procedureName,MenuID,GroupboxName,SubReport,ok,Excel,Crystal,Pdf,Filter,IsCombine 
	from tbl_cocktailreport

end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_SaveGeneralSetupForButton') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_SaveGeneralSetupForButton
GO

CREATE procedure Spr_SaveGeneralSetupForButton
@XmlDoc xml,              
@UserName varchar(100),              
@Outbit bit output,              
@OutMsg varchar(100) output 
as
begin

	declare @hdoc as int 

	exec sp_xml_preparedocument @hdoc output,@XmlDoc

	declare @temp table
	(
	ReportID numeric(18,0),
	reportName varchar(100),
	ok bit,
	Excel bit,
	Crystal bit,
	Pdf bit,
	Filter bit,
	IsCombine bit
	)

	insert into @temp(ReportID,reportName,ok,Excel,Crystal,pdf,filter,iscombine)
	select reportid,reportname,ok,excel,crystal,pdf,filter,iscombine
	From OpenXML(@hDoc,'/Master/GeneralSetup/GeneralSetUpButton') with                            
	(                            
	reportid numeric(18,0),
	reportname varchar(100),
	ok bit,
	excel bit,
	crystal bit,
	pdf bit,
	filter bit,
	iscombine bit
	)                
	set @Outbit = 1                            
	set @OutMsg = 'Saved Successfully'  


	update c
	set c.ReportID=t.ReportID,
	c.ok=t.ok,
	c.Excel=t.Excel,
	c.Crystal=t.Crystal,
	c.Pdf=t.Pdf,
	c.Filter=t.Filter,
	c.IsCombine=t.IsCombine 
	from tbl_cocktailreport c 
	join @temp t on t.reportid=c.reportid
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[flr6]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[flr6]
GO

CREATE procedure [dbo].[flr6]
@fdate varchar(12),
@tdate varchar(12),
@vlno varchar(12),
@vusername varchar(50)
 as 
declare CATEGORY cursor
for 
select CategoryDesc as catg from Tbl_Category

declare @catgname varchar(100)
declare @select varchar(8000)
declare @insert varchar(4000)
declare @sql varchar(8000)

delete from tmpsale where username=@vusername

open CATEGORY
fetch next from CATEGORY into @catgname
while (@@fetch_status=0)  
begin
	if @catgname='imported spirits'  
		set @select='
		sum(sd.BottleQty) as imlitq,
		sum(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else 
		(sd.Speg+(sd.Lpeg*2))*vb.Speg end) as immlp'
	else if @catgname='spirits'
		set @select='
		sum(case when vb.SizeDesc=''1000 ml'' then sd.BottleQty else 0 end) as intho,
		sum(case when vb.SizeDesc=''500 ml'' then sd.BottleQty else 0 end) as infive,
		sum(case when vb.SizeDesc=''60 ml'' then sd.BottleQty else 0 end) as insixty,
		sum(case when vb.SizeDesc=''750 ml'' then sd.BottleQty else 0 end) as inlitqts,
		sum(case when vb.SizeDesc=''375 ml'' then sd.BottleQty else 0 end) as inpts,
		sum(case when vb.SizeDesc in(''650 ml'',''330 ml'',''325 ml'',''180 ml'') then sd.BottleQty else 0 end) as fblnk,
		sum(case when vb.calcas in(1,2) then sd.speg+(sd.Lpeg*2) else 
		(sd.Speg+(sd.Lpeg*2))*vb.Speg end) as inmlp'
	else if @catgname='imported wines'
		set @select='
		sum(sd.BottleQty) as sblnk,
		sum(case when vb.calcas in(1,2) then sd.Speg+(sd.Lpeg*2) else 
		(sd.speg+(sd.Lpeg*2))*vb.Speg end) as wlitg'
	else if @catgname='wine'
		set @select='
		sum(sd.BottleQty) as wlitq,
		sum(case when vb.calcas in(1,2) then sd.speg+(sd.Lpeg*2) else 
		(sd.speg+(sd.Lpeg*2))*vb.speg end) as tblnk'
	else if @catgname='fermented beer'
		set @select='
		sum(case when vb.SizeDesc=''650 ml'' then sd.BottleQty else 0 end) as fsml,
		sum(case when vb.SizeDesc < > ''650 ml'' then sd.BottleQty else 0 end) as fml'
	else if @catgname='draft beer'
		set @select='
		sum(case when vb.calcas in(1,2) then sd.BottleQty*vb.speg else sd.BottleQty end)+
		sum(case when vb.calcas in(1,2) then sd.speg+(sd.Lpeg*2) else 
		(sd.speg+(sd.Lpeg*2))*vb.speg end) as foblnk'
	else if @catgname='mild beer'
		set @select='
		sum(case when vb.SizeDesc=''650 ml'' then sd.BottleQty else 0 end) as msml,
		sum(case when vb.SizeDesc < > ''650 ml'' then sd.BottleQty else 0 end) as mml'
	else	
--imp mild liquor
		set @select='
		sum(sd.BottleQty) as fiblnk'


	if @catgname='imported spirits'
		set @insert='imlitq,immlp)'
	else if @catgname='spirits'
		set @insert='intho,infive,insixty,inlitqts,inpts,fblnk,inmlp)'
	else if @catgname='imported wines'
		set @insert='sblnk,wlitg)'
	else if @catgname='wine'
		set @insert='wlitq,tblnk)'
	else if @catgname='fermented beer'
		set @insert='fsml,fml)'
	else if @catgname='draft beer'
		set @insert='foblnk)'
	else if @catgname='mild beer'
		set @insert='mml,msml)'
	else	
--imp mild liquor
		set @insert='fiblnk)'

	set @insert='insert into tmpsale(username,sdate,billno,'	+ @insert
	set @sql=@insert + ' select '''+@vusername+''',sh.BillDate as sdate,sh.BillNo,'+@select+'
	from Tbl_SaleHead sh  left join Tbl_SaleDetail sd on sh.BillId=sd.BillId 
	left join ViewBrandOpeningflr6 vb on sd.BrandOpeningID=vb.BrandOpeningID 
	where vb.CategoryDesc='''+@catgname+''' 
	and convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,'''+convert(varchar,@fdate,102)+''') and convert(smalldatetime,'''+convert(varchar,@tdate,102)+''') 
	and sh.LicenseId='+@vlno+' group by sh.BillDate,sh.BillNo'  
	
	print(@sql)
	exec(@sql)

--cocktail details
	if @catgname='imported spirits'
		set @select='
		sum(scoc.Quantity*scocd.speg) as immlp'	
	else if @catgname='spirits'
		set @select='
		sum(scoc.Quantity*scocd.speg) as inmlp'
	else if @catgname='imported wines'
		set @select='
		sum(scoc.Quantity*scocd.speg) as wlitg'
	else if @catgname='wine'
		set @select='
		sum(scoc.Quantity*scocd.speg) as tblnk'
	else if @catgname='fermented beer'
		set @select='
		0 as fml'
	else if @catgname='draft beer'
		--set @select='0 as foblnk'
		set @select='sum(scocd.speg) as foblnk'
	else if @catgname='mild beer'
		set @select='
		0 as msml,0 as mml'
	else	
--imp mil liquor
		set @select='
		0 as fiblnk'

	if @catgname='imported spirits'
		set @insert='immlp)'
	else if @catgname='spirits'
		set @insert='inmlp)'
	else if @catgname='imported wines'
		set @insert='wlitg)'
	else if @catgname='wine'
		set @insert='tblnk)'
	else if @catgname='fermented beer'
		set @insert='fml)'
	else if @catgname='draft beer'
		set @insert='foblnk)'
	else if @catgname='mild beer'
		set @insert='mml,msml)'
	else	
--imp mil liquor
		set @insert='fiblnk)'

	set @insert='insert into tmpsale(username,sdate,billno,'+ @insert	
	set @sql=@insert+' select '''+@vusername+''',sh.BillDate as sdate,sh.BillNo,'+@select+'
	from Tbl_SaleHead  sh 
	left join Tbl_SaleCocktailHead scoc on sh.BillId=scoc.BillId 
	left join Tbl_SaleCocktailDetail scocd  on scocd.CocktailSaleId=scoc.CocktailSaleId  
	left join ViewBrandOpeningflr6 vbo on scocd.BrandOpeningid=vbo.BrandOpeningID
	where vbo.CategoryDesc='''+@catgname+''' 
	and convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,'''+convert(varchar,@fdate,102)+''') and convert(smalldatetime,'''+convert(varchar,@tdate,102)+''')
	and sh.LicenseId='+@vlno+' group by sh.BillDate,sh.BillNo'
	
	print(@sql)
	exec(@sql)

	fetch next from CATEGORY into @catgname
end

update tmpsale set lno=@vlno where username=@vusername

close CATEGORY
deallocate CATEGORY

--PERMIT HOLDER
declare PERMIT cursor   
for 
	select sh.BillNo,sp.PermitHolderNumber,sp.PermitHolderName,
	case when sp.PermitExpireDate='01/01/2025' then 'LifeTime' else convert(varchar,sp.PermitExpireDate,103) end as pexpdate 
	from Tbl_SalePermit sp inner join Tbl_SaleHead sh on sh.BillId=sp.BillId 
	where convert(smalldatetime,convert(varchar,sh.BillDate,102)) between convert(smalldatetime,convert(varchar,@fdate,102)) and convert(smalldatetime,convert(varchar,@tdate,102))
	 and sh.LicenseId=@vlno
	group by sh.BillNo,sp.PermitHolderNumber,sp.PermitHolderName,sp.PermitExpireDate

declare @billno varchar(20)
declare @pno varchar(50)
declare @pname varchar(50)
declare @expdate varchar(12)

--select * from tmpsale
update tmpsale set pno='',pname='',edate='' where lno=@vlno and username=@vusername

open PERMIT
fetch next from PERMIT into @billno,@pno,@pname,@expdate
while (@@fetch_status=0)
begin
  --select  '@@billno',@billno 
  --select '@@pno',@pno 
  --select '@@pname',@pname 
  --select '@@expdate',@expdate 


	update tmpsale set pno=pno +@pno,
	pname=pname+@pname,
	edate=edate+@expdate where billno=@billno and lno=@vlno and username=@vusername
	
	--select * from tmpsale

	fetch next from PERMIT into @billno,@pno,@pname,@expdate
end

/*
Commented by sachin on 10 Jan
update tmpsale set 
pno=substring(pno,2,len(pno)),
pname=substring(pname,2,len(pname)),
edate=substring(edate,2,len(edate)) where lno=@vlno and username=@vusername
*/
update tmpsale set pno=pno,pname=pname,edate=edate where lno=@vlno and username=@vusername

close PERMIT
deallocate PERMIT

--select '1' as fllicno, 'sachin' as fllicname, * from tmpSale

SET QUOTED_IDENTIFIER OFF 

SET ANSI_NULLS ON
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[SPR_fetchFLR6]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[SPR_fetchFLR6]
GO

CREATE Procedure [dbo].[SPR_fetchFLR6]
@xmlDoc xml,
@outbit bit output,
@outmsg varchar(max) output    
As
Begin

set @outbit = 1
set @outmsg = ''
declare @hdoc int
Declare @licenseID numeric(18,0)  
Declare @fromdate datetime  
Declare @todate datetime  
declare @CocktailReportDate datetime   
Declare @All bit  

exec sp_xml_preparedocument @hdoc output,@xmlDoc  

--select @licenseID=LicenseID,@CocktailReportDate=CocktailReportDate,@fromdate=FromDate,@todate=ToDate,@All=[All]
select @licenseID=LicenseID,@CocktailReportDate=CocktailReportDate,@fromdate=CocktailReportDate,@todate=CocktailReportDate,@All=[All]    
from openXML(@hDoc,'/Master/CocktailReports/Report') with  
(
LicenseID numeric(18,0),
CocktailReportDate datetime,  
FromDate datetime,
ToDate datetime,
[All] bit

)


exec [flr6] @fromdate,@todate,@licenseID,'admin'
--exec [flr6] @fromdate,@fromdate,@licenseID,'admin'



select l.LicenseNo as fllicno,l.LicenseDesc as fllicname,sdate,billno,pname,pno,
case when edate is null or edate='01/01/1900' 
then 'LifeTime' else convert(varchar,edate,103) end edate,
CASE when isnull(sum(imlitq),0)=0 
then '' ELSE CAST(sum(imlitq) as varchar) 
END imlitq,
CASE when isnull(sum(impts),0)=0 
then '' ELSE CAST(sum(impts) as varchar) 
END impts,
CASE when isnull(sum(immlp),0)=0 
then '' ELSE CAST(sum(immlp) as varchar) 
END immlp,
CASE when isnull(sum(fblnk),0)=0 
then '' ELSE CAST(sum(fblnk) as varchar) 
END fblnk,
CASE when isnull(sum(intho),0)=0 
then '' ELSE CAST(sum(intho) as varchar) 
END intho,
CASE when isnull(sum(infive),0)=0 
then '' ELSE CAST(sum(infive) as varchar) 
END infive,
CASE when isnull(sum(insixty),0)=0 
then '' ELSE CAST(sum(insixty) as varchar) 
END insixty,
CASE when isnull(sum(inlitqts),0)=0 
then '' ELSE CAST(sum(inlitqts) as varchar) 
END inlitqts,
CASE when isnull(sum(inpts),0)=0 
then '' ELSE CAST(sum(inpts) as varchar) 
END inpts,
CASE when isnull(sum(inmlp),0)=0 
then '' ELSE CAST(sum(inmlp) as varchar) 
END inmlp,
CASE when isnull(sum(sblnk),0)=0 
then '' ELSE CAST(sum(sblnk) as varchar) 
END sblnk,
CASE when isnull(sum(wlitq),0)=0 
then '' ELSE CAST(sum(wlitq) as varchar) 
END wlitq,
CASE when isnull(sum(wlitg),0)=0 
then '' ELSE CAST(sum(wlitg) as varchar) 
END wlitg,
CASE when isnull(sum(tblnk),0)=0 
then '' ELSE CAST(sum(tblnk) as varchar) 
END tblnk,
CASE when isnull(sum(flit),0)=0 
then '' ELSE CAST(sum(flit) as varchar) 
END flit,
CASE when isnull(sum(fml),0)=0 
then '' ELSE CAST(sum(fml) as varchar) 
END fml,
CASE when isnull(sum(fsml),0)=0 
then '' ELSE CAST(sum(fsml) as varchar) 
END fsml,
CASE when isnull(sum(foblnk),0)=0 
then '' ELSE CAST(sum(foblnk) as varchar) 
END foblnk,
CASE when isnull(sum(mlit),0)=0 
then '' ELSE CAST(sum(mlit) as varchar) 
END mlit,
CASE when isnull(sum(mml),0)=0 
then '' ELSE CAST(sum(mml) as varchar) 
END mml,
CASE when isnull(sum(msml),0)=0 
then '' ELSE CAST(sum(msml) as varchar) 
END msml,
CASE when isnull(sum(fiblnk),0)=0 
then '' ELSE CAST(sum(fiblnk) as varchar) 
END fiblnk 
from tmpsale t left join Tbl_License l 
on t.lno=l.LicenseID 
where t.lno=@licenseID 
and username='admin' and convert(smalldatetime,convert(varchar,sdate,102))=convert(smalldatetime,convert(varchar,@CocktailReportDate,102))
group by l.LicenseNo,l.LicenseDesc,sdate,billno,pname,pno,edate

exec Spr_Prototsale @fromdate,@todate,@licenseID,'admin'
--exec Spr_Prototsale @fromdate,@fromdate,@licenseID,'admin'
--select lno as fllicno, sdate, catg, stho, sfive, sqt, ssf, spt, stt, sttf, snip, ssixty from totsale where username = 'Mak'


--update t set stho=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(stho,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(stho,vb.CategorySizeLinkID)),
--sfive=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(sfive,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sfive,vb.CategorySizeLinkID)),
--sqt=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(sqt,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sqt,vb.CategorySizeLinkID)),
--ssf=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(ssf,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(ssf,vb.CategorySizeLinkID)),
--spt=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(spt,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(spt,vb.CategorySizeLinkID)),
--stt=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(stt,vb.CategorySizeLinkID)),0) + '.' +  convert(varchar,dbo.Fun_Calcspegfromspeg(stt,vb.CategorySizeLinkID)),
--sttf=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(sttf,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sttf,vb.CategorySizeLinkID)),
--snip=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(snip,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(snip,vb.CategorySizeLinkID)),
--ssixty=isnull(convert(varchar,dbo.Fun_CalcBottlefromspeg(ssixty,vb.CategorySizeLinkID)),0) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(ssixty,vb.CategorySizeLinkID))
--from totsale t join 
--ViewBrandOpeningflr6 vb 
--on t.catg=vb.CategoryDesc 
--select * from totsale

update totsale
set stho = case when stho = 0 then null else stho end,
sfive = case when sfive = 0 then null else sfive end,
sqt = case when sqt = 0 then null else sqt end,
ssf = case when ssf = 0 then null else ssf end,
spt = case when spt = 0 then null else spt end,
stt = case when stt = 0 then null else stt end,
sttf = case when sttf = 0 then null else sttf end,
snip = case when snip = 0 then null else snip end,
ssixty = case when ssixty = 0 then null else ssixty end
 where username = 'admin'
and convert(smalldatetime,convert(varchar,sdate,102))=convert(smalldatetime,convert(varchar,@CocktailReportDate,102))








select
lno as fllicno,
sdate,
catg,
convert(varchar,dbo.Fun_CalcBottlefromspeg(stho,sthoid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(stho,sthoid)) as stho ,
case when stho <> '0.00' then '1000' else  '' end as alias1000,
convert(varchar,dbo.Fun_CalcBottlefromspeg(sfive,sfiveid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sfive,sfiveid)) as sfive  ,
case when sfive <> '0.00' then '500' else  '' end as alias500,
convert(varchar,dbo.Fun_CalcBottlefromspeg(sqt,sqtid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sqt,sqtid)) as sqt ,
case when sqt <> '0.00' then '750' else  '' end as alias750,
convert(varchar,dbo.Fun_CalcBottlefromspeg(ssf,ssfid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(ssf,ssfid)) as ssf ,
case when ssf <> '0.00' then '650' else  '' end as alias650,
convert(varchar,dbo.Fun_CalcBottlefromspeg(spt,sptid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(spt,sptid)) as spt,
case when spt <> '0.00' then '375' else  '' end as alias375,
convert(varchar,dbo.Fun_CalcBottlefromspeg(stt,sttid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(stt,sttid)) as stt ,
case when stt <> '0.00' then '330' else  '' end as alias330,
convert(varchar,dbo.Fun_CalcBottlefromspeg(sttf,sttfid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sttf,sttfid)) as  sttf,
case when sttf <> '0.00' then '325' else  '' end as alias325,
convert(varchar,dbo.Fun_CalcBottlefromspeg(snip,snipid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(snip,snipid)) as snip ,
case when snip <> '0.00' then '180' else  '' end as alias180,
convert(varchar,dbo.Fun_CalcBottlefromspeg(ssixty,ssixtyid)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(ssixty,ssixtyid)) as ssixty ,
case when ssixty <> '0.00' then '60' end as alias60
from totsale   where username = 'admin'
and convert(smalldatetime,convert(varchar,sdate,102))=convert(smalldatetime,convert(varchar,@CocktailReportDate,102))


--LicenseNo as fllicno, 
--LicenseDesc as fllicname, 
select 
convert(varchar,sdate,106) as sdate,
case
	when convert(varchar,sum(imlitq))='0' then null  
	else convert(varchar,sum(imlitq))
end as imlitq,
case
	when convert(varchar,sum(impts)) ='0' then null  
	else convert(varchar,sum(impts)) 
end as impts,
case
	when convert(varchar,sum(immlp)) ='0' then null  
	else convert(varchar,sum(immlp)) 
end as immlp,
case
	when convert(varchar,sum(fblnk)) ='0' then null  
	else convert(varchar,sum(fblnk)) 
end as fblnk,
case
	when convert(varchar,sum(intho)) ='0' then null  
	else convert(varchar,sum(intho)) 
end as intho,
case
	when convert(varchar,sum (infive)) ='0' then null  
	else convert(varchar,sum (infive)) 
end as infive,
case
	when convert(varchar,sum (insixty)) ='0' then null  
	else convert(varchar,sum (insixty)) 
end as insixty,
case
	when convert(varchar,sum (inlitqts)) ='0' then null  
	else convert(varchar,sum (inlitqts)) 
end as inlitqts,
case
	when convert(varchar,sum (inpts)) ='0' then null  
	else convert(varchar,sum (inpts)) 
end as inpts,

case
	when convert(varchar,sum (inmlp)) ='0' then null  
	else convert(varchar,sum (inmlp)) 
end as inmlp,

case
	when convert(varchar,sum (sblnk)) ='0' then null  
	else convert(varchar,sum (sblnk)) 
end as sblnk,

case
	when convert(varchar,sum (wlitq)) ='0' then null  
	else convert(varchar,sum (wlitq)) 
end as wlitq,

case
	when convert(varchar,sum (wlitg)) ='0' then null  
	else convert(varchar,sum (wlitg)) 
end as wlitg,

case
	when convert(varchar,sum (tblnk)) ='0' then null  
	else convert(varchar,sum (tblnk)) 
end as tblnk,

case
	when convert(varchar,sum (flit)) ='0' then null  
	else convert(varchar,sum (flit)) 
end as flit,

case
	when convert(varchar,sum (fml)) ='0' then null  
	else convert(varchar,sum (fml)) 
end as fml,

case
	when convert(varchar,sum (fsml)) ='0' then null  
	else convert(varchar,sum (fsml)) 
end as fsml,

case
	when convert(varchar,sum (foblnk)) ='0' then null  
	else convert(varchar,sum (foblnk)) 
end as foblnk,

case
	when convert(varchar,sum (mlit)) ='0' then null  
	else convert(varchar,sum (mlit)) 
end as mlit,

case
	when convert(varchar,sum (mml)) ='0' then null  
	else convert(varchar,sum (mml)) 
end as mml,

case
	when convert(varchar,sum (msml)) ='0' then null  
	else convert(varchar,sum (msml)) 
end as msml,

case
	when convert(varchar,sum (fiblnk)) ='0' then null  
	else convert(varchar,sum (fiblnk)) 
end as fiblnk

from tmpSale 
group by convert(varchar,sdate,106)
 
--join Tbl_License l 
--on t.lno=l.LicenseID 
--where convert(smalldatetime,convert(varchar,sdate,102))=convert(smalldatetime,convert(varchar,@CocktailReportDate,102))
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveUserMaster]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveUserMaster]
GO

---created by shiva    
CREATE Procedure [dbo].[Spr_SaveUserMaster]      
@UserID numeric(18,0),      
@User varchar(100),      
@Administrator bit,      
@DefaultRole bit,      
@Outbit  bit output,        
@UserName varchar(100),          
@OutMsg  varchar(100) output         
as      
Begin      
    
declare @saveuser bit    
set @saveuser=1    
    
if @UserID=0     
begin    
    
if exists(select userID from Tbl_UserMaster where ltrim(rtrim([user]))=ltrim(rtrim(@user)))    
begin        
   set @OutMsg = 'User Already exists'                      
   set @Outbit = 0      
   set @saveUser=0            
end        
    
if @saveuser=1    
   begin    
   insert into Tbl_UserMaster([user],Administrator,DefaultRole,Oprc,Dtc,password)       
   values (@user,@Administrator,@DefaultRole,@UserName,getdate(),123456)      
   
   set @UserID= SCOPE_IDENTITY()

   insert into Tbl_UserDashboardRights
	(UserID,DashboardID)
	values
	(@UserID, '1#2#5#6#')

   set @OutMsg = 'Saved Successfully'            
   set @Outbit = 1            
   end      
end    
      
else      
begin     
    
if exists(select userID from Tbl_UserMaster where ltrim(rtrim([user]))=ltrim(rtrim(@user)) and userID<>@userID)    
begin        
   set @OutMsg = 'User Already exists'                      
   set @Outbit = 0      
   set @saveUser=0            
end        
    
if @saveuser=1    
begin    
    
update Tbl_UserMaster set [user]=@user,Administrator=@Administrator,DefaultRole=@DefaultRole,      
Oprm = @UserName, dtm = getdate()      
where UserID=@UserID      
 set @OutMsg = 'Updated Successfully'            
  set @Outbit = 1            
 end            
End     
end

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchControlsDataByPeriod]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchControlsDataByPeriod]
GO

CREATE Procedure [dbo].[Spr_FetchControlsDataByPeriod]
@LicenseID numeric(18,0),
@ControlHeadID numeric(18,0)
As
Begin

    declare @StrSelect varchar(max)
	declare @StrWhere varchar(max)
	set @StrSelect=''
	set @StrWhere=''

declare @total numeric(14,2)
set @total = 0

select @total  = sum(cb.Cost)
from tbl_controlsbrand cb
join tbl_brandopening bo on cb.BrandopeningID = bo.BrandopeningID
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
join tbl_category c on c.categoryid = lnk.categoryid
where cb.ControlHeadID = @ControlHeadID

--select @total
--group by c.CategoryID, c.CategoryDesc

set @StrSelect='select c.CategoryID, c.CategoryDesc as Category, sum(cb.Qty) as Quantity, sum(cb.Cost) as Cost, 
convert(numeric(14,2), round((sum(cb.cost)/'+convert(varchar,@total)+') * 100,2)) as Percentage
from tbl_controlsbrand cb
join tbl_brandopening bo on cb.BrandopeningID = bo.BrandopeningID
join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
join tbl_category c on c.categoryid = lnk.categoryid
join tbl_controlshead ch on ch.ControlHeadID=cb.ControlHeadID
where 1=1 '
	if @ControlHeadID <>  0
		begin
			set @StrWhere=' and cb.ControlHeadID ='+convert(varchar, @ControlHeadID)
		end
	if @LicenseID <>  0
		begin
			set @StrWhere=' and ch.LicenseID='+convert(varchar,@LicenseID)
		end
print(@StrSelect+@StrWhere+' group by c.CategoryID, c.CategoryDesc')	
exec(@StrSelect+@StrWhere+' group by c.CategoryID, c.CategoryDesc')

End
go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_QC_FetchCosting]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_QC_FetchCosting]
GO

CREATE Proc [dbo].[Spr_QC_FetchCosting]
@LicenseID numeric(18,0),
@fromdate datetime,
@todate datetime
As
	Begin
	declare @StrSelect varchar(max)
	declare @StrWhere varchar(max)
	set @StrSelect=''
	set @StrWhere=''
	
		set @StrSelect='select top 5 lc.LicenseDesc ,convert(varchar,FromDate,106) as FromDate,convert(varchar,ToDate,106) as ToDate, GrossRevenue, NetREvenue 
		from tbl_controlshead ch
		join tbl_license lc on lc.LicenseId=ch.LicenseID where FromDate between '''+convert(varchar,@fromdate)+''' and '''+convert(varchar,@todate)+''''
		if @LicenseID <>  0
		begin
			set @StrWhere=' and ch.LicenseID='+convert(varchar,@LicenseID)
		end
print(@StrSelect+@StrWhere)	
exec(@StrSelect+@StrWhere)
	end
go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Dash_FetchLiqBevSummary]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Dash_FetchLiqBevSummary]
GO

CREATE Procedure [dbo].[Spr_Dash_FetchLiqBevSummary] 
@LicenseID numeric(18,0) 
As  
Begin  
declare @StrSelect varchar(max)
	declare @StrWhere varchar(max)
	set @StrSelect=''
	set @StrWhere=''

 declare @total numeric(14,2)  
 set @total = 0  
   
 select @total = sum(sd.TotalAmount)  
 from tbl_saledetail sd  
 join tbl_BrandOpening bo on bo.BrandOpeningID = sd.BrandOpeningID  
 join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID  
 join Tbl_Category c on c.CategoryID = lnk.CategoryID  
 --group by c.Categoryid, c.CategoryDesc  
 
	set	@total=isnull(@total,0)
	
	set @StrSelect='select c.Categoryid, c.CategoryDesc as Category, sum(sd.TotalAmount) as [Sale Amount],  
	case
	when  '+convert(varchar,@total)+' <> 0 then convert(numeric(14,2),round((sum(sd.TotalAmount)/'+convert(varchar,@total)+') * 100,2)) 
	else 0
	end as Percentage
	from tbl_saledetail sd  
	join tbl_BrandOpening bo on bo.BrandOpeningID = sd.BrandOpeningID  
	join tbl_CategorySizeLinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID  
	join Tbl_Category c on c.CategoryID = lnk.CategoryID 
	join  tbl_salehead  sh on sh.BillId=sd.BillId '
	if @LicenseID <>  0
		begin
			set @StrWhere=' where sh.LicenseId='+convert(varchar,@LicenseID)
		end
	print(@StrSelect+@StrWhere+' group by c.Categoryid, c.CategoryDesc  ')	
	exec(@StrSelect+@StrWhere+' group by c.Categoryid, c.CategoryDesc  ')

End

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Dash_FetchTopBrands]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Dash_FetchTopBrands]
GO

CREATE Procedure [dbo].[Spr_Dash_FetchTopBrands]
@LicenseID numeric(18,0),
@noofbrands int,
@period char(1) 
as
Begin

declare @strSQL varchar(max)
set @strSQL = ''
declare @StrWhere varchar(max)
set @StrWhere = ''

set @strSQL = 'select top '+convert(varchar,@noofbrands)+' bh.brandid, bh.BrandDesc, sum(sd.TotalAmount) as [Sale Amount]
from tbl_salehead sh
join tbl_saledetail sd on sh.BillId = sd.BillId
join tbl_BrandOpening bo on bo.BrandOpeningID = sd.BrandOpeningID
join Tbl_BrandHead bh on bh.BrandID = bo.BrandID where 1=1 '

if @period = 'Y'--yesterday
begin
	set @strSQL = @strSQL + ' and sh.BillDate between convert(varchar,getdate()-1,106) and convert(varchar,getdate(),106) '
end

if @period = 'W'--Weekly
begin
	set @strSQL = @strSQL + ' and sh.BillDate between convert(varchar,getdate()-7,106) and convert(varchar,getdate(),106) '
end

if @period = 'F'--Fortnight
begin
	set @strSQL = @strSQL + ' and sh.BillDate between convert(varchar,getdate()-15,106) and convert(varchar,getdate(),106) '
end

if @period = 'M'--monthly
begin
	set @strSQL = @strSQL + ' and sh.BillDate between convert(varchar,getdate()-30,106) and convert(varchar,getdate(),106) '
end
if @LicenseID <>  0
begin
	set @StrWhere=' and sh.LicenseId='+convert(varchar,@LicenseID)
end
print (@strSQL + @StrWhere+' group by  bh.brandid, bh.BrandDesc order by [Sale Amount] desc ')
exec (@strSQL + @StrWhere+' group by  bh.brandid, bh.BrandDesc order by [Sale Amount] desc ')

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_QC_FetchControlsPeriod]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_QC_FetchControlsPeriod]
GO

CREATE Procedure [dbo].[Spr_QC_FetchControlsPeriod]
@LicenseID numeric(18,0)
As
Begin
if @LicenseID =0
begin
	select ControlHeadID as ValueField, convert(varchar,FromDate,106) + ' - ' +convert(varchar,ToDate,106) as Period 
	from Tbl_ControlsHead order by ControlHeadID
end
else
begin
	select ControlHeadID as ValueField, convert(varchar,FromDate,106) + ' - ' +convert(varchar,ToDate,106) as Period 
	from Tbl_ControlsHead where LicenseID= @LicenseID order by ControlHeadID
end
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchMenu]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchMenu]
GO

CREATE  procedure [dbo].[Spr_FetchMenu]   
@userid numeric(18,0)  
as  
begin  
if exists(select userid from tbl_usermaster where administrator=1 and userid=@userid)  
begin  
 select MenuId,ParentMenuId,MenuDesc,ToolTip,Priority from tbl_menu 
where hide=0 
order by Priority
--menuid,parentmenuid,priority  
end  
  
else  
begin  
declare @temp table  
(  
 MenuDesc varchar(500),  
 MenuId int,  
 ParentMenuId int,  
 Priority int
)  
  
insert into @temp  
(menudesc,menuid,parentmenuid,priority)  
select distinct  
(m.menudesc) as menudesc,m.menuid,m.parentmenuid,m.priority  
from tbl_menu m  
join tbl_usermenurights u on u.parentmenuid=m.menuid   
where userid=@userid and m.parentmenuid is null and m.hide=0
union
select distinct(m.menudesc) as menudesc,m.menuid,m.parentmenuid,m.priority    from tbl_menu m  
join tbl_usermenurights u on u.menuid=m.ParentMenuId where userid=@userid and m.hide=0 
union  
select distinct(m.menudesc) as menudesc,m.menuid,m.parentmenuid,m.priority    from tbl_menu m  
join tbl_usermenurights u on u.menuid=m.menuid where userid=@userid and m.hide=0  
order by m.priority  

select menudesc,menuid,parentmenuid,priority 
from @temp 
order by Priority 

--menuid,parentmenuid,  
  
--join tbl_usermenurights us on us.  
--select menuid,menudesc,parentmenuid from tbl_menu where parentmenuid is null  
  
end  
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_BulkReportLiter]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_BulkReportLiter]
GO

CREATE Procedure [dbo].[Spr_BulkReportLiter]
@LicenseXML xml,
@FromDate datetime,
@ToDate datetime,
@isValid bit=0 output,  
@outmsg varchar(100)='' output
as         
Begin 

	set @isValid = 1  
	set @outmsg = 'Fetch Sucsessfully'

	declare @hdoc int 
	Declare @licenseID numeric(18,0)
	Declare @licno  varchar(100)    
	Declare @liname varchar(100) 
	declare @opdate datetime
	Declare @Licensecount int
	Declare @Store bit 
	set @Store = 0

	--set @LicenseXML = '<CWPLUS><AllLicense><License LicenseID="2" /><License LicenseID="4" /><License LicenseID="1" /></AllLicense></CWPLUS>'
	--set @fromdate = '1-Jan-2013'
	--set @todate = '29-Jan-2013'


	set @licno=''    
	set @liname='' 

	exec sp_xml_preparedocument @hdoc output, @LicenseXML

	declare @temp table                  
	(                  
		Licenseid numeric(18,0)
	)                  
	insert into @temp(Licenseid)
	select licenseid
	from openXML(@hDoc,'/CWPLUS/AllLicense/License') with
	(
		LicenseID numeric(18,0)
	)


	select @Licensecount=count(LicenseId) from @temp
 
	if @Licensecount = 1
	begin

		if exists(select t.Licenseid from @temp t join Tbl_License tl on t.LicenseID=tl.LicenseID where store=1)
		begin
			set @store=1
		end 
		else 
		begin
			set @store=0
		end
	end

	--select @licno = licenseno, @liname = licensedesc from tbl_license where licenseid=@LicenseID    

	declare @opstock table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)

	declare @purchasechatai table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)

	declare @transferinchatai table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @purstock table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @transferoutchatai table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @salechatai table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @salecocktailchatai table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @salestock table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @closingstock table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @FL3 table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @FL4 table
	(
	BrandOpeningID numeric(18,0),
	Units numeric(18,0)
	)
	declare @tptable table
	(
		tpno varchar(max),
		trntpno varchar(max),
		tpdate smalldatetime
	)

	declare @tmpMain table
	(
		iden int identity(1,1),
		CategorySizeLinkUpID numeric(18,0),
		categorydesc varchar(100),
		alias varchar(20),
		units numeric(19,0),
		[size] varchar(10),
		particular int,
		fordate smalldatetime,
		totalsize varchar(20),
		Licenseno varchar(100),
		Licensename varchar(100)
	)
	
	declare @TempDetail table
	(
		brandopeningid numeric(18,0),
		op numeric(18,0),
		pur numeric(18,0),
		sal numeric(18,0),
		clo numeric(18,0),
		fl3 numeric(18,0),
		fl4 numeric(18,0),
		categorydesc varchar(50)
	)

	while(select count(LicenseID) from @temp)>0
	begin

		select top 1 @licenseID = LicenseID from @Temp order by LicenseID

		delete from @opstock

		delete from @purchasechatai
		delete from @transferinchatai	
		delete from @purstock	

		delete from @transferoutchatai
		delete from @salechatai
		delete from @salecocktailchatai
		delete from @salestock

		delete from @closingstock

		set @opdate = @fromdate - 1

		insert into @opstock (BrandOpeningID, Units) exec Spr_GetClosingStock @licenseid, @opdate
		insert into @closingstock (BrandOpeningID, Units) exec Spr_GetClosingStock @licenseid, @todate

		insert into @purchasechatai
		(brandopeningid, Units)
		select pd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(pd.BottleQty) + sum(pd.FreeQty), 0)
		from tbl_purchasehead ph
		join tbl_purchasedetail pd on ph.purchaseid = pd.purchaseid
		join tbl_brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
		where ph.licenseid = @licenseid and convert(smalldatetime,convert(varchar,ph.purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102))
		group by pd.BrandOpeningID, bo.CategorySizeLinkUpID


		insert into @transferinchatai
		(brandopeningid, Units)
		select pd.forBrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(pd.bottleqty), sum(pd.spegqty))
		from Tbl_TransferHeadMst ph
		join Tbl_TransferDetailsMst pd on ph.TransferHeadID = pd.TransferHeadID
		join tbl_brandopening bo on bo.BrandOpeningID = pd.forBrandOpeningID
		where bo.licenseid = @licenseid and convert(smalldatetime,convert(varchar,ph.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102))
		group by pd.forBrandOpeningID, bo.CategorySizeLinkUpID

		insert into @purstock
		(BrandOpeningID, Units)
		select
		bo.BrandOpeningID,
		(isnull(p.Units,0) + isnull(tin.Units,0))
		from @opstock bo
		left outer join @purchasechatai p on p.BrandOpeningID = bo.BrandOpeningID
		left outer join @transferinchatai tin on tin.BrandOpeningID = bo.BrandOpeningID
		
		insert into @FL3
		(brandopeningid, Units)
		select pd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(pd.bottleqty), sum(pd.spegqty))
		from Tbl_TransferHeadMst ph
		join Tbl_TransferDetailsMst pd on ph.TransferHeadID = pd.TransferHeadID
		join tbl_brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
		where ph.licenseid = @licenseid and convert(smalldatetime,convert(varchar,ph.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102)) and forLicenseID is not null
		group by pd.BrandOpeningID, bo.CategorySizeLinkUpID

		insert into @FL4
		(brandopeningid, Units)
		select pd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(pd.bottleqty), sum(pd.spegqty))
		from Tbl_TransferHeadMst ph
		join Tbl_TransferDetailsMst pd on ph.TransferHeadID = pd.TransferHeadID
		join tbl_brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
		where ph.licenseid = @licenseid and convert(smalldatetime,convert(varchar,ph.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102)) and forLicenseID is null
		group by pd.BrandOpeningID, bo.CategorySizeLinkUpID

		insert into @transferoutchatai
		(brandopeningid, Units)
		select pd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(pd.bottleqty), sum(pd.spegqty))
		from Tbl_TransferHeadMst ph
		join Tbl_TransferDetailsMst pd on ph.TransferHeadID = pd.TransferHeadID
		join tbl_brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
		where ph.licenseid = @licenseid and convert(smalldatetime,convert(varchar,ph.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102))
		group by pd.BrandOpeningID, bo.CategorySizeLinkUpID

		insert into @salechatai
		(brandopeningid, Units)
		select pd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(pd.BottleQty), sum(pd.Speg)+ (sum(pd.Lpeg)*2))
		from Tbl_SaleHead ph
		join Tbl_SaleDetail pd on ph.billid = pd.billid
		join tbl_brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
		where ph.licenseid = @licenseid and convert(smalldatetime,convert(varchar,ph.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102))
		group by pd.BrandOpeningID, bo.CategorySizeLinkUpID

		insert into @salecocktailchatai
		(brandopeningid, Units)
		select sd.BrandOpeningID, dbo.Fun_CalcunitsForFLR4(bo.CategorySizeLinkUpID, 0, sum(sd.Speg))
		from Tbl_SaleHead ph
		join Tbl_SaleCocktailHead sc on sc.billid = ph.billid 
		join Tbl_SaleCocktailDetail sd on sd.CocktailSaleId = sc.CocktailSaleId 
		join tbl_brandopening bo on bo.BrandOpeningID = sd.BrandOpeningID
		where ph.licenseid = @licenseid and convert(smalldatetime,convert(varchar,ph.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102))
		and convert(smalldatetime,convert(varchar,@todate,102))
		group by sd.BrandOpeningID, bo.CategorySizeLinkUpID


		insert into @salestock
		(BrandOpeningID, Units)
		select
		bo.BrandOpeningID,
		(isnull(tout.Units,0) + isnull(s.Units,0) + isnull(sc.Units,0))
		from @opstock bo
		left outer join @transferoutchatai tout on tout.BrandOpeningID = bo.BrandOpeningID
		left outer join @salechatai s on s.BrandOpeningID = bo.BrandOpeningID
		left outer join @salecocktailchatai sc on sc.BrandOpeningID = bo.BrandOpeningID


		insert into @TempDetail
		(brandopeningid, op, pur, sal, clo, fl3, fl4, categorydesc)
		select bo.brandopeningid, dbo.Fun_CalculateUnitsIntoML(op.units,bo.CategorySizeLinkUpID), 
		dbo.Fun_CalculateUnitsIntoML(pur.units,bo.CategorySizeLinkUpID), dbo.Fun_CalculateUnitsIntoML(sal.units,bo.CategorySizeLinkUpID), 
		dbo.Fun_CalculateUnitsIntoML(clo.units,bo.CategorySizeLinkUpID), 
		dbo.Fun_CalculateUnitsIntoML(fl3.units,bo.CategorySizeLinkUpID), 
		dbo.Fun_CalculateUnitsIntoML(fl4.units,bo.CategorySizeLinkUpID), bo.categorydesc
		from vw_brandopeningdetails bo
		join @opstock op on bo.brandopeningid = op.brandopeningid
		left outer join @purstock pur on pur.brandopeningid = op.brandopeningid
		left outer join @salestock sal on sal.brandopeningid = op.brandopeningid
		left outer join @closingstock clo on clo.brandopeningid = op.brandopeningid
		left outer join @FL3 fl3 on fl3.brandopeningid = op.brandopeningid
		left outer join @FL4 fl4 on fl4.brandopeningid = op.brandopeningid
		where bo.licenseid = @licenseid

		delete from @temp where LicenseID = @licenseID 	 
	end

	if @Store=0
	begin
		select categorydesc as Category, sum(op)/1000 as Opening, sum(pur)/1000 as Purchase, sum(sal)/1000 as Sale, sum(clo)/1000 as Closing
		from @TempDetail
		group by categorydesc
	end
	else
	begin
		select categorydesc as Category, sum(op)/1000 as Opening, sum(pur)/1000 as Purchase, sum(fl3)/1000 as FL3, sum(fl4)/1000 as FLIV, sum(sal)/1000 as Sale, 
		sum(clo)/1000 as Closing
		from @TempDetail
		group by categorydesc
	end

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_GetClosingStock') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_GetClosingStock
GO

--select * from sysobjects where name like '%p%' and type = 'fn'
CREATE Procedure Spr_GetClosingStock
@licenseid numeric(18,0),
@fromdate datetime
As
Begin

    
Declare @todate datetime

--set @fromdate='5-Feb-2013'
--set @todate='5-Feb-2013'
--set @licenseID = 18

Declare @licno  varchar(100)      
Declare @liname varchar(100)      
set @licno=''      
set @liname=''      
select @licno= licenseno from tbl_license where licenseid=@licenseid      
select @liname= licensedesc from tbl_license where licenseid=@licenseid     

declare @brandid numeric(18,0)  
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandOpeningID numeric(18,0)

declare @StockIN char(1)    
declare @spegqty numeric(18,0)    
declare @sizeml int    
declare @totalspges numeric(18,0)

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

declare @opUnitQty numeric(18,0)
declare @purUnitQty numeric(18,0)
declare @totUnitQty numeric(18,0)
declare @salUnitQty numeric(18,0)

	declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0)
	)  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	) 
	--create index ind_brandid on @tempbrand(brandid)

	--alter index ind_brandid rebuild 

	set @todate = @fromdate	

	insert into @tempbrand
	(brandopeningid, brandid, CategorySizeLinkID, categorydesc, Alias, Particular, UnitQty)
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 1, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 2, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 3, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 4, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 5, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'       
	order by CategorySizeLinkUpID 
       
	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid  


	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @BrandOpeningID = 0


	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			--print @totalspges    

			--select * from tbl_purchasedetail  

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * - 1  
--			end  

			--print @totalspges    
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand   
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end    
		else    
		begin    

			--print 'Rakesh'
			--set @date = '31-May-2012'  

			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * -1  
--			end  

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand    
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid



		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		
		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID


			
			--print @totalspges  

			--select * from tbl_purchasedetail

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID			
--       
--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3
			

--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID 

		end  
		else  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

						
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2  

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID  

		end

		delete from @tempwhile where brandopeningid = @brandopeningid
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'   
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		
		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			print @totalspges  
--
--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where BrandOpeningID=@BrandOpeningID

		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end
		
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)
--			where BrandOpeningID=@BrandOpeningID
		end      

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	select BrandOpeningID, UnitQty from @tempbrand where Particular = 5

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Savecocktail]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Savecocktail]
GO

CREATE Procedure [dbo].[Spr_Savecocktail]        
@CocktailId numeric(18,0),            
@CocktailName varchar(100),              
@LicenseID  numeric(18,0),            
@rate  numeric(14,2),            
@CocktailXML xml,              
@username varchar(100),              
@Outbit bit output,              
@OutMsg varchar(50) output                 
as                
Begin              
	              
	Begin try              
	 Begin tran              
	               
	  Declare @hDoc int                            
	  EXEC sp_xml_preparedocument @hDoc Output, @CocktailXML           
	        
	  declare @IsValid bit            
	  set @IsValid=1      
	        
	  If @CocktailId=0      
	  Begin      
		               
		  if exists(select CocktailId from Tbl_cocktail where ltrim(rtrim(CocktailName)) = ltrim(rtrim(@CocktailName)))             
		  begin              
		   set @OutMsg = 'Cocktail Name Already exists'                            
		   set @Outbit = 0            
		   set @IsValid = 0                  
		  end            
		                
		  if @IsValid=1      
		  begin        
		   Insert into Tbl_cocktail(cocktailname,oprc,dtc)values(@cocktailName,@username,getdate())       
		   set @CocktailId= scope_identity()              
		   insert into Tbl_cocktailrate(rate,cocktailId,LicenseId,oprc,dtc)values(@rate,@cocktailId,@LicenseId,@username,getdate())            
		  End        
	  End      
	  else      
	  begin      
		          
		  if exists(select c.CocktailId from Tbl_cocktail c join Tbl_cocktailrate r on c.cocktailid = r.cocktailid where ltrim(rtrim(c.CocktailName)) = ltrim(rtrim(@CocktailName)) and c.cocktailId<>@cocktailId and r.licenseid = @licenseid)             
		  begin              
		   set @OutMsg = 'Cocktail Name Already exists'                            
		   set @Outbit = 0            
		   set @IsValid = 0                  
	      end      
	        
		  if @IsValid=1      
		  begin

			if not exists (select Cocktailrateid from Tbl_cocktailrate where cocktailid=@CocktailId and LicenseId = @LicenseId )             
			begin
				insert into Tbl_cocktailrate(rate,cocktailId,LicenseId,oprc,dtc)values(@rate,@cocktailId,@LicenseId,@username,getdate())            
			end
		   Update Tbl_cocktail      
		   set cocktailname = @cocktailName,      
		   oprm = @username,      
		   dtm = getdate()      
		   where CocktailId = @CocktailId      
		         
		   Update Tbl_cocktailrate      
		   set rate = @rate,           
		   oprm = @username,      
		   dtm = getdate()      
		   where CocktailId = @CocktailId and LicenseId = @LicenseId    
		        
		  End      
	          
	  end      
	      
	if @IsValid=1      
	begin             
	         
	  declare @temptable table              
	  (              
	  brandid numeric(18,0),            
	  categorysizelinkId numeric(18,0),            
	  Speg int            
	  )              
	               
	  insert into @temptable              
	  (brandId,categorysizelinkId,Speg)              
	  Select brandid, categorysizelinkId, Speg             
	  From OpenXML(@hDoc,'/Master/CatgSizeLnk/CatgSize') with                      
	  (                      
	  brandid numeric(18,0),            
	  categorysizelinkId numeric(18,0),            
	  Speg int            
	  )          
	      
	  insert into tbl_cocktaildetail              
	  (CocktailID,BrandOpeningID,Speg,CategorysizelinkID,Licenceid,Oprc,Dtc)              
	  Select               
	  @CocktailId,temp.brandid,temp.Speg,temp.categorysizelinkId,@LicenseId,@Username,getdate()          
	  From @temptable temp              
	  left outer join tbl_cocktaildetail lnk on lnk.brandopeningid = temp.brandid and               
	  lnk.Licenceid = @LicenseID and lnk.CocktailID = @CocktailID          
	  where lnk.brandopeningid is null     
	          
	  --select * from @temptable 
	             
	  Update lnk              
	  Set lnk.Speg = temp.Speg, lnk.categorysizelinkId = temp.categorysizelinkId          
	  From @temptable temp              
	  join tbl_cocktaildetail lnk on lnk.brandopeningid = temp.brandid              
	  where lnk.Licenceid = @LicenseID and lnk.CocktailID = @CocktailID  
	            
	  delete lnk              
	  From tbl_cocktaildetail lnk 
	  left outer join @temptable temp on lnk.brandopeningid = temp.brandid               
	  where lnk.Licenceid = @LicenseID and temp.brandid is null and lnk.CocktailID = @CocktailID                    
	        
	  set @outbit=1              
	  set @outmsg='Saved Successfully'                
	        
	end              
	commit      
	End Try              
	Begin Catch              
	set @OutMsg='Cannot Delete the Record'            
	set @Outbit=0              
	rollback                
	End Catch              
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchOpeningStockReport') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchOpeningStockReport
GO

CREATE proc Spr_FetchOpeningStockReport      
@LicenseID numeric(18,0),  
@brandid numeric(18,0),  
@CategoryID numeric(18,0)    
as      
  begin      
   create table #temp  
   (        
   branddesc varchar(100),    
   licenseid numeric(18,0),    
   alias   varchar(50)    
   )         
   insert into #temp         
   select branddesc,alias,licenseid    
   from vw_brandopeningdetails    
   group by branddesc, alias, licenseid    
   having count(branddesc) > 1    
   declare @StrSelect varchar(max)        
   declare @StrWhere varchar(max)    
   set @StrSelect=''    
   set @StrWhere=''      
  set @StrSelect='select bo.categorydesc,bo.branddesc,bo.alias,bo.OrdNo,  
  bo.BaseQty,bo.OpeningQty,bo.OpSpQty,bo.PurchaseUnitQty,bo.NonMovingQty,bo.sRate,bo.PurchaseUnitRate,bo.MasterUnitBottleRate,       
  bo.brandopeningid, bo.CategorySizeLinkUpID,  bo.brandid,      
  Case when tmp.branddesc is Null  then ''1'' else ''0'' end ValidBrand      
  from vw_BrandOpeningDetails bo      
  left outer join #temp tmp on ltrim(rtrim(tmp.branddesc)) = ltrim(rtrim(bo.BrandDesc)) collate DATABASE_DEFAULT and ltrim(rtrim(tmp.alias)) = ltrim(rtrim(bo.alias)) collate DATABASE_DEFAULT and tmp.licenseid = bo.licenseid
  where bo.LicenseID=' + convert(varchar,@LicenseID)     
   if @brandid<>0         
    begin         
     set @StrWhere=@StrWhere+' and  bo.BrandID='+ convert(varchar,@brandid)        
    end   
   if @CategoryID <> 0                                
     Begin                                
     set @Strwhere=@strwhere + ' and  bo.CategoryID = '+ convert(varchar,@CategoryID)  
     End     
	print (@strSelect + @StrWhere)  
   exec  (@strSelect + @StrWhere)  
   drop table #temp   
  end   
GO


IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_DeleteUserMaster]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_DeleteUserMaster]
GO

--Created By :Shiva
CREATE Proc [dbo].[Spr_DeleteUserMaster]
@UserID numeric(18,0),    
@Outbit bit output,    
@OutMsg varchar(50) output    
as
Begin    
	Begin try    
		delete from Tbl_UserMenuRights where UserID=@UserID    
		delete from Tbl_UserLicense where UserID=@UserID    
		delete from Tbl_UserDashboardRights where UserID=@UserID    
		delete from Tbl_UserMaster where UserID=@UserID   
		set @OutMsg='Deleted Sucessfully'    
		set @Outbit=1
	End Try    
	Begin Catch    
		set @OutMsg='Cannot Delete the Record'      
		set @Outbit=0
	End Catch    
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_Baseqty]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_Baseqty]
GO

Create procedure [dbo].[Spr_Baseqty]  
@date datetime,  
@LicenseID numeric(18,0)  
as  
begin  
  
declare @temp table   
(  
BrandID numeric(18,0),  
BrandOpeningID numeric(18,0),  
CategorySizeLinkUpID numeric(18,0),  
BaseQty numeric(18,0)  
)  
  
declare @inserttemptable table  
(  
 brandid numeric(18,0),  
 BrandStock varchar(200)  
)  
  
declare @tempbaseqty table  
(  
Brandname char(100),  
BrandOpeningID numeric(18,0),  
BaseQty numeric(18,0),
ReorderLevel numeric(14,2),  
OptimumLevel numeric(14,2), 
ActualStock varchar(20),  
Size varchar(50)  
)  
  
insert into  @temp (BrandID,BrandOpeningID,CategorySizeLinkUpID,BaseQty)  
select BrandID,BrandOpeningID,CategorySizeLinkUpID,BaseQty from tbl_BrandOpening   
  
--select * from @temp  
  
  while (select count (*) from @temp) > 0  
   begin  
    declare @brandopeningid numeric(18,0)  
    declare @brandid numeric(18,0)  
    declare @categorysizeid numeric(18,0)  
    declare @baseqty numeric(18,0)  
    declare @unitwiseqty numeric(18,0)  
    declare @unitsize numeric(18,0)  
  
    select top 1 @brandopeningid=BrandOpeningID,@brandid=BrandID,@categorysizeid=CategorySizeLinkUpID,@baseqty=BaseQty from @temp  
      
    --print 'bo' + convert(varchar, @brandopeningid)  
    --print 'ca' + convert(varchar,@categorysizeid)  
    --print 'bas' + convert(varchar,@baseqty)  
      
    insert into @inserttemptable exec Spr_FetchBrandQuntity @date,@brandid,@LicenseID,@categorysizeid,@unitwiseqty output  
                  
                select @unitsize=dbo.Fun_Calcunits(@categorysizeid,@baseqty,0)  
                  
    --print 'unit'+ convert(varchar,@unitwiseqty)   
      
      
  
    if  @unitwiseqty < @unitsize  
      
    begin  
      
     insert into @tempbaseqty (Brandname,BrandOpeningID,BaseQty,Size,ReorderLevel,OptimumLevel,ActualStock)  
     select b.BrandDesc,@brandopeningid,@baseqty,c.Alias,isnull(bo.ReorderLevel,0),isnull(bo.OptimumLevel,0),
	 convert(varchar,dbo.[Fun_CalcBottlefromspeg](@unitwiseqty,bo.CategorySizeLinkUpID))+'.'+convert(varchar,dbo.[Fun_Calcspegfromspeg](@unitwiseqty,bo.CategorySizeLinkUpID)) from Tbl_CategorySizeLinkup c  
     join tbl_BrandOpening bo on c.CategorySizeLinkID=bo.CategorySizeLinkUpID  
     join tbl_BrandHead b on  b.BrandID= bo.BrandID  
     where bo.BrandOpeningID=@brandopeningid  
  
    end  
  
    delete from @temp where BrandOpeningID=@brandopeningid and BrandID=@brandid  
  
   end  
	
	select ltrim(rtrim(Brandname)) as Brand , [Size] as Size,ActualStock, BaseQty,ReorderLevel,OptimumLevel from @tempbaseqty  
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[spr_deletebrand]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[spr_deletebrand]   
GO

CREATE Proc [dbo].[spr_deletebrand]   
@BrandId numeric(18,0),    
@Outbit bit output,    
@OutMsg varchar(50) output    
as    
Begin try    
 Begin tran
delete from tbl_brandsalerate where BrandId=@BrandId   
 delete from tbl_BrandDet where BrandId=@BrandId
  delete from tbl_BrandHead where BrandId=@BrandId    
set @OutMsg='Deleted Sucessfully'    
set @Outbit=1      
 commit    
End Try    
Begin Catch    
set @OutMsg='Cannot Delete the Record'      
set @Outbit=0    
 rollback      
End Catch
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchBrandOpening]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchBrandOpening]
GO

Create Procedure [dbo].[Spr_FetchBrandOpening]      
@BrandID numeric(18,0),
@LicenseID numeric(18,0)      
as      
Begin      
 If @BrandID=0      
  Begin   
    select  bo.BrandOpeningID,bo.BrandID,bo.LicenseID,bo.CategorySizeLinkUpID,bo.sRate,bo.OpeningQty,bo.OpSpQty,bo.BaseQty,bo.OrdNo,isnull(bo.ReorderLevel,0) as ReorderLevel,
	isnull(bo.OptimumLevel,0) as OptimumLevel,
   isnull(bs.SpegRate,0) as SpegRate,isnull(bs.LpegRate,0) as LpegRate
   from tbl_BrandOpening bo
   left outer join tbl_BrandSaleRate bs on bo.LicenseID= bs.LicenseID and bo.BrandID=bs.BrandID  
--   select BrandOpeningID,BrandID,LicenseID,CategorySizeLinkUpID,sRate,OpeningQty,OpSpQty,BaseQty,OrdNo  from tbl_BrandOpening    
 End      
 Else      
  Begin      
   select  bo.BrandOpeningID,bo.BrandID,bo.LicenseID,bo.CategorySizeLinkUpID,bo.sRate,bo.OpeningQty,bo.OpSpQty,bo.BaseQty,bo.OrdNo,isnull(bo.ReorderLevel,0) as ReorderLevel,
	isnull(bo.OptimumLevel,0) as OptimumLevel,
   isnull(bs.SpegRate,0) as SpegRate,isnull(bs.LpegRate,0) as LpegRate
   from tbl_BrandOpening bo
   left outer join tbl_BrandSaleRate bs on bo.LicenseID= bs.LicenseID and bo.BrandID=bs.BrandID
   where bo.BrandID = @BrandID and bo.LicenseID = @LicenseID

  
  End      
End
go

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_ValidateNegativeStockForsale]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_ValidateNegativeStockForsale]
GO

create procedure [dbo].[Spr_ValidateNegativeStockForsale]
@licenseid numeric(18,0),
@XmlDocBrand xml,
@XmlDocCocktail xml,
@date smalldatetime,
@saleheadid numeric(18,0) = 0
As
Begin

declare @hdocBrand int
exec sp_xml_preparedocument @hdocBrand output,@XmlDocBrand    

declare @tempBrand table    
(    
billno int,    
BrandOpeningID numeric(18,0),    
BottleQty numeric(18,0),     
Bottlerate numeric(14,2),    
Speg numeric(18,0),    
SpegRate numeric(14,2),    
Lpeg numeric(18,0),    
LpegRate numeric(14,2),    
CategorytaxID numeric(18,0),    
Taxper numeric(14,2),    
TotalAmount numeric(14,2)    
)    
insert into @tempBrand(billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount)    
select billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,
case 
when CategorytaxID=0 then null 
else CategorytaxID end,Taxper,TotalAmount  
  
From OpenXML(@hdocBrand,'/Trans/Sale/Brand') with                
 (                
 billno int,    
BrandOpeningID numeric(18,0),    
BottleQty numeric(18,0),     
Bottlerate numeric(14,2),    
Speg numeric(18,0),    
SpegRate numeric(14,2),    
Lpeg numeric(18,0),    
LpegRate numeric(14,2),    
CategorytaxID numeric(18,0),    
Taxper numeric(14,2),      
TotalAmount numeric(14,2)       
 )        
--select * from @tempBrand

declare @hdocCocktail int       
exec sp_xml_preparedocument @hdocCocktail output,@XmlDocCocktail      
      
declare @tempCocktail table      
(      
billno int,      
Cocktailid numeric(18,0),      
Qty numeric(18,0),      
Rate numeric(14,2),      
CategoryTaxTypeId numeric(18,0),      
TaxPercetage numeric(14,2),      
cocktailtotal numeric(14,2)      
)

insert into @tempCocktail(billno,Cocktailid,Qty,Rate,CategoryTaxTypeId,TaxPercetage,cocktailtotal)     
select billno,Cocktailid,Qty,Rate,  
case when CategoryTaxTypeId=0   
then null   
else CategoryTaxTypeId end,TaxPercetage,cocktailtotal      
From OpenXML(@hdocCocktail,'/Trans/cocktailSale/Cocktail') with                  
(                  
	billno int,      
	Cocktailid numeric(18,0),      
	Qty numeric(18,0),      
	Rate numeric(14,2),      
	CategoryTaxTypeId numeric(18,0),      
	TaxPercetage numeric(14,2),      
	cocktailtotal numeric(14,2)      
)

declare @validatetable table 
(	
	brandid numeric(18,0),
	stock varchar(200)
)
--Unused Table----------
declare @inserttemptable table
(
	brandid numeric(18,0),
	BrandStock varchar(200)
)

declare @stockcocktail table
(
	BrandOpeningId numeric(18,0),
	Speg numeric(18,0)
)
declare @Categorytype int
declare @BrandOpeningID numeric(18,0)
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandID numeric(18,0)
declare @stockqty numeric(18,0)
declare @saleqty numeric(18,0)

 while(select count(*) from @tempBrand)>0    
 begin

	select @BrandOpeningID = BrandOpeningID from @tempBrand order by BrandOpeningID


	select top 1 @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID 
	from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID
   
	print @date
	print @brandid
	print @licenseid
	print @CategorySizeLinkUpID



	if @saleheadid = 0
	begin

		insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output
	end
	else
	begin
		--select @brandid, @CategorySizeLinkUpID, BottleQty, Speg from @tempBrand where BrandOpeningID = @BrandOpeningID
		insert into @inserttemptable exec Spr_FetchBrandQuntityForsale @date, @brandid, @licenseid, @CategorySizeLinkUpID, @saleheadid, @stockqty output
	end	

	--for printing
	--select @CategorySizeLinkUpID, BottleQty, Speg, Lpeg*2 from @tempBrand where BrandOpeningID = @BrandOpeningID
	
	select @saleqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, BottleQty, Speg+(Lpeg*2)) from @tempBrand where BrandOpeningID = @BrandOpeningID
	
	--print @saleqty
	--print @stockqty

	if @saleqty > @stockqty
	begin

		select @Categorytype = 
		case                 
			when c.CategoryDesc like '%BEER%' then  1                  
			when c.CategoryDesc like '%wine%' then   2                
			when c.CategoryDesc like '%SPIRIT%' then 3                
		end
		from Tbl_Category c
		join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID
		where cs.CategorySizeLinkID = @CategorySizeLinkUpID

		/*
		if @Categorytype = 1
		begin
			insert into @validatetable
			(brandid, stock)
			values 
			(@BrandID, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		end
		if @Categorytype = 2
		begin
			insert into @validatetable
			(brandid, stock)
			values 
			(@BrandID, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', Glass ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		end
		if @Categorytype = 3
		begin
			insert into @validatetable
			(brandid, stock)
			values 
			(@BrandID, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', sPeg ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		end
		*/

		insert into @validatetable
		(brandid, stock)
		values 
		(@BrandID, convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) + '.' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))


		insert into @stockcocktail (BrandOpeningId, Speg)
		values (@BrandOpeningID, @stockqty)
	end
	else
	begin
		insert into @stockcocktail (BrandOpeningId, Speg)
		values (@BrandOpeningID, @saleqty-@stockqty)
	end

	delete from @tempBrand where BrandOpeningID = @BrandOpeningID
       
 end

 --select * from @validatetable
 --select * from @stockcocktail

declare @cocktailbrand table
(
	cocktailid numeric(18,0),
	brandopeningid numeric(18,0),
	sPeg numeric(18,0)
)

insert into @cocktailbrand
(cocktailid, brandopeningid, sPeg)
Select 
det.cocktailid, det.Brandopeningid, 
case 
	when sc.sPeg is null then temp.qty*(det.Speg)
	else temp.qty*(det.Speg) - temp.qty*(sc.sPeg)
end
from @tempCocktail temp
join tbl_cocktaildetail det on det.cocktailid = temp.cocktailid and det.licenceid = @licenseid
left outer join @stockcocktail sc on sc.BrandOpeningId = det.BrandOpeningId

declare @validatecocktail table
(
	Cocktailid numeric(18,0),
	sPeg varchar(200)
)
declare @cocktailid numeric(18,0)
declare @StockIN char(1)
set @StockIN = 'M'
set @cocktailid = 0

--select * from @cocktailbrand

while(select count(*) from @cocktailbrand) > 0
begin
	
	select top 1 @cocktailid = cocktailid, @BrandOpeningID = BrandOpeningID from @cocktailbrand order by BrandOpeningID

	select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID 
	from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID
   
	select @StockIN = StockIN from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID
	--print @brandid
	--print @licenseid
	--print @CategorySizeLinkUpID


	if @saleheadid = 0
	begin

		insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output
	end
	else
	begin
		--select @brandid, @CategorySizeLinkUpID, BottleQty, Speg from @tempBrand where BrandOpeningID = @BrandOpeningID
		insert into @inserttemptable exec Spr_FetchBrandQuntityForsale @date, @brandid, @licenseid, @CategorySizeLinkUpID, @saleheadid, @stockqty output
	end
	
	--print 'sachin joglekar'
	--print @saleqty
	--print @stockqty
	
	select @stockqty = @stockqty - sPeg from @stockcocktail where BrandOpeningId = @BrandOpeningId 
	--for printing
	--select @CategorySizeLinkUpID, BottleQty, Speg, Lpeg*2 from @tempBrand where BrandOpeningID = @BrandOpeningID
	if @StockIN <> 'M'
	begin
		select @saleqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, 0, sPeg) from @cocktailbrand where BrandOpeningID = @BrandOpeningID and cocktailid = @cocktailid
	end
	else
	begin
		select @saleqty = dbo.Fun_CalcunitsForFLR4(@CategorySizeLinkUpID, 0, sPeg) from @cocktailbrand where BrandOpeningID = @BrandOpeningID and cocktailid = @cocktailid
	end
	print 'sachin'
	print @saleqty
	print @stockqty

	if @saleqty > @stockqty
	begin
		insert into @validatecocktail
		(Cocktailid, sPeg)
		values 
		(@cocktailid, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', ML ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		
	end

	delete from @cocktailbrand where BrandOpeningID = @BrandOpeningID and cocktailid = @cocktailid

end

select b.branddesc, v.stock 
from @validatetable v
join tbl_brandhead b on b.brandid = v.brandid
union all
select ch.CocktailName, v.sPeg 
from @validatecocktail v
join tbl_cocktail ch on ch.Cocktailid = v.Cocktailid


End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_ValidateNegativeStock]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_ValidateNegativeStock]
GO

CREATE procedure [dbo].[Spr_ValidateNegativeStock]
@licenseid numeric(18,0),
@XmlDocBrand xml,
@XmlDocCocktail xml,
@date smalldatetime
As
Begin

declare @hdocBrand int
exec sp_xml_preparedocument @hdocBrand output,@XmlDocBrand    

declare @tempBrand table    
(    
billno int,    
BrandOpeningID numeric(18,0),    
BottleQty numeric(18,0),     
Bottlerate numeric(14,2),    
Speg numeric(18,0),    
SpegRate numeric(14,2),    
Lpeg numeric(18,0),    
LpegRate numeric(14,2),    
CategorytaxID numeric(18,0),    
Taxper numeric(14,2),    
TotalAmount numeric(14,2)    
)    
insert into @tempBrand(billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,CategorytaxID,Taxper,TotalAmount)    
select billno,BrandOpeningID,BottleQty,Bottlerate,Speg,SpegRate,Lpeg,LpegRate,
case 
when CategorytaxID=0 then null 
else CategorytaxID end,Taxper,TotalAmount  
  
From OpenXML(@hdocBrand,'/Trans/Sale/Brand') with                
 (                
 billno int,    
BrandOpeningID numeric(18,0),    
BottleQty numeric(18,0),     
Bottlerate numeric(14,2),    
Speg numeric(18,0),    
SpegRate numeric(14,2),    
Lpeg numeric(18,0),    
LpegRate numeric(14,2),    
CategorytaxID numeric(18,0),    
Taxper numeric(14,2),      
TotalAmount numeric(14,2)       
 )        
--select * from @tempBrand

declare @hdocCocktail int       
exec sp_xml_preparedocument @hdocCocktail output,@XmlDocCocktail      
      
declare @tempCocktail table      
(      
billno int,      
Cocktailid numeric(18,0),      
Qty numeric(18,0),      
Rate numeric(14,2),      
CategoryTaxTypeId numeric(18,0),      
TaxPercetage numeric(14,2),      
cocktailtotal numeric(14,2)      
)

insert into @tempCocktail(billno,Cocktailid,Qty,Rate,CategoryTaxTypeId,TaxPercetage,cocktailtotal)     
select billno,Cocktailid,Qty,Rate,  
case when CategoryTaxTypeId=0   
then null   
else CategoryTaxTypeId end,TaxPercetage,cocktailtotal      
From OpenXML(@hdocCocktail,'/Trans/cocktailSale/Cocktail') with                  
(                  
	billno int,      
	Cocktailid numeric(18,0),      
	Qty numeric(18,0),      
	Rate numeric(14,2),      
	CategoryTaxTypeId numeric(18,0),      
	TaxPercetage numeric(14,2),      
	cocktailtotal numeric(14,2)      
)

declare @validatetable table 
(	
	brandid numeric(18,0),
	stock varchar(200)
)
--Unused Table----------
declare @inserttemptable table
(
	brandid numeric(18,0),
	BrandStock varchar(200)
)

declare @stockcocktail table
(
	BrandOpeningId numeric(18,0),
	Speg numeric(18,0)
)
declare @Categorytype int
declare @BrandOpeningID numeric(18,0)
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandID numeric(18,0)
declare @stockqty numeric(18,0)
declare @saleqty numeric(18,0)

 while(select count(*) from @tempBrand)>0    
 begin

	select @BrandOpeningID = BrandOpeningID from @tempBrand order by BrandOpeningID


	select top 1 @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID 
	from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID
   
	print @date
	print @brandid
	print @licenseid
	print @CategorySizeLinkUpID

	insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output

	--for printing
	--select @CategorySizeLinkUpID, BottleQty, Speg, Lpeg*2 from @tempBrand where BrandOpeningID = @BrandOpeningID
	
	select @saleqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, BottleQty, Speg+(Lpeg*2)) from @tempBrand where BrandOpeningID = @BrandOpeningID
	
	--print @saleqty
	--print @stockqty

	if @saleqty > @stockqty
	begin

		select @Categorytype = 
		case                 
			when c.CategoryDesc like '%BEER%' then  1                  
			when c.CategoryDesc like '%wine%' then   2                
			when c.CategoryDesc like '%SPIRIT%' then 3                
		end
		from Tbl_Category c
		join Tbl_CategorySizeLinkup cs on cs.CategoryID=c.CategoryID
		where cs.CategorySizeLinkID = @CategorySizeLinkUpID

		/*
		if @Categorytype = 1
		begin
			insert into @validatetable
			(brandid, stock)
			values 
			(@BrandID, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		end
		if @Categorytype = 2
		begin
			insert into @validatetable
			(brandid, stock)
			values 
			(@BrandID, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', Glass ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		end
		if @Categorytype = 3
		begin
			insert into @validatetable
			(brandid, stock)
			values 
			(@BrandID, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', sPeg ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		end
		*/

		insert into @validatetable
		(brandid, stock)
		values 
		(@BrandID, convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) + '.' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))


		insert into @stockcocktail (BrandOpeningId, Speg)
		values (@BrandOpeningID, @stockqty)
	end
	else
	begin
		insert into @stockcocktail (BrandOpeningId, Speg)
		values (@BrandOpeningID, @saleqty-@stockqty)
	end

	delete from @tempBrand where BrandOpeningID = @BrandOpeningID
       
 end

 --select * from @validatetable
 --select * from @stockcocktail

declare @cocktailbrand table
(
	cocktailid numeric(18,0),
	brandopeningid numeric(18,0),
	sPeg numeric(18,0)
)

insert into @cocktailbrand
(cocktailid, brandopeningid, sPeg)
Select 
det.cocktailid, det.Brandopeningid, 
case 
	when sc.sPeg is null then temp.qty*(det.Speg)
	else temp.qty*(det.Speg) - temp.qty*(sc.sPeg)
end
from @tempCocktail temp
join tbl_cocktaildetail det on det.cocktailid = temp.cocktailid and det.licenceid = @licenseid
left outer join @stockcocktail sc on sc.BrandOpeningId = det.BrandOpeningId

declare @validatecocktail table
(
	Cocktailid numeric(18,0),
	sPeg varchar(200)
)
declare @cocktailid numeric(18,0)
declare @StockIN char(1)
set @StockIN = 'M'
set @cocktailid = 0

--select * from @cocktailbrand
--select * from tbl_cocktaildetail where cocktailid = 5

while(select count(*) from @cocktailbrand) > 0
begin
	
	select top 1 @cocktailid = cocktailid, @BrandOpeningID = BrandOpeningID from @cocktailbrand order by BrandOpeningID

	select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID 
	from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID
   
	select @StockIN = StockIN from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID
	--print @brandid
	--print @licenseid
	--print @CategorySizeLinkUpID

	insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output
	
	--print 'sachin joglekar'
	--print @saleqty
	--print @stockqty
	
	select @stockqty = @stockqty - sPeg from @stockcocktail where BrandOpeningId = @BrandOpeningId 
	--for printing
	--select @CategorySizeLinkUpID, BottleQty, Speg, Lpeg*2 from @tempBrand where BrandOpeningID = @BrandOpeningID
	if @StockIN <> 'M'
	begin
		select @saleqty = dbo.Fun_Calcunits(@CategorySizeLinkUpID, 0, sPeg) from @cocktailbrand where BrandOpeningID = @BrandOpeningID and cocktailid = @cocktailid
	end
	else
	begin
		select @saleqty = dbo.Fun_CalcunitsForFLR4(@CategorySizeLinkUpID, 0, sPeg) from @cocktailbrand where BrandOpeningID = @BrandOpeningID and cocktailid = @cocktailid
	end
	print 'sachin'
	print @saleqty
	print @stockqty

	if @saleqty > @stockqty
	begin
		insert into @validatecocktail
		(Cocktailid, sPeg)
		values 
		(@cocktailid, 'Bottle ' + convert(varchar,dbo.Fun_Calcbottlefromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)) +', ML ' + convert(varchar, dbo.Fun_Calcspegfromspeg(@saleqty - @stockqty,@CategorySizeLinkUpID)))
		
	end

	delete from @cocktailbrand where BrandOpeningID = @BrandOpeningID and cocktailid = @cocktailid

end

select b.branddesc, v.stock 
from @validatetable v
join tbl_brandhead b on b.brandid = v.brandid
union all
select ch.CocktailName, v.sPeg 
from @validatecocktail v
join tbl_cocktail ch on ch.Cocktailid = v.Cocktailid

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_Qc_FetchControlsDatewise') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_Qc_FetchControlsDatewise
GO

CREATE procedure Spr_Qc_FetchControlsDatewise  
@month int,  
@year int,  
@fromDate smalldatetime = '1-Jan-1900',  
@todate smalldatetime = '1-Jan-1900'  
as    
begin    
  
declare @strSelectVariance varchar(max)  
declare @strWhereVariance varchar(max)  
  
declare @strSelectControls varchar(max)  
declare @strWhereControls varchar(max)  

set @strSelectVariance ='select ch.ControlHeadID,l.LicenseDesc,ch.FromDate,ch.ToDate,ch.GrossRevenue,ch.NetRevenue,ch.ControlDate  from Tbl_ControlsHead ch join Tbl_License l    
on ch.LicenseID=l.LicenseID'  
 if @month = 0 and @year = 0  
  begin  
  set @strWhereVariance = ' where ControlDate between '''+convert(varchar,@fromDate) +''' and ''' + convert(varchar,@todate)+ ''''    
  end  
 else  
  begin  
  set @strWhereVariance = ' where datepart(month,ControlDate)=' + convert(varchar,@month) + ' and datepart(year,ControlDate)='+convert(varchar,@year)  
  end  
--set @strSelectControls = 'select l.LicenseDesc,ControlDate as VarDate from tbl_ControlsHead ch join Tbl_License l  on ch.LicenseID=l.LicenseID'    
--  
-- if @month = 0 and @year = 0  
--  begin  
--  set @strWhereControls = ' where ControlDate between'''+convert(varchar,@fromDate) +'''and ''' + convert(varchar,@todate) +''''  
--  end  
-- else  
--  begin  
--  set @strWhereControls = ' where datepart(month,ControlDate-1)=' + convert(varchar,@month) + ' and datepart(month,ControlDate-1)='+convert(varchar,@year)  
--  end  
 exec (@strSelectVariance + @strWhereVariance)  
-- exec (@strSelectControls + @strWhereControls)	
end 
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_DeleteControls') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_DeleteControls
GO

CREATE proc Spr_DeleteControls  
@ControlID numeric(18,0),
@outbit bit output,  
@outmsg Varchar(40) output  
as   
Begin
	Begin try          
		
		if exists(select ControlHeadID from Tbl_ControlsHead where ControlHeadID=@ControlID and  ParentControlHeadID is null)
		BEGIN			 
			if exists(select ControlHeadID from Tbl_ControlsHead where ParentControlHeadID = @ControlID)
			begin							
				update Tbl_ControlsHead set ParentControlHeadID = null where ParentControlHeadID = @ControlID
			end
			delete from Tbl_ControlsHead where ControlHeadID=@ControlID
			set @OutMsg='Deleted Sucessfully'          
			set @Outbit=1 
		end
		else
		begin
			set @OutMsg='Cannot Delete the Record'            
			set @Outbit=0  
		end
		
	End Try          
	Begin Catch          
		set @OutMsg='Cannot Delete the Record'            
		set @Outbit=0          
	
	End Catch  
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_DeleteVariance') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_DeleteVariance
GO

CREATE proc Spr_DeleteVariance
@LicenseID numeric(18,0),
@VarDate smallDatetime,
@outbit bit output,
@outmsg Varchar(40) output
as 
Begin
	Begin try        
			 Begin tran  
			   if (select count(ControlHeadID) from tbl_controlshead where ControlDate =@VarDate) > 0
					begin
					set @OutMsg='Delete Control Before Variance Please!'       
					set @Outbit= 0 				
					end   
			   else
					begin
					 delete from tbl_Variance where LicenseID=@LicenseID and VarDate=@VarDate
					set @OutMsg='Deleted Sucessfully'        
					set @Outbit=1  
					
					end		        
				   commit	
	End Try        
	Begin Catch        
				set @OutMsg='Cannot Delete the Record'          
				set @Outbit=0        
				rollback          
	End Catch
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SavePeriodMerge]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SavePeriodMerge]  
GO

CREATE Proc [dbo].[Spr_SavePeriodMerge]  
@LicenseID numeric(18,0),
@Description varchar(500),  
@fromdate datetime,  
@todate datetime,  
@MergePeriodXML xml,  
@username varchar(50),  
@Outbit bit output,  
@Outmsg varchar(50) output   
as 
 
begin  
    Declare @TotGrossRevenue numeric(14,2)
    Declare @TotNetRevenue numeric(14,2)
    Declare @NewControlHeadID numeric(14,2)
    
	Declare @hDoc int                
	EXEC sp_xml_preparedocument @hDoc Output, @MergePeriodXML    

	declare  @temp table  
	(  
	ControlHeadID numeric(18,0)  
	)  

	insert into @temp(ControlHeadID)  
	Select ControlHeadID  
	From OpenXML(@hDoc,'/Merge/Period/MergePeriodDet') with          
	(          
	ControlHeadID numeric(18,0)    
	)  
    
    select @TotGrossRevenue=sum(h.GrossRevenue),@TotNetRevenue=sum(h.NetRevenue) 
    from Tbl_ControlsHead h
    join  @temp tmp on tmp.ControlHeadID = h.ControlHeadID
    
    
   insert into tbl_controlshead(LicenseID,FromDate,ToDate,GrossRevenue,NetRevenue,Oprc,Dtc,Descr) values
   (@LicenseID,@fromdate,@todate,@TotGrossRevenue,@TotNetRevenue,@username,getdate(),@Description)
    
   set @NewControlHeadID = scope_identity()
    
   insert into tbl_controlsbrand(Qty,Cost,Oprc,Dtc,ControlHeadID,BrandopeningID)
    select dbo.Fun_CalcQtyForMergePeriod(b.BrandopeningID,convert(varchar,sum(convert(float,b.Qty)))),    
    sum(b.cost),@username,getdate(), @NewControlHeadID, b.BrandopeningID
    from tbl_controlsbrand b
    join @temp tmp on tmp.ControlHeadID = b.ControlHeadID
	group by b.BrandopeningID
	
    update ch set ch.ParentControlHeadID = @NewControlHeadID  
    from tbl_controlshead ch
    join  @temp tmp on tmp.ControlHeadID = ch.ControlHeadID
   
	set @Outbit=1    
	set @OutMsg='Saved Successfully'   

end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveSubCategory]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveSubCategory]  
GO

CREATE Procedure [dbo].[Spr_SaveSubCategory]  
@SubCategoryID Numeric(18,0),  
@CategoryID Numeric(18,0),  
@SubCategoryName Varchar(100),  
@Outbit  bit output,          
@UserName varchar(100),            
@OutMsg  varchar(100) output         
as  
Begin 

declare @saveuser bit    
set @saveuser=1  
 
if @SubCategoryID=0     
begin    
			if Exists(select subCategoryID from tbl_subcategorymst where ltrim(rtrim(subCategoryName))=ltrim(rtrim(@subCategoryName)) and CategoryID = @CategoryID)
			begin        
			set @OutMsg = 'Sub Category Already exists'                      
			set @Outbit = 0      
			set @saveUser=0            
			end   
		
	if @saveuser=1    
		   begin   
			insert into tbl_subcategorymst(CategoryID,SubCategoryName,Oprc,Dtc) values(@CategoryID,@SubCategoryName,@userName,getDate())  
			set @OutMsg = 'Saved Successfully'        
		    set @Outbit = 1     
		end 
end
else   
begin

if Exists(select subCategoryID from tbl_subcategorymst where ltrim(rtrim(subCategoryName))=ltrim(rtrim(@subCategoryName)) and  SubCategoryID<>@SubCategoryID and CategoryID = @CategoryID)
			begin        
			set @OutMsg = 'Sub Category Already exists'                      
			set @Outbit = 0      
			set @saveUser=0            
			end  


if @saveuser=1    
begin   
 
update tbl_subcategorymst set CategoryID=@CategoryID,SubCategoryName=@SubCategoryName,Oprm=@userName,Dtm=getdate()  
where SubCategoryID=@SubCategoryID
set @OutMsg = 'Updated Successfully'        
  set @Outbit = 1        
  end
end
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[spr_fetchCocktailReportDetails]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[spr_fetchCocktailReportDetails]  
GO

CREATE procedure [dbo].[spr_fetchCocktailReportDetails]   
@LicenseID numeric(18,0)  
as  
begin  
	if @LicenseID=0
	begin  

		select c.CocktailName, cr.Rate, vw.branddesc, vw.alias, cd.speg as [Content], vw.licensedesc as License
		from tbl_cocktail c  
		left outer join Tbl_Cocktaildetail cd on cd.cocktailid = c.cocktailid
		left outer join Tbl_Cocktailrate cr on cr.cocktailid = c.cocktailid and cr.licenseid = cd.Licenceid
		left outer join vw_brandopeningdetails vw on vw.brandopeningid = cd.brandopeningid and vw.licenseid = cd.Licenceid
		order by c.CocktailName

		/*
		select c.CocktailName,bh.branddesc,bh.shortname,csl.alias,cd.Speg as [Content] from tbl_cocktail c  
		join Tbl_Cocktaildetail cd on c.cocktailID=cd.CocktailID  
		join tbl_BrandOpening bo on bo.BrandOpeningId=cd.BrandOpeningId  
		join tbl_BrandHead bh on bh.brandID=bo.brandID  
		join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID
		order by c.CocktailName
		*/
	end
	Else
	begin

		select c.CocktailName, cr.Rate, vw.branddesc, vw.alias, cd.speg as [Content], vw.licensedesc as License
		from tbl_cocktail c  
		left outer join Tbl_Cocktaildetail cd on cd.cocktailid = c.cocktailid
		left outer join Tbl_Cocktailrate cr on cr.cocktailid = c.cocktailid and cr.licenseid = cd.Licenceid
		left outer join vw_brandopeningdetails vw on vw.brandopeningid = cd.brandopeningid and vw.licenseid = cd.Licenceid
		where vw.licenseid = @licenseid
		order by c.CocktailName

		/*
		select c.CocktailName,bh.branddesc,bh.shortname,csl.alias,cd.Speg as [Content] from tbl_cocktail c  
		join Tbl_Cocktaildetail cd on c.cocktailID=cd.CocktailID  
		join tbl_BrandOpening bo on bo.BrandOpeningId=cd.BrandOpeningId  
		join tbl_BrandHead bh on bh.brandID=bo.brandID  
		join Tbl_CategorySizeLinkup csl on csl.LicenseID=bo.LicenseID and bo.CategorySizeLinkUpID = csl.CategorySizeLinkID
		where csl.licenseID=@LicenseID 
		order by c.CocktailName
		*/
	end  

end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_ValidateLogin]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_ValidateLogin]  
GO

CREATE procedure [dbo].[Spr_ValidateLogin] 
@UserName varchar(100),
@Password varchar(100)
as
begin
	declare @Version int
	set @Version = 1
	begin try
		select @Version = isnull(Version,1) from Tbl_ClientMaster
	end try
	begin catch
		select @Version = 1
	end catch

	select userid,[user],password, 'Version : CWPlus.'+ convert(varchar,@Version) as Version
	from tbl_usermaster 
	where lower(ltrim(rtrim([user])))=lower(ltrim(rtrim(@UserName))) and lower(ltrim(rtrim(password)))=lower(ltrim(rtrim(@Password)))
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[spr_SaveAssignMMSCode]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[spr_SaveAssignMMSCode]  
GO

CREATE procedure spr_SaveAssignMMSCode
@MMSCodeID numeric(18,0),                               
@BrandID  numeric(18,0),  
@AssignBrandXML XML,      
@SizeID numeric(18,0),   
@TypeID numeric(18,0),                           
@LicenseID  numeric(18,0),  
@username varchar(100),                        
@Outbit    bit output,                          
@OutMsg    varchar(100) output                                
as                                
begin   
  if  @MMSCodeID = 0  
   begin  
    Declare @hDoc int                                        
    EXEC sp_xml_preparedocument @hDoc Output, @AssignBrandXML  
    declare @temptable table                        
    (                        
    BrandCode varchar(50),                                
    TypeID numeric(18,0)                          
    )                        
    insert into @temptable                        
    (BrandCode, TypeID )                        
    Select                         
    BrandCode,TypeID -- CategorySizeLinkUpID                        
    From OpenXML(@hDoc,'/Master/AssignBrandCode/AssignBrandCodeDet') with                                  
    (                            
    BrandCode varchar(50),                                
    TypeID numeric(18,0)                          
    )  
    insert into tbl_mmscode (BrandID,Brandcode,TypeID,SizeID,LicenseID,DTC,Oprc)  
    Select @BrandID,BrandCode,TypeID,@SizeID,@LicenseID, getdate(),@Username from @temptable      
--      
--    insert into tbl_mmscode (BrandID,SizeID,TypeID,LicenseID,DTC,Oprc) values  
--    (@BrandID,@SizeID,@TypeID,@LicenseID,getdate(),@username)  
    set @Outbit =1  
    set @OutMsg ='Record has been saved Successfully!'   
   end  
  else  
   begin                                        
    EXEC sp_xml_preparedocument @hDoc Output, @AssignBrandXML  
                       
    insert into @temptable                        
    (BrandCode, TypeID )                        
    Select                         
    BrandCode,TypeID -- CategorySizeLinkUpID                        
    From OpenXML(@hDoc,'/Master/AssignBrandCode/AssignBrandCodeDet') with                                  
    (                            
    BrandCode varchar(50),                                
    TypeID numeric(18,0)                          
    )  
    update tbl_mmscode set BrandID =@BrandID ,SizeID = @SizeID,TypeID =@TypeID,  
    LicenseID = @LicenseID,dtm = getdate(), Brandcode =(select BrandCode from @temptable),Oprc =@username  
    where MMSCodeID =@MMSCodeID  
    set @Outbit =1  
    set @OutMsg ='Record has been updated Successfully!'   
   end  
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchAssignMMSCode') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchAssignMMSCode
GO

CREATE Procedure Spr_FetchAssignMMSCode             
@MMSID numeric(18,0),            
@LicenseID numeric(18,0),         
@AssignBrandCodeID numeric(18,0)              
as              
begin   
if @MMSID > 0  
	begin  
	select abc.MMSCodeID,abc.BrandID,abc.SizeID,abc.Brandcode,abc.TypeID,abc.LicenseID,
	 case             
		when abc.TypeID=1 then 'Btl'             
		when abc.TypeID=2 then 'sPeg'            
		when abc.TypeID=3 then 'lPeg'            
		end as BottleType,sz.SizeDesc from tbl_MMSCode abc join tbl_size sz on abc.sizeid = sz.sizeid where MMSCodeID = @MMSID  and brandid=@AssignBrandCodeID
	end  
else  
begin  
	select abc.MMSCodeID,abc.BrandID,abc.SizeID,abc.Brandcode,abc.TypeID,abc.LicenseID,
	case             
		when abc.TypeID=1 then 'Btl'             
		when abc.TypeID=2 then 'sPeg'            
		when abc.TypeID=3 then 'lPeg'            
		end as BottleType,sz.SizeDesc
	from tbl_MMSCode abc join tbl_size sz on abc.sizeid = sz.sizeid where LicenseID=@LicenseID and abc.BrandID =@AssignBrandCodeID
	end    
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'spr_deleteAssignMMScode') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE spr_deleteAssignMMScode
GO

--select * from sysobjects where type='p' and name like '%brand%'
CREATE Proc spr_deleteAssignMMScode       
@MMSID numeric(18,0),  
@LicenseId numeric(18,0),          
@Outbit bit output,          
@OutMsg varchar(50) output          
as          
Begin try          
 Begin tran          
 delete from tbl_MMSCode where MMSCodeID=@MMSID and LicenseId=@LicenseId     
         
set @OutMsg='Deleted Sucessfully'          
set @Outbit=1            
 commit          
End Try          
Begin Catch          
set @OutMsg='Cannot Delete the Record'            
set @Outbit=0          
 rollback            
End Catch    

GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'spr_updateClient') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE spr_updateClient
GO

--Update Proc.
CREATE proc spr_updateClient
@clientID numeric(18,0),
@clientName varchar(100),
@LicID numeric(18,0),
@outbit bit output,
@outmsg varchar(max) output
as
begin
	if (select count(ClientId) from Tbl_ClientMaster) = 0
	begin
		insert into Tbl_ClientMaster
		(ClientId,ClientName,Version,Oprc,Dtc,licenseid)
		values
		(1, @clientName, 1, 'admin', getdate(), @LicID)
	end
	else
	begin
		update tbl_clientmaster set 
		ClientName =ltrim(rtrim(@clientName)), licenseid =@LicID where ClientId =@clientID
	end
	set @outmsg ='Record has been updated Successfully'
	set @outbit =1
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'spr_fetchClient') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE spr_fetchClient
GO

--Fetch Proc  
CREATE proc spr_fetchClient  
as  
begin  
select * from tbl_clientmaster  
end  
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_BaseOptimumqty]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_BaseOptimumqty]    
GO

CREATE procedure [dbo].[Spr_BaseOptimumqty]    
@date datetime,    
@LicenseID numeric(18,0)    
as    
begin
	declare @address varchar(200)
	declare @LicenseDesc varchar(200)
	declare @LicenseNo varchar(200)

	set @address = ''
	set @LicenseDesc = ''
	set @LicenseNo = ''

	select @LicenseDesc = ltrim(rtrim(isnull(LicenseDesc,''))), @LicenseNo = ltrim(rtrim(isnull(LicenseNo,''))), 
	@address = isnull(Add1,'') + ' '+ isnull(Add2,'') from tbl_license where licenseid = @LicenseID    
	
	declare @tempbrand table  
	(
		Date smalldatetime,
		brandopeningid numeric(18,0),
		CategorySizeLinkID numeric(18,0),  		
		Opening numeric(18,0),  		
		Purchase numeric(18,0),  		
		Sale numeric(18,0),  		
		Closing numeric(18,0)
	)

    insert into @tempbrand exec [Spr_FetchFlr3ChataiBrandwise] @licenseID, @date, @date

	select
	vw.categorydesc as Category, vw.SubCategoryName as Subcategory, vw.branddesc as Brand, vw.alias as [Size], isnull(bo.OptimumLevel,0) as [Optimum Level],
	convert(varchar,dbo.Fun_CalcBottlefromspeg(temp.Opening, temp.CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(temp.Opening, temp.CategorySizeLinkID)) as Opening,
	convert(varchar,dbo.Fun_CalcBottlefromspeg(temp.Purchase, temp.CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(temp.Purchase, temp.CategorySizeLinkID)) as Purchase,
	convert(varchar,dbo.Fun_CalcBottlefromspeg(temp.Sale, temp.CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(temp.Sale, temp.CategorySizeLinkID)) as Sale,
	convert(varchar,dbo.Fun_CalcBottlefromspeg(temp.Closing, temp.CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(temp.Closing, temp.CategorySizeLinkID)) as Closing,
	isnull(bo.BaseQty,0) as BaseQty,
	case 
		when temp.Closing <= dbo.Fun_Calcunits(temp.CategorySizeLinkID, isnull(bo.BaseQty,0), 0) then isnull(bo.ReorderLevel,0)
		else 0
	end as [Reorder Level],
	case
		when temp.Closing > dbo.Fun_Calcunits(temp.CategorySizeLinkID, isnull(bo.OptimumLevel,0),0) 
		then
		convert(varchar,dbo.Fun_CalcBottlefromspeg(temp.Closing - dbo.Fun_Calcunits(temp.CategorySizeLinkID, isnull(bo.OptimumLevel,0),0) , temp.CategorySizeLinkID)) 
		+ '.' 
		+ convert(varchar,dbo.Fun_Calcspegfromspeg(temp.Closing - dbo.Fun_Calcunits(temp.CategorySizeLinkID, isnull(bo.OptimumLevel,0),0), temp.CategorySizeLinkID))
		else '0'
	end as [Excess Quantity], @LicenseDesc as LicenseDesc, @LicenseNo as LicenseNo, @address as address
	from @tempbrand temp
	join tbl_brandopening bo on bo.brandopeningid = temp.brandopeningid 
	join vw_brandopeningdetails vw on vw.brandopeningid = bo.brandopeningid
	order by vw.categorydesc, vw.SubCategoryName, vw.branddesc
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchParentMenuForPriority]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchParentMenuForPriority]    
GO

CREATE procedure [dbo].[Spr_FetchParentMenuForPriority] 
@MenuId numeric(18,0)
as
begin
	select Menuid, menudesc as Menu, Priority
	from Tbl_Menu where parentmenuid=@menuId
	order by Priority
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_UpdateMenuPriority') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_UpdateMenuPriority
GO

Create Procedure Spr_UpdateMenuPriority
@XmlDoc xml,
@Outbit bit output,
@OutMsg varchar(100) output
As
Begin

	declare @hdocMenu int          
	exec sp_xml_preparedocument @hdocMenu output, @XmlDoc  

	declare @tempmenu table
	(
		Menuid int,
		Priority int
	)

	insert into @tempmenu          
	(Menuid, Priority)
	select          
	Menuid, Priority
	From OpenXML(@hdocMenu,'/Master/UserLicenseMaster/UserLicense') with                          
	(          
		Menuid int,
		Priority int    
	)

	Update m
	set m.Priority = t.Priority
	from tbl_menu m
	join @tempmenu t on m.menuid = t.menuid

	set @Outbit = 1
	set @OutMsg  = 'Updated successfully'

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'spr_fetchSizeBrandCatgwise') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE spr_fetchSizeBrandCatgwise
GO

CREATE proc spr_fetchSizeBrandCatgwise
@Brandid numeric(18,0),        
@LicenseID numeric(18,0)     
as 
begin
select a.SizeID,a.Alias from Tbl_CategorySizeLinkup a
join  tbl_brandhead  hd on a.CategoryID = hd.CategoryID where hd.brandid = @Brandid and a.LicenseID =@LicenseID
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveSupplier]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveSupplier]
GO

--Created by : Naresh      
--This procedure is to save Supplier Details  
CREATE Procedure [dbo].[Spr_SaveSupplier]      
@SupplierID numeric(18,0),
@SupplierName varchar(200),
@Address varchar(500),
@City varchar(100),
@Pincode varchar(50),
@Telephone varchar(50),
@Email varchar(100), 
@suppliercode varchar(100),         
@Username varchar(100),      
@Outbit  bit output,      
@OutMsg  varchar(100) output        
As      
Begin      
 if @SupplierID = 0      
 begin      
  insert into tbl_Supplier(SupplierName,Address,City,Pincode,Telephone,Email,suppliercode, Oprc, Dtc)      
  values (@SupplierName,@Address,@City,@Pincode,@Telephone,@Email,@suppliercode, @Username, getdate())      
  set @OutMsg = 'Saved Successfully'      
  set @Outbit = 1      
 end      
 else      
 begin      
  update tbl_Supplier      
  set SupplierName=@SupplierName,Address=@Address,City=@City,Pincode=@Pincode,suppliercode=@suppliercode,
  Telephone=@Telephone,Email=@Email,    
  Oprm = @Username, dtm = getdate()      
  where SupplierID  = @SupplierID      
      
  set @OutMsg = 'Updated Successfully'      
  set @Outbit = 1      
 end      
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchSupplier]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchSupplier]
GO

CREATE Procedure [dbo].[Spr_FetchSupplier]      
@SupplierID numeric(18,0)      
As      
Begin      
 if @SupplierID = 0      
 begin  
 Select SupplierID,SupplierName,isnull(Address,'') as Address,isnull(City,'') as City,isnull(Pincode,'') as Pincode,isnull(suppliercode,'') as suppliercode,
 isnull(Telephone,'') as Telephone,isnull(Email,'') as Email from tbl_Supplier  

end      
 else      
 begin      
   Select SupplierName,isnull(Address,'') as Address,isnull(City,'') as City,isnull(Pincode,'') as Pincode,isnull(suppliercode,'') as suppliercode,
 isnull(Telephone,'') as Telephone,isnull(Email,'') as Email from tbl_Supplier  where SupplierID=@SupplierID    
 end      
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchFlr3ChataiBrandwise]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchFlr3ChataiBrandwise]
GO

--this procedure is same as Flr3 chatai report but it returns brand wise report
CREATE procedure [dbo].[Spr_FetchFlr3ChataiBrandwise]    
@licenseID numeric(18,0),
@fromdate datetime,
@todate datetime
as    
begin

Declare @enddate datetime    
declare @strtpno varchar(max)
declare @trnstrtpno varchar(max)

declare @tptable table
(
	tpno varchar(max),
	trntpno varchar(max),
	tpdate smalldatetime
)

declare @tmpFinal table
(
	Date datetime,
	brandopeningid numeric(18,0),
	CategorySizeLinkID numeric(18,0),  
	Opening varchar(10),
	Purchase varchar(10),
	Sale varchar(10),
	Closing varchar(10)
)

declare @tmpMain table
(
	
	iden int identity(1,1),
	fordate smalldatetime,
	categorydesc varchar(100),
	particular int,
	alias varchar(20),
	totalsize varchar(20),
	Licenseno varchar(100),
	Licensename varchar(100)
)

--set @xmlDoc = '<Master><CocktailReports><Report LicenseID="3" FromDate="27-Jan-2013" ToDate="27-Jan-2013" Brand="" Category="" Size="" Cocktail="" /></CocktailReports></Master>'
--    
--exec sp_xml_preparedocument @hdoc output,@xmlDoc    
--  
--select @licenseID=LicenseID, @fromdate=FromDate,@todate=ToDate, @enddate = ToDate
--from openXML(@hDoc,'/Master/CocktailReports/Report') with    
--(  
--LicenseID numeric(18,0),  
--FromDate datetime,  
--ToDate datetime
--)  

--set @fromdate='15-Dec-2012'
--set @todate='16-Dec-2012'
--set @licenseID = 4

set @enddate = @todate

Declare @licno  varchar(100)      
Declare @liname varchar(100)      
set @licno=''      
set @liname=''      
select @licno= licenseno from tbl_license where licenseid=@licenseid      
select @liname= licensedesc from tbl_license where licenseid=@licenseid     

declare @brandid numeric(18,0)  
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandOpeningID numeric(18,0)

declare @StockIN char(1)    
declare @spegqty numeric(18,0)    
declare @sizeml int    
declare @totalspges numeric(18,0)

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

declare @opUnitQty numeric(18,0)
declare @purUnitQty numeric(18,0)
declare @totUnitQty numeric(18,0)
declare @salUnitQty numeric(18,0)

	declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0)
	)  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	) 
	--create index ind_brandid on @tempbrand(brandid)

	--alter index ind_brandid rebuild 
	  
while(@enddate >= @fromdate)
begin

	set @todate = @fromdate

	delete from @tempbrand

	insert into @tempbrand
	(brandopeningid, brandid, CategorySizeLinkID, categorydesc, Alias, Particular, UnitQty)
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 1, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 2, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 3, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 4, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 5, 0
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'       
	order by CategorySizeLinkUpID 


	
       
	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid  


	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @BrandOpeningID = 0


	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			--print @totalspges    

			--select * from tbl_purchasedetail  

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * - 1  
--			end  

			--print @totalspges    
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand   
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end    
		else    
		begin    

			--print 'Rakesh'
			--set @date = '31-May-2012'  

			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			-- print @totalspges  

--			if @totalspges < 0  
--			begin  
--				set @totalspges = @totalspges * -1  
--			end  

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

--			update @tempbrand    
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),    
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)  
--			where BrandOpeningID=@BrandOpeningID

		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid



		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		
		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID


			
			--print @totalspges  

			--select * from tbl_purchasedetail

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID			
--       
--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end

			--print @totalspges

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3
			

--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID 

		end  
		else  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId         
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

						
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2  

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where brandid = @brandid and CategorySizeLinkID = @CategorySizeLinkUpID  

		end

		delete from @tempwhile where brandopeningid = @brandopeningid
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'   
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		
		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * - 1
--			end
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			print @totalspges  
--
--			update @tempbrand 
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID),
--			tpno=@strtp
--			where BrandOpeningID=@BrandOpeningID

		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			-- print @totalspges

--			if @totalspges < 0
--			begin
--				set @totalspges = @totalspges * -1
--			end
		
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

--			update @tempbrand  
--			set bottle = dbo.Fun_Calcbottlefromspeg(@totalspges,@CategorySizeLinkUpID),  
--			Speg = dbo.Fun_Calcspegfromspeg(@totalspges,@CategorySizeLinkUpID)
--			where BrandOpeningID=@BrandOpeningID
		end      

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end



	insert into @tmpFinal
	(Date, brandopeningid, CategorySizeLinkID, Opening, Purchase, Sale, Closing)
	select 
	distinct @fromdate, brandopeningid, CategorySizeLinkID, 0, 0, 0, 0
	from @tempbrand order by brandopeningid

	update f
	set f.Opening = b.unitqty
	from @tmpFinal f
	join @tempbrand b on f.brandopeningid = b.brandopeningid 
	where convert(smalldatetime, convert(varchar,f.Date,102)) = convert(smalldatetime, convert(varchar,@fromdate,102))
	and b.Particular = 1

	update f
	set f.Purchase = b.unitqty
	from @tmpFinal f
	join @tempbrand b on f.brandopeningid = b.brandopeningid 
	where convert(smalldatetime, convert(varchar,f.Date,102)) = convert(smalldatetime, convert(varchar,@fromdate,102))
	and b.Particular = 2

	update f
	set f.Sale = b.unitqty
	from @tmpFinal f
	join @tempbrand b on f.brandopeningid = b.brandopeningid 
	where convert(smalldatetime, convert(varchar,f.Date,102)) = convert(smalldatetime, convert(varchar,@fromdate,102))
	and b.Particular = 4

	update f
	set f.Closing = b.unitqty
	from @tmpFinal f
	join @tempbrand b on f.brandopeningid = b.brandopeningid 
	where convert(smalldatetime, convert(varchar,f.Date,102)) = convert(smalldatetime, convert(varchar,@fromdate,102))
	and b.Particular = 5
	
	
	set @strtpno = ''
	set @trnstrtpno = ''

	select @strtpno=@strtpno + isnull(ph.TPno,'') + ', '  
	from tbl_purchasehead ph              
	where  convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) = convert(smalldatetime,convert(varchar,@fromdate,102))
	and LicenseId=@licenseID

	select @strtpno=@strtpno + isnull(ph.TPno,'') + ', '  
	from Tbl_TransferHeadMst ph              
	where  convert(smalldatetime,convert(varchar,ph.TransferDate,102)) = convert(smalldatetime,convert(varchar,@fromdate,102))
	and ForLicenseID=@licenseID

	select @trnstrtpno=@trnstrtpno + isnull(ph.TPno,'') + ', '  
	from Tbl_TransferHeadMst ph              
	where  convert(smalldatetime,convert(varchar,ph.TransferDate,102)) = convert(smalldatetime,convert(varchar,@fromdate,102))
	and LicenseId=@licenseID


	if @strtpno <> ''
	begin
		select @strtpno=SUBSTRING(@strtpno,1,LEN(@strtpno) - 1)
	end

	if @trnstrtpno <> ''
	begin
		select @trnstrtpno=SUBSTRING(@trnstrtpno,1,LEN(@trnstrtpno) - 1)
	end

	insert into @tptable(tpno, trntpno, tpdate) values(@strtpno, @trnstrtpno, @fromdate)

	insert into @tmpMain	
	(fordate,categorydesc,particular,alias,totalsize,Licenseno,Licensename)
	select
	@fromdate, ltrim(rtrim(categorydesc)), convert(varchar,Particular), ltrim(rtrim(Alias)), 
	ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(UnitQty),CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(UnitQty),CategorySizeLinkID)))) as totsale,
	ltrim(rtrim(@licno)) as  fllicno,ltrim(rtrim(@liname)) as  fllicname
	from @tempbrand
	group by categorydesc, Alias, Particular, CategorySizeLinkID

	set @fromdate = @fromdate + 1
end

--select * from @tempbrand order by brandopeningid
select Date, brandopeningid, CategorySizeLinkID, Opening, Purchase, Sale, Closing from @tmpFinal order by brandopeningid
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Fun_CalcunitsForVariance]') AND xtype in (N'FN', N'IF', N'TF'))
DROP FUNCTION [dbo].[Fun_CalcunitsForVariance]
GO

--This function is used calculate for fetch variance stock check hardcode
CREATE Function [dbo].[Fun_CalcunitsForVariance]
(
	@CategorySizeLinkUpID numeric(18,0),
	@BottleQuantity numeric(18,0),
	@sPegQuantity numeric(18,0)
)  
Returns int
As
Begin

	
	declare @StockIN char(1)
	declare @spegqty numeric(18,0)
	declare @sizeml int
	declare @totalspges numeric(18,0)
	

	set @StockIN = 'G'
	set @spegqty = 0
	set @sizeml = 0
	set @totalspges = 0
	
	
	
	select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID

	if lower(@StockIN) = 'm'
	begin

		set @totalspges = @BottleQuantity * @sizeml
		set @totalspges = @totalspges + (@sPegQuantity*@spegqty)
		
	End
	else if lower(@StockIN) = 'b'
	begin
		set @totalspges = @BottleQuantity --* @sizeml
		--set @totalspges = @totalspges + (@sPegQuantity*@spegqty)
		
	End
	else
	begin
		set @totalspges = @BottleQuantity * @spegqty
		set @totalspges = @totalspges + @sPegQuantity
	end 

	return @totalspges
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_QV_FetchVarians]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_QV_FetchVarians]
GO

CREATE procedure [dbo].[Spr_QV_FetchVarians] 
@CategorySizeLinkID numeric(18,0),
@bookbottel numeric(18,0),
@bookspeg numeric(18,0),
@actualbottel numeric(18,0),
@actspeg numeric(18,0),
@type char(1)
as
begin
	/*
	set @CategorySizeLinkID = 12
	set @bookbottel = 26
	set @bookspeg = 330
	set @actualbottel = 16
	set @actspeg = 12
	set @type = 'M'
	*/

	declare @NoOfSpeg int
	declare @noofbottle int
	declare @StockIN char(1)
	declare @PegSize numeric(18,0)
	declare @bottlesize numeric(18,0)
	set @StockIN = ''
	set @PegSize = 0

	select 
	@StockIN = ltrim(rtrim(StockIN)), @PegSize=PegSize, @NoOfSpeg = NoOfSpeg, @bottlesize = ML 
	from tbl_categorysizelinkup where CategorySizeLinkID = @CategorySizeLinkID


	declare @calactualunit_var numeric(18,0)
	declare @calbookunit_var numeric(18,0)

	declare @calactualunit numeric(18,0)
	declare @calbookunit numeric(18,0)
	declare @difference numeric(18,0)

	select @calactualunit_var = dbo.Fun_CalcunitsForVariance(@CategorySizeLinkID,@actualbottel,@actspeg)
	select @calbookunit_var = dbo.Fun_CalcunitsforMLVariance(@CategorySizeLinkID,@bookbottel,@bookspeg)

	select @calactualunit = dbo.Fun_CalcunitsForVariance(@CategorySizeLinkID,@actualbottel,@actspeg)
	select @calbookunit = dbo.Fun_CalcunitsforMLVariance(@CategorySizeLinkID,@bookbottel,@bookspeg)

	select @difference = @calactualunit - @calbookunit

	if @difference < 0 
	begin 
		select @difference = @difference * -1
	end

	declare @temtable table
	(
	Bottle numeric(18,0),
	Speg numeric(18,0),
	Glass numeric(18,0),
	hdBottle numeric(18,0),
	hdSpeg numeric(18,0),
	hdGlass numeric(18,0)
	)
	insert into @temtable values(0,0,0,0,0,0)

	--select @difference, dbo.Fun_calbottlefromml(@difference,@CategorySizeLinkID,@type)

	if upper(@StockIN) = 'M'
	begin
		if upper(@type) = 'P'
		begin
			update @temtable 
			set  hdBottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			hdSpeg = dbo.Fun_Calcspegfromspeg (@difference,@CategorySizeLinkID),
			--Bottle = @difference / @bottlesize,
			Bottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			speg = (@difference % @bottlesize) / @PegSize,
			Glass=0, hdGlass=0
		end
		else
		begin
			update @temtable 
			set hdBottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			hdSpeg = dbo.Fun_Calcspegfromspeg (@difference,@CategorySizeLinkID),
			Bottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			speg = dbo.Fun_Calcspegfromspeg (@difference,@CategorySizeLinkID),
			Glass=0, hdGlass=0
		end
	end
	else
	begin
		if upper(@type) = 'P'
		begin
			update @temtable 
			set  hdBottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			hdSpeg = dbo.Fun_Calcspegfromspeg (@difference,@CategorySizeLinkID),
			Bottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			speg = dbo.Fun_Calcspegfromspeg (@difference,@CategorySizeLinkID),
			Glass=0, hdGlass=0
		end
		else
		begin
			update @temtable 
			set  hdBottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			hdSpeg = dbo.Fun_Calcspegfromspeg (@difference,@CategorySizeLinkID),
			--Bottle = convert(int,@difference / @NoOfSpeg),
			Bottle = dbo.Fun_Calcbottlefromspeg(@difference,@CategorySizeLinkID),
			speg = (@difference % @NoOfSpeg) * @PegSize,
			Glass=0, hdGlass=0
		end
	end

	if @calactualunit >= @calbookunit
	begin
		select Bottle,Speg,hdBottle,hdSpeg from @temtable
	end
	else
	begin

		select 
		case 
			when Bottle <> 0 then '-' + convert(varchar,Bottle) 
			else  Bottle 
		end  as Bottle ,
		case 
			when Speg <> 0 then '-' + convert(varchar,Speg)  
			else Speg 
		end as Speg ,
		case 
			when hdBottle <> 0 then '-' + convert(varchar,Bottle) 
			else  hdBottle 
		end  as hdBottle ,
		case 
			when hdSpeg <> 0 then '-' + convert(varchar,Speg)  
			else hdSpeg 
		end as hdSpeg
		from @temtable

	end
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_BangaloreFetchBrandWise]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_BangaloreFetchBrandWise]    
GO

CREATE procedure [dbo].[Spr_BangaloreFetchBrandWise]
@LicenseXML xml,  
@fromdate datetime,    
@todate datetime,    
@IsCombined bit    
as        
begin

declare @LicenseDesc varchar(100)
declare @LicenseNo varchar(100)
set @LicenseDesc = ''
set @LicenseNo = ''

Declare @hdoc int
Declare @licenseID numeric(18,0)
    
exec sp_xml_preparedocument @hdoc output,@LicenseXML    
  
declare @tempLicense table    
(    
licenseid numeric(18,0)    
)    
insert into @tempLicense(licenseid)    
Select licenseid    
From OpenXML(@hDoc,'/CWPLUS/AllLicense/License') with                          
(                          
LicenseID numeric(18,0)    
)

select @LicenseDesc = ltrim(rtrim(isnull(l.LicenseDesc,'00'))), @LicenseNo = ltrim(rtrim(isnull(l.LicenseNo,'00')))
from tbl_license l
join @tempLicense temp on l.licenseid = temp.licenseid

declare @temmpTPNo table
(
	TPNo varchar(8000)
)

  

Declare @licno  varchar(100)      
Declare @liname varchar(100)      
set @licno=''      
set @liname=''      
select @licno= licenseno from tbl_license where licenseid=@licenseid      
select @liname= licensedesc from tbl_license where licenseid=@licenseid     

declare @brandid numeric(18,0)  
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandOpeningID numeric(18,0)

declare @StockIN char(1)    
declare @spegqty numeric(18,0)    
declare @sizeml int    
declare @totalspges numeric(18,0)

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

declare @opUnitQty numeric(18,0)
declare @purUnitQty numeric(18,0)
declare @totUnitQty numeric(18,0)
declare @salUnitQty numeric(18,0)


declare @strtp varchar(max)

	declare @tempMainbrand table  
	(
		brandid numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0),
		SubCategoryName varchar(500),
		bottlesize numeric(18,0),
		StockIN char(1),
		Speg int,
		TPNo varchar(8000)
	)

	declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0),
		SubCategoryName varchar(500),
		TPNo varchar(8000)
	)  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	)

while (select count(licenseid) from @tempLicense) > 0    
begin    
	select top 1 @LicenseID = licenseid from @tempLicense order by licenseid    
  
	delete from @tempbrand
	insert into @tempbrand
	(brandopeningid, brandid, CategorySizeLinkID, categorydesc, Alias, Particular, UnitQty,SubCategoryName)
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 1, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 2, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 3, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 4, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 5, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'       
	order by CategorySizeLinkUpID 

	delete from @tempwhile
       
	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid  

	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @BrandOpeningID = 0


	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
			

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

		   
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

		end    
		else    
		begin    

		
			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 

			
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
			

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

		

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid



		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp=''

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

			delete from @temmpTPNo

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID


			insert into @temmpTPNo(TPNo)
			select ph.TPno 
			--select @strtp=@strtp + ph.TPno 
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			--print @totalspges  
			
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	


			insert into @temmpTPNo(TPNo)
			select th.Tpno
			--select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			
			--delete t
			--from @temmpTPNo t
			--group by t.TPNo
			--having count(t.TPno) > 1

			--select @strtp = TPno from @temmpTPNo
			select @strtp = isnull(TPno,'') + ', ' + @strtp  from @temmpTPNo

			Update @tempbrand set TPNo = isnull(TPNo,'') + @strtp where BrandOpeningID=@BrandOpeningID

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3
			

		end  
		else  
		begin  

			delete from @temmpTPNo

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			insert into @temmpTPNo(TPNo)
			select ph.TPno
			--select @strtp=@strtp + ph.TPno
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			
								
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

			insert into @temmpTPNo(TPNo)
			select th.Tpno
			--select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			
			--delete t
			--from @temmpTPNo t
			--group by t.TPNo
			--having count(t.TPno) > 1

			--select @strtp = TPno from @temmpTPNo
			select @strtp = isnull(TPno,'') + ', ' + @strtp  from @temmpTPNo

			Update @tempbrand set TPNo = isnull(TPNo,'') + @strtp where BrandOpeningID=@BrandOpeningID

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2  

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3

		end

		delete from @tempwhile where brandopeningid = @brandopeningid
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'   
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp='' 

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			--from Tbl_TransferHeadMst th            
			--join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			--where td.BrandOpeningID=@BrandOpeningID  
			--and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			

			--Update @tempbrand set TPNo = isnull(TPNo,'') + @strtp where BrandOpeningID=@BrandOpeningID

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			
			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			--select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			--from Tbl_TransferHeadMst th            
			--join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			--where td.BrandOpeningID=@BrandOpeningID  
			--and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			
			--Update @tempbrand set TPNo = isnull(TPNo,'') + @strtp where BrandOpeningID=@BrandOpeningID

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

		end      

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	insert into @tempMainbrand
	(brandid,  categorydesc, Alias, Particular, UnitQty, SubCategoryName, bottlesize, StockIN, Speg, TPNo)
	select temp.brandid, temp.categorydesc, temp.Alias, temp.Particular, temp.UnitQty, temp.SubCategoryName, lnk.ML, lnk.StockIN, lnk.Speg, TPNo
	from @tempbrand temp
	join tbl_brandopening bo on bo.brandopeningid = temp.brandopeningid
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID

	delete from @tempLicense where licenseid = @Licenseid    
     
end     

--select * from @tempMainbrand

select brandid,  ltrim(rtrim(categorydesc)) as categorydesc, ltrim(rtrim(Alias)) as Alias, subcategoryname, bottlesize, StockIN, Speg, TPNo,
[1] as Opening, [2] as Purchase, [3] as Total, [4] as Sale, [5] as Closing
into #tempKARN from 
(select 
brandid,  categorydesc, Alias, subcategoryname, bottlesize, StockIN, Speg, TPNo, Particular, UnitQty
from @tempMainbrand) As SourceTable
PIVOT
(
	sum(UnitQty)
	for Particular in ([1], [2], [3], [4], [5])
) AS PivotTable order by brandid

select 
@LicenseDesc as License, @LicenseNo as LicenseNumber, @fromdate as Date, ltrim(rtrim(bh.BrandDesc)) as BrandDesc, t.Alias as [Size], 
Case
	when len(ltrim(rtrim(TPNo))) > 1 then substring(ltrim(rtrim(TPNo)),1,len(ltrim(rtrim(TPNo)))-1)
	else ''
end as PermitNo,
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Opening, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Opening, t.Speg, t.stockin, t.bottlesize)) as Opening,    
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Purchase, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Purchase, t.Speg, t.stockin, t.bottlesize)) as Purchase,    
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Sale, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Sale, t.Speg, t.stockin, t.bottlesize)) as Sale,    
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Closing, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Closing, t.Speg, t.stockin, t.bottlesize)) as Closing,    
ltrim(rtrim(t.CategoryDesc)) as CategoryDesc, ltrim(rtrim(t.subcategoryname)) as subcategorydesc
from #tempKARN t
join tbl_brandhead bh on bh.brandid = t.brandid

drop table #tempKARN
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].Spr_BangaloreFetchBrandWiseMultiLicense') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].Spr_BangaloreFetchBrandWiseMultiLicense    
GO

CREATE procedure [dbo].Spr_BangaloreFetchBrandWiseMultiLicense
@LicenseXML xml,  
@fromdate datetime,    
@todate datetime,    
@IsCombined bit    
as        
begin

declare @LicenseDesc varchar(100)
declare @LicenseNo varchar(100)
set @LicenseDesc = ''
set @LicenseNo = ''

select @LicenseDesc = ltrim(rtrim(isnull(l.LicenseDesc,'00'))), @LicenseNo = ltrim(rtrim(isnull(l.LicenseNo,'00')))
from tbl_license l
join tbl_ClientMaster c on l.licenseid = c.licenseid

Declare @hdoc int
Declare @licenseID numeric(18,0)
    
exec sp_xml_preparedocument @hdoc output,@LicenseXML    
  
declare @tempLicense table    
(    
licenseid numeric(18,0)    
)    
insert into @tempLicense(licenseid)    
Select licenseid    
From OpenXML(@hDoc,'/CWPLUS/AllLicense/License') with                          
(                          
LicenseID numeric(18,0)    
)
  

Declare @licno  varchar(100)      
Declare @liname varchar(100)      
set @licno=''      
set @liname=''      
select @licno= licenseno from tbl_license where licenseid=@licenseid      
select @liname= licensedesc from tbl_license where licenseid=@licenseid     

declare @brandid numeric(18,0)  
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandOpeningID numeric(18,0)

declare @StockIN char(1)    
declare @spegqty numeric(18,0)    
declare @sizeml int    
declare @totalspges numeric(18,0)

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

declare @opUnitQty numeric(18,0)
declare @purUnitQty numeric(18,0)
declare @totUnitQty numeric(18,0)
declare @salUnitQty numeric(18,0)


declare @strtp varchar(max)

declare @temmpTPNo table
(	
	TPNo varchar(8000)
)


declare @FinalTPNo table
(
	Brandid numeric(18,0),
	TPNo varchar(8000)
)
insert into @FinalTPNo(Brandid, TPNo)
select brandid, ''
from tbl_brandhead --where brandid = 3813


	declare @tempMainbrand table  
	(
		brandid numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0),
		SubCategoryName varchar(500),
		bottlesize numeric(18,0),
		StockIN char(1),
		Speg int,
		TPNo varchar(8000)
	)

	declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Particular int,
		UnitQty numeric(18,0),
		SubCategoryName varchar(500),
		TPNo varchar(8000)
	)  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	)

while (select count(licenseid) from @tempLicense) > 0    
begin    
	select top 1 @LicenseID = licenseid from @tempLicense order by licenseid    
  
	delete from @tempbrand
	insert into @tempbrand
	(brandopeningid, brandid, CategorySizeLinkID, categorydesc, Alias, Particular, UnitQty,SubCategoryName)
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 1, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813--and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 2, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813--and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 3, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813--and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 4, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813--and categorydesc = 'IMPORTED BEER' and alias = '330'
	union all
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias, 5, 0,SubCategoryName
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813--and categorydesc = 'IMPORTED BEER' and alias = '330'       
	order by CategorySizeLinkUpID 

	delete from @tempwhile
       
	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813--and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid  

	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @BrandOpeningID = 0


	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			/*
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID
			*/

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

		   
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

		end    
		else    
		begin    

		
			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 

			/*
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  
			*/

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty) 
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

		

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 1

		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813 --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid



		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp=''

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin
		
			delete from @temmpTPNo  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			insert into @temmpTPNo(TPNo)
			select ph.TPno 
			--select @strtp=@strtp + ph.TPno 
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			--print @totalspges  
			/*
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	


			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			*/
			select @strtp = isnull(TPno,'') + ', ' + @strtp  from @temmpTPNo
			
			--Update @tempbrand set TPNo = isnull(TPNo,'') + @strtp + ', ' where brandid=@brandid
			update @FinalTPNo set TPNo = isnull(TPNo,'') + @strtp where brandid=@brandid
			
			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3
			

		end  
		else  
		begin  

			delete from @temmpTPNo

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			insert into @temmpTPNo(TPNo)
			select ph.TPno
			--select @strtp=@strtp + ph.TPno
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			
			/*						
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			*/
			
			select @strtp = isnull(TPno,'') + ', ' + @strtp  from @temmpTPNo
			
			--Update @tempbrand set TPNo = isnull(TPNo,'') + @strtp + ', ' where brandid=@brandid
			update @FinalTPNo set TPNo = isnull(TPNo,'') + @strtp where brandid=@brandid

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 2  

			Select @opUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 1
			Select @purUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 2
			update @tempbrand set UnitQty = @opUnitQty + @purUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 3

		end

		delete from @tempwhile where brandopeningid = @brandopeningid
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and brandid = 3813--and categorydesc = 'IMPORTED BEER' and alias = '330'   
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp='' 

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			/*
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			*/

			--Update @tempbrand set TPNo = TPNo + @strtp where brandid = @brandid

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			/*
			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			*/
		
			--Update @tempbrand set TPNo = TPNo + @strtp where brandid = @brandid

			update @tempbrand set UnitQty = @totalspges where BrandOpeningID=@BrandOpeningID and Particular = 4

			Select @totUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 3
			Select @salUnitQty = UnitQty from @tempbrand where BrandOpeningID=@BrandOpeningID and Particular = 4
			update @tempbrand set UnitQty = @totUnitQty - @salUnitQty where BrandOpeningID=@BrandOpeningID and Particular = 5

		end      

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	insert into @tempMainbrand
	(brandid,  categorydesc, Alias, Particular, UnitQty, SubCategoryName, bottlesize, StockIN, Speg, TPNo)
	select temp.brandid, temp.categorydesc, temp.Alias, temp.Particular, temp.UnitQty, temp.SubCategoryName, lnk.ML, lnk.StockIN, lnk.Speg, TPNo
	from @tempbrand temp
	join tbl_brandopening bo on bo.brandopeningid = temp.brandopeningid
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID

	delete from @tempLicense where licenseid = @Licenseid    
     
end     

--select * from @FinalTPNo

--update @tempMainbrand set TPNo = ','
--select * from @tempMainbrand order by brandid
Update temp
set temp.TPNo = f.TpNo
from @tempMainbrand temp
join @FinalTPNo f on temp.brandid = f.brandid

select brandid,  ltrim(rtrim(categorydesc)) as categorydesc, ltrim(rtrim(Alias)) as Alias, subcategoryname, bottlesize, StockIN, Speg, TPNo,
[1] as Opening, [2] as Purchase, [3] as Total, [4] as Sale, [5] as Closing
into #tempKARN from 
(select 
brandid,  categorydesc, Alias, subcategoryname, bottlesize, StockIN, Speg, TPNo, Particular, UnitQty
from @tempMainbrand

) As SourceTable
PIVOT
(
	sum(UnitQty)
	for Particular in ([1], [2], [3], [4], [5])
) AS PivotTable order by brandid

--select * from #tempKARN

select 
@LicenseDesc as License, @LicenseNo as LicenseNumber, @fromdate as Date, ltrim(rtrim(bh.BrandDesc)) as BrandDesc, t.Alias as [Size], 
--substring(ltrim(rtrim(TPNo)),1,len(ltrim(rtrim(TPNo)))-1) as PermitNo,
Case
	when len(ltrim(rtrim(TPNo))) > 1 then substring(ltrim(rtrim(TPNo)),1,len(ltrim(rtrim(TPNo)))-1)
	else ''
end as PermitNo,
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Opening, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Opening, t.Speg, t.stockin, t.bottlesize)) as Opening,    
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Purchase, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Purchase, t.Speg, t.stockin, t.bottlesize)) as Purchase,    
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Sale, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Sale, t.Speg, t.stockin, t.bottlesize)) as Sale,    
convert(varchar,dbo.Fun_AP_CalcBottlefromspeg(t.Closing, t.Speg, t.stockin, t.bottlesize)) + '.' + convert(varchar,dbo.Fun_AP_Calcspegfromspeg(t.Closing, t.Speg, t.stockin, t.bottlesize)) as Closing,    
ltrim(rtrim(t.CategoryDesc)) as CategoryDesc, ltrim(rtrim(t.subcategoryname)) as subcategorydesc
from #tempKARN t
join tbl_brandhead bh on bh.brandid = t.brandid
order by t.CategoryDesc, t.subcategoryname, bh.BrandDesc

drop table #tempKARN
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_DeleteSale]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_DeleteSale]    
GO

CREATE procedure [dbo].[Spr_DeleteSale]  
@BillId numeric(18,0),  
@Outbit bit output,    
@OutMsg varchar(50) output 
as  
begin  
	Begin try    
		Begin tran  
		delete from Tbl_SalePermit where BillId=@BillId

		update f
		set f.UnitQty = f.UnitQty + sd.unitqty
		--select  sd.BillId, f.UnitQty, sd.unitqty
		from Tbl_SaleDetail sd
		join Tbl_FIFORecords f on sd.FifoRecordsID = f.FifoRecordsID and sd.BrandOpeningID = f.TrnforBrandOpeningID
		where sd.BillId=@BillId

		update f
		set f.UnitQty = f.UnitQty + sd.unitqty
		--select  sd.BillId, f.UnitQty, sd.unitqty
		from Tbl_SaleDetail sd
		join Tbl_FIFORecords f on sd.FifoRecordsID = f.FifoRecordsID and sd.BrandOpeningID = f.BrandOpeningID
		where sd.BillId=@BillId

		update bo
		set bo.PurchaseUnitQty = bo.PurchaseUnitQty + sd.unitqty
		--select  sd.BillId, bo.PurchaseUnitQty, sd.unitqty
		from Tbl_SaleDetail sd
		join Tbl_BrandOpening bo on sd.BrandOpeningID = bo.BrandOpeningID
		where sd.BillId=@BillId and sd.FifoRecordsID is null


		update f
		set f.UnitQty = f.UnitQty + sd.unitqty
		--select  sd.BillId, f.UnitQty, sd.unitqty
		from Tbl_SaleCocktailDetail sd
		join Tbl_SaleCocktailHead sh on sh.CocktailSaleId = sd.CocktailSaleId
		join Tbl_FIFORecords f on sd.FifoRecordsID = f.FifoRecordsID and sd.BrandOpeningID = f.TrnforBrandOpeningID
		where sh.BillId=@BillId

		update f
		set f.UnitQty = f.UnitQty + sd.unitqty
		--select  sd.BillId, f.UnitQty, sd.unitqty
		from Tbl_SaleCocktailDetail sd
		join Tbl_SaleCocktailHead sh on sh.CocktailSaleId = sd.CocktailSaleId
		join Tbl_FIFORecords f on sd.FifoRecordsID = f.FifoRecordsID and sd.BrandOpeningID = f.BrandOpeningID
		where sh.BillId=@BillId

		update bo
		set bo.PurchaseUnitQty = bo.PurchaseUnitQty + sd.unitqty
		--select  sd.BillId, bo.PurchaseUnitQty, sd.unitqty
		from Tbl_SaleCocktailDetail sd
		join Tbl_SaleCocktailHead sh on sh.CocktailSaleId = sd.CocktailSaleId
		join Tbl_BrandOpening bo on sd.BrandOpeningID = bo.BrandOpeningID
		where sh.BillId=@BillId and sd.FifoRecordsID is null


		delete sd
		from Tbl_SaleCocktailDetail sd
		join Tbl_SaleCocktailHead sh on sd.CocktailSaleId = sh.CocktailSaleId
		where sh.BillId = @BillId

		delete from Tbl_SaleCocktailHead where BillId=@BillId    
		delete from Tbl_SaleDetail where BillId=@BillId    
		delete from Tbl_SaleHead where BillId=@BillId    
		set @OutMsg='Deleted Sucessfully'    
		set @Outbit=1      
		commit    
	End Try    
	Begin Catch    
		set @OutMsg='Cannot Delete the Record'      
		set @Outbit=0
		rollback      
	End Catch    
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_CostAdjustmentBrandwise') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_CostAdjustmentBrandwise
GO

CREATE Procedure Spr_CostAdjustmentBrandwise
@licenseid numeric(18,0)
As
Begin
	declare @tempFIFO table
	(
		FifoRecordsID numeric(18,0),
		PurchaseUnitQty numeric(18,0),
		NonMovingQty numeric(18,0)
	)
	declare @tempFIFOConsumption table
	(
		id numeric(18,0) identity(1,1),
		FifoRecordsID numeric(18,0),
		PurchaseUnitQty numeric(18,0),
		NonMovingQty numeric(18,0)
	)
	declare @tempFIFOConsumptionFinal table
	(
		FifoRecordsID numeric(18,0),
		PurchaseUnitQty numeric(18,0)
	)
	declare @tempSale table
	(
		id numeric(18,0) identity(1,1),
		BillId numeric(18,0),
		BilldetailId numeric(18,0),
		UnitQty numeric(18,0),
		SaleType char(1),
		FifoRecordsID numeric(18,0)
	)
	declare @tempSaleFinal table
	(
		BilldetailId numeric(18,0),
		SaleType char(1),
		FifoRecordsID numeric(18,0),
		UnAdjusted bit,
		UnitQty numeric(18,0)
	)

	declare @tempBrands table
	(
		brandopeningid numeric(18,0)
	)
	insert into @tempBrands (brandopeningid)
	select brandopeningid from vw_brandopeningdetails 
	where licenseid = @licenseid --and branddesc = 'MARTINI EXTRA DRY APER'

	declare @brandopeningid numeric(18,0)
	declare @totalconsumption numeric(18,0)
	declare @FifoRecordsID numeric(18,0)
	declare @PurchaseUnitQty numeric(18,0)
	declare @NonMovingQty numeric(18,0)
	declare @BilldetailId numeric(18,0)
	declare @UnitQty numeric(18,0)
	declare @id numeric(18,0)
	declare @SaleType char(1)

	while(select count(brandopeningid) from @tempBrands) > 0
	begin

		--set @brandopeningid = 313
		select top 1 @brandopeningid = brandopeningid from @tempBrands order by brandopeningid

		delete from @tempFIFO
		delete from @tempFIFOConsumption
		delete from @tempFIFOConsumptionFinal
		delete from @tempSale
		delete from @tempSaleFinal

		insert into @tempFIFO
		(FifoRecordsID, PurchaseUnitQty, NonMovingQty)
		select 0 as FifoRecordsID, NonMovingQty, NonMovingQty from tbl_brandopening
		where brandopeningid = @brandopeningid
		union all
		select FifoRecordsID, NonMovableQty, NonMovableQty from tbl_fiforecords
		where brandopeningid = @brandopeningid
		union all
		select FifoRecordsID, NonMovableQty, NonMovableQty from tbl_fiforecords
		where TrnforBrandOpeningID = @brandopeningid
		order by FifoRecordsID

		insert into @tempFIFOConsumption
		(FifoRecordsID, PurchaseUnitQty, NonMovingQty)
		select 0 as FifoRecordsID, NonMovingQty, NonMovingQty from tbl_brandopening
		where brandopeningid = @brandopeningid
		union all
		select FifoRecordsID, NonMovableQty, NonMovableQty from tbl_fiforecords
		where brandopeningid = @brandopeningid
		union all
		select FifoRecordsID, NonMovableQty, NonMovableQty from tbl_fiforecords
		where TrnforBrandOpeningID = @brandopeningid
		order by FifoRecordsID



		insert into @tempSale
		(BillId, BilldetailId, UnitQty, SaleType)
		select 
		BillId, BilldetailId, UnitQty, 'B'
		from tbl_saledetail 
		where brandopeningid = @brandopeningid
		--order by BillId, BilldetailId
		union all
		select sch.BillId, scd.CocktailSaleDtlId, scd.UnitQty, 'C'
		from tbl_salecocktaildetail scd
		join tbl_salecocktailhead sch on scd.CocktailSaleId = sch.CocktailSaleId
		where brandopeningid = @brandopeningid
		order by BillId


		set @totalconsumption = 0
		set @FifoRecordsID = 0
		set @PurchaseUnitQty = 0
		set @NonMovingQty = 0
		set @id = 0
		set @BilldetailId = 0
		set @UnitQty = 0
		set @SaleType = ''
		select @totalconsumption = sum(UnitQty) from @tempSale
		--select * from @tempSale

		while(select count(id) from @tempSale) > 0
		begin
			select top 1 @id = id, @BilldetailId = BilldetailId,  @UnitQty = UnitQty, @SaleType = SaleType from @tempSale order by id
			
			select @FifoRecordsID = FifoRecordsID, @PurchaseUnitQty = PurchaseUnitQty, @NonMovingQty = NonMovingQty
			from @tempFIFO where PurchaseUnitQty > 0 order by FifoRecordsID desc
			
			if @UnitQty <= @PurchaseUnitQty
			begin
				update @tempFIFO set PurchaseUnitQty = @PurchaseUnitQty - @UnitQty where FifoRecordsID = @FifoRecordsID		

		--		insert into @tempSaleFinal
		--		(BilldetailId, SaleType, FifoRecordsID, UnAdjusted, UnitQty)
		--		values
		--		(@BilldetailId, @SaleType, @FifoRecordsID, 0, @UnitQty)		
			end
			else
			begin
				--Added first
				update @tempFIFO set PurchaseUnitQty = 0 where FifoRecordsID = @FifoRecordsID		

				select @FifoRecordsID = FifoRecordsID, @PurchaseUnitQty = PurchaseUnitQty, @NonMovingQty = NonMovingQty
				from @tempFIFO where PurchaseUnitQty > 0 order by FifoRecordsID desc

		--		insert into @tempSaleFinal
		--		(BilldetailId, SaleType, UnAdjusted, UnitQty)
		--		values
		--		(@BilldetailId, @SaleType, 1, @UnitQty)
			end
			insert into @tempSaleFinal
			(BilldetailId, SaleType, FifoRecordsID, UnAdjusted, UnitQty)
			values
			(@BilldetailId, @SaleType, @FifoRecordsID, 0, @UnitQty)
			--select @FifoRecordsID
			
			delete from @tempSale where id = @id
		end

		--select * from @tempFIFO
		--select * from @tempSaleFinal
		
		update sd
		set sd.FifoRecordsID = t.FifoRecordsID
		from @tempSaleFinal t
		join tbl_saledetail sd on t.BilldetailId = sd.BilldetailId
		where t.SaleType = 'B' and t.Fiforecordsid <> 0

		update scd
		set scd.FifoRecordsID = t.FifoRecordsID
		from @tempSaleFinal t
		join tbl_salecocktaildetail scd on t.BilldetailId = scd.CocktailSaleDtlId
		where t.SaleType = 'C' and t.Fiforecordsid <> 0

		--select @totalconsumption
		
		delete from @tempFIFOConsumption where PurchaseUnitQty = 0
		--select * from @tempFIFOConsumption
		
		while (select count(id) from @tempFIFOConsumption) > 0
		begin
			select top 1 @id = id, @PurchaseUnitQty = PurchaseUnitQty from @tempFIFOConsumption order by id
			
			--select @totalconsumption, @PurchaseUnitQty
			
			if @totalconsumption > 0
			begin
				if @totalconsumption > @PurchaseUnitQty
				begin
					set @totalconsumption = @totalconsumption - @PurchaseUnitQty
					update @tempFIFOConsumption set PurchaseUnitQty = 0 where id = @id
				end
				else
				begin
					set @totalconsumption = @PurchaseUnitQty - @totalconsumption
					update @tempFIFOConsumption set PurchaseUnitQty = @totalconsumption where id = @id
					set @totalconsumption = 0
				end
			end
			insert into @tempFIFOConsumptionFinal
			select Fiforecordsid, PurchaseUnitQty
			from @tempFIFOConsumption where id = @id
			
			delete from @tempFIFOConsumption where id = @id
		end

		--select * from @tempFIFOConsumptionFinal

		update tbl_brandopening set PurchaseUnitQty = (select PurchaseUnitQty from @tempFIFOConsumptionFinal where Fiforecordsid = 0)
		where brandopeningid = @brandopeningid

		update f
		set f.UnitQty = t.PurchaseUnitQty
		from @tempFIFOConsumptionFinal t
		join tbl_fiforecords f on f.Fiforecordsid = t.Fiforecordsid
		where t.Fiforecordsid <> 0

		delete from @tempBrands where brandopeningid = @brandopeningid
	end
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_CostAdjustment') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_CostAdjustment
GO

CREATE Procedure Spr_CostAdjustment
@licenseid numeric(18,0),
@outbit bit output,
@outmsg varchar(100) output
As
Begin

	--Update brand opening table with defined rates in brand head
	--Bottle rate is applied to MAsterbottle 
	--Peg Rate is gets calculated from bottle rate are applied to PurchaseUnitRate
	Update bo
	set 
	bo.PurchaseUnitRate = 
	case   
	when lower(lnk.StockIN) = 'm' then det.PurchaseRate / lnk.ML  
	else det.PurchaseRate / lnk.speg  
	end, 
	bo.MasterUnitBottleRate = 
	det.PurchaseRate
	from tbl_brandopening bo
	join tbl_categorysizelinkup lnk on bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID
	join tbl_branddet det on bo.brandid = det.brandid and lnk.SizeID = det.SizeID
	where bo.licenseid = @licenseid

	--Update fifo records as per the records come from PURCHASE
	--bottle rate is used to set FIFO rates for PEG and bottle
	--else in master rate brand opening rate is rate
	Update f
	set
	f.MasterPurRate = bo.PurchaseUnitRate,
	f.PurchaseRate = 
	case   
	when lower(lnk.StockIN) = 'm' then f.BottleRate / lnk.ML  
	else f.BottleRate / lnk.speg  
	end,
	f.MasterUnitBottleRate = bo.MasterUnitBottleRate,
	f.PurchaseUnitBottleRate = f.BottleRate
	from tbl_fiforecords f
	join tbl_brandopening bo on bo.brandopeningid = f.brandopeningid
	join tbl_categorysizelinkup lnk on bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID
	where bo.licenseid = @licenseid


	--Update fifo records as per the records come from TRANSFER
	--bottle rate is used to set FIFO rates for PEG and bottle
	--else in master rate brand opening rate is rate
	Update f
	set
	f.MasterPurRate = bo.PurchaseUnitRate,
	f.PurchaseRate = 
	case   
	when lower(lnk.StockIN) = 'm' then f.BottleRate / lnk.ML  
	else f.BottleRate / lnk.speg  
	end,
	f.MasterUnitBottleRate = bo.MasterUnitBottleRate,
	f.PurchaseUnitBottleRate = f.BottleRate
	from tbl_fiforecords f
	join tbl_brandopening bo on bo.brandopeningid = f.TrnforBrandOpeningID
	join tbl_categorysizelinkup lnk on bo.CategorySizeLinkUpID = lnk.CategorySizeLinkID
	where bo.licenseid = @licenseid

	exec Spr_CostAdjustmentBrandwise @licenseid

	---######### REFRESH SALE ENTRIES AS PER OPENING RATES AND FIFOREVORDS RATES #########
	update sd
	set 
	sd.MasterPurRate = bo.PurchaseUnitRate,
	sd.PurchaseRate = bo.PurchaseUnitRate,
	sd.MasterUnitBottleRate = bo.MasterUnitBottleRate,
	sd.PurchaseUnitBottleRate = bo.MasterUnitBottleRate
	from tbl_salehead sh 
	join tbl_saledetail sd on sh.billid = sd.billid
	join tbl_brandopening bo on sd.brandopeningid = bo.brandopeningid 
	where sh.licenseid = @licenseid and sd.FifoRecordsID is null


	Update scd
	set scd.MasterPurRate = bo.PurchaseUnitRate,
	scd.PurchaseRate = bo.PurchaseUnitRate,
	scd.MasterUnitBottleRate = bo.MasterUnitBottleRate,
	scd.PurchaseUnitBottleRate = bo.MasterUnitBottleRate
	from tbl_salehead sh 
	join tbl_salecocktailhead sch on sch.billid = sh.billid
	join tbl_salecocktaildetail scd on scd.CocktailSaleId = sch.CocktailSaleId
	join tbl_brandopening bo on scd.brandopeningid = bo.brandopeningid 
	where sh.licenseid = @licenseid and scd.FifoRecordsID is null

	Update sd
	set 
	sd.MasterPurRate = f.MasterPurRate,
	sd.PurchaseRate = f.PurchaseRate,
	sd.MasterUnitBottleRate = f.MasterUnitBottleRate,
	sd.PurchaseUnitBottleRate = f.PurchaseUnitBottleRate
	from tbl_salehead sh 
	join tbl_saledetail sd on sh.billid = sd.billid
	join tbl_fiforecords f on sd.FifoRecordsID = f.FifoRecordsID
	where sh.licenseid = @licenseid

	Update scd
	set scd.MasterPurRate = f.MasterPurRate,
	scd.PurchaseRate = f.PurchaseRate,
	scd.MasterUnitBottleRate = f.MasterUnitBottleRate,
	scd.PurchaseUnitBottleRate = f.PurchaseUnitBottleRate
	from tbl_salehead sh 
	join tbl_salecocktailhead sch on sch.billid = sh.billid
	join tbl_salecocktaildetail scd on scd.CocktailSaleId = sch.CocktailSaleId
	join tbl_fiforecords f on scd.FifoRecordsID = f.FifoRecordsID
	where sh.licenseid = @licenseid


	--#### TOTAL AMOUNT UPDATE NOT neccesary ####---
	Update tbl_saledetail
	set TotalAmount = (BottleQty * Bottlerate) + (Speg * SpegRate) + (Lpeg * LpegRate)


	update tbl_salecocktailhead
	set cocktailtotal = (Quantity * Rate)

	set @outbit = 0
	set @outmsg = 'Successfully Updated'	

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].Spr_UpdateOneDayPermit') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].Spr_UpdateOneDayPermit
GO

Create procedure [dbo].Spr_UpdateOneDayPermit
@OneDayPermitXML xml,  
@licenseid numeric(18,0),
@CurrentPermitNo int,
@Auto bit = 0,          
@Outbit bit output,                    
@Username varchar(100),                      
@OutMsg varchar(100) output              
as              
begin

	declare @hdocBrand as int              

	exec sp_xml_preparedocument @hdocBrand output,@OneDayPermitXML 

	declare @Temp table
	(
		BillId numeric(18,0),
		PermitHolderName varchar(100),
		BillDate smalldatetime,
		PermitHolderNumber varchar(100)
	)
	insert into @Temp(BillId,PermitHolderName,BillDate,PermitHolderNumber)
	select BillId,PermitHolderName,BillDate,PermitHolderNumber  
	From OpenXML(@hdocBrand,'/Trans/OneDayPermit/PermitNo') with                          
	(       
		BillId numeric(18,0),
		PermitHolderName varchar(100),
		BillDate smalldatetime,
		PermitHolderNumber varchar(100)                
	)    

	update sp 
	set sp.PermitHolderID=null,sp.PermitTypeID=null,sp.PermitHolderName=tmp.PermitHolderName,sp.PermitHolderNumber=tmp.PermitHolderNumber,
	sp.PermitExpireDate=tmp.BillDate
	from tbl_salePermit sp
	join @Temp tmp on sp.BillId=tmp.BillId

	if @Auto = 1
	begin

		update tbl_onedaypermitmst 
		set CurrentPermitNo=@CurrentPermitNo
		where OneDayPermitId = (select max(OneDayPermitId) from tbl_onedaypermitmst where licenseid = @licenseid) 
		and licenseid = @licenseid
		
		update tbl_onedaypermitmst 
		set CurrentPermitNo=ToPermitNo 
		where OneDayPermitId <> (select max(OneDayPermitId) from tbl_onedaypermitmst where licenseid = @licenseid) 
		and licenseid = @licenseid

	end

	set @Outbit = 1
	set @OutMsg = 'Updated Successfully'
		
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchOneDayPermitMst') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchOneDayPermitMst
GO

CREATE Procedure Spr_FetchOneDayPermitMst
@licenseid numeric(18,0),
@IsMaster bit = 0
As
Begin
if @IsMaster=0
	begin
		Select OneDayPermitId, FromPermitNo, ToPermitNo, CurrentPermitNo
		From Tbl_OneDayPermitMst 
		where FromPermitNo <> CurrentPermitNo and licenseid = @licenseid
		order by OneDayPermitId desc
	end
else
begin
		Select OneDayPermitId, FromPermitNo, ToPermitNo, CurrentPermitNo,
		case when CurrentPermitNo = 0 then convert(bit,0)
		else convert(bit,1) end as IsUsed
		From Tbl_OneDayPermitMst 
		where licenseid = @licenseid
		
	end
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_DeleteOneDayPermitNumber]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_DeleteOneDayPermitNumber]
GO

CREATE Proc [dbo].[Spr_DeleteOneDayPermitNumber]        
@OneDayPermitId numeric(18,0),        
@Outbit bit output,        
@OutMsg varchar(50) output        
as        
Begin try        
 Begin tran        
 delete from Tbl_OneDayPermitMst where OneDayPermitId=@OneDayPermitId     
set @OutMsg='Deleted Sucessfully'        
set @Outbit=1          
 commit        
End Try        
Begin Catch        
set @OutMsg='Cannot Delete the Record'          
set @Outbit=0        
 rollback          
End Catch
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveOneDayPermitNumber]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveOneDayPermitNumber]
GO

CREATE Procedure [dbo].[Spr_SaveOneDayPermitNumber]
@OneDayPermitId numeric(18,0),
@licenseid numeric(18,0),
@From int,
@To int,
@Username varchar(100),      
@Outbit  bit output,      
@OutMsg  varchar(100) output 
as
begin
	if @OneDayPermitId = 0
	begin
		insert into Tbl_OneDayPermitMst(FromPermitNo,ToPermitNo,CurrentPermitNo,Oprc,Dtc,licenseid)
		values (@From,@To,0,@Username,getdate(),@licenseid)

		set @Outbit=1
		set @OutMsg='Saved Successfully'
	end
	else
	begin
		update Tbl_OneDayPermitMst set FromPermitNo=@From,ToPermitNo=@To,oprm=@Username,dtm=getdate(), licenseid = @licenseid
		where OneDayPermitId=@OneDayPermitId

		set @Outbit=1
		set @OutMsg='Updated Successfully'
	end
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_purchaseReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_purchaseReport]
GO

CREATE procedure [dbo].[Spr_purchaseReport] 
@xmlDoc xml,
@outbit bit output,
@outmsg varchar(max) output  
as  
begin   

set @outbit = 1
set @outmsg = ''
  
declare @hdoc int   
Declare @licenseID varchar(200)  
Declare @FromDate datetime  
Declare @ToDate datetime  
Declare @tpno varchar(50)  
Declare @invoiceno varchar(50)  
 Declare  @Brand Varchar(50)
 Declare @Category  Varchar(50)
 Declare @Size Varchar(50)
 Declare @Cocktail Varchar(50)
  
declare @strSelect varchar(max)                                    
  declare @strWhere varchar(max)                                    
  set @strSelect = ''                                    
  set @strWhere = ''      
  
exec sp_xml_preparedocument @hdoc output,@xmlDoc  
 select @licenseID = LicenseID,@FromDate=FromDate,@ToDate=ToDate,@tpno=tpNo,@invoiceno=invoiceNo,@Brand=Brand,@Category=Category,@Size =Size,@Cocktail=Cocktail  
 from openXML(@hDoc,'/Master/CocktailReports/Report') with  
 (  
 LicenseID varchar(200),  
 FromDate datetime,  
 ToDate datetime,  
 tpNo varchar(50),  
 invoiceNo varchar(50),
 Brand Varchar(50),
 Category  Varchar(50),
 Size Varchar(50),
 Cocktail Varchar(50)  
 )  
  set @strSelect='select ph.TPno,ph.InvoiceNo,ph.purchaseDate,l.licensedesc,bh.BrandDesc,lnk.Alias,pd.SRate,pd.BottleQty,pd.BottleRate,pd.FreeQty  
  from tbl_purchasedetail pd  
  join tbl_BrandOpening bo on bo.BrandOpeningID=pd.BrandOpeningID  
  join tbl_BrandHead bh on bh.brandid=bo.brandid  
  join tbl_purchasehead ph on ph.purchaseid=pd.purchaseid  
  join tbl_license l on l.licenseid=ph.licenseid  
  join tbl_brandopening op on pd.BrandOpeningID=op.BrandOpeningID      
  join Tbl_CategorySizeLinkup lnk on op.CategorySizeLinkUpID = lnk.CategorySizeLinkID          
  join tbl_Size s on s.sizeid = lnk.sizeid where 1=1'   
  
if @LicenseID <> ''                                                  
begin                                                   
 set @strWhere=@strWhere + ' and ph.LicenseID '+ltrim(rtrim(@LicenseID))+''                                
end    
  
if @tpno <> ''                                                  
begin                                                   
 set @strWhere=@strWhere + ' and ph.tpno ='''+ltrim(rtrim(@tpno))+''''                             
end  
  
if @invoiceno <> ''                                                  
begin                                                   
 set @strWhere=@strWhere + ' and ph.invoiceno='+ltrim(rtrim(@invoiceno))+''                                
end     
  
if @FromDate <> '1-Jan-1900' and @ToDate <> '31-Dec-2050'     
  begin       
    set @strWhere=@strWhere + ' and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between  convert(smalldatetime,''' +  convert(varchar,@FromDate,102) + ''')  and  convert(smalldatetime,''' + convert(varchar,@ToDate,102) + ''')'      
  end
     
      if @Brand <> ''     
  begin         
  set @strWhere=@strWhere + ' and bh.BrandDesc like ''%'+ @Brand + '%'''
  end 
    
  if @Size <> ''     
  begin         
  set @strWhere=@strWhere + ' and lnk.Alias like ''%'+ @Size + '%'''
  end 
  
exec(@strSelect+@strWhere)  
   print(@strSelect+@strWhere)  
  
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchLicenseTransactionDetails') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchLicenseTransactionDetails
GO

CREATE  procedure Spr_FetchLicenseTransactionDetails
as
begin
	declare @licenseTransaction table
	(
		licenseId numeric(18,0),
		saleTransaction smalldatetime,
		purchaseTransaction smalldatetime,
		TransferTransaction smalldatetime
	)
	declare @Transfertemp table
	(
		transferdate smalldatetime,
		licenseId numeric(18,0)
	)
	declare @purchasetemp table
	(
		purchaseTransaction smalldatetime,
		licenseId numeric(18,0)
	)
	declare @saletemp table
	(
		saleTransaction smalldatetime,
		licenseId numeric(18,0)
	)
	insert into @saletemp
	select max(convert(smalldatetime, convert(varchar,billdate,102))) as saleTransaction,LicenseId 
	from Tbl_SaleHead group by LicenseId

	insert into @purchasetemp
	select max(convert(smalldatetime, convert(varchar,PurchaseDate,102))) as PurchaseDate,LicenseId 
	from Tbl_Purchasehead group by LicenseId

	insert into @Transfertemp
	select max(convert(smalldatetime, convert(varchar,TransferDate,102))) as TransferDate,LicenseId 
	from Tbl_TransferHeadMst group by LicenseId

	select l.LicenseDesc,
	case 
		when s.saleTransaction is null then 'N/A'
		else convert(varchar,s.saleTransaction,106)
	end as Sale,
	case 
		when p.purchaseTransaction is null then 'N/A'
		else convert(varchar,p.purchaseTransaction,106)
	end as Purchase,
	case 
		when t.transferdate is null then 'N/A'
		else convert(varchar,t.transferdate,106) 
	end as Transfer
	from tbl_license l
	left outer join @saletemp s on l.licenseid=s.licenseId
	left outer join @purchasetemp p on l.licenseId=p.licenseId
	left outer join @Transfertemp t on l.licenseId=t.licenseId
	
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchCostEvaluationReport') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchCostEvaluationReport
GO

CREATE Procedure Spr_FetchCostEvaluationReport
@licensexml xml,
@fromdate datetime,
@todate datetime 
As
Begin

	Declare @hdoc int
	Exec sp_xml_preparedocument @hDoc Output, @licensexml            
	Declare @licenseID numeric(18,0)
	declare @closingdate datetime 
	
	set @closingdate = @todate + 1

	--set @fromdate = '18-Mar-2013'
	--set @todate = '18-Mar-2013'
	--set @licenseID = 1

	declare @tempLicense table    
	(    
		licenseid numeric(18,0)    
	)    
	insert into @tempLicense(licenseid)    
	Select licenseid    
	From OpenXML(@hDoc,'/CWPLUS/AllLicense/License') with                          
	(                          
		LicenseID numeric(18,0)    
	)

	select @licenseID = licenseID from @tempLicense

	declare @brandopening table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2)
	)
	insert into @brandopening
	(BrandOpeningID, CategorySizeLinkUpID)
	select
	BrandOpeningID, CategorySizeLinkUpID
	from tbl_brandopening where licenseid = @licenseid

	--This table was added on 14 May 2013
	declare @TempStock table
	(
		brandopeningid numeric(18,0),
		UnitQty numeric(18,0),
		MasterCost numeric(14,2), 
		FIFOCost numeric(14,2)
	)


	declare @opening table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2),
		MasterCost numeric(14,2),
		FIFOCost numeric(14,2)
	)

	declare @purchase table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2),
		MasterCost numeric(14,2),
		FIFOCost numeric(14,2)
	)

	declare @TransferIn table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2),
		MasterCost numeric(14,2),
		FIFOCost numeric(14,2)
	)

	declare @TransferOut table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2),
		MasterCost numeric(14,2),
		FIFOCost numeric(14,2)
	)

	declare @salebrand table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2),
		MasterCost numeric(14,2),
		FIFOCost numeric(14,2)
	)
	declare @salecocktail table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2),
		MasterCost numeric(14,2),
		FIFOCost numeric(14,2)
	)


	--############################################################################################
	--OPENING STOCK CALCULATION

	delete from @opening
	delete from @purchase
	delete from @TransferIn
	delete from @TransferOut
	delete from @salebrand
	delete from @salecocktail


	insert into @opening
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select BrandOpeningID, CategorySizeLinkUpID, dbo.Fun_Calcunits(CategorySizeLinkUpID, OpeningQty, OpSpQty), 
	PurchaseUnitRate, PurchaseUnitRate, MasterUnitBottleRate, MasterUnitBottleRate
	from tbl_brandopening where licenseid = @licenseid

	insert into @purchase
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select pd.BrandOpeningID, CategorySizeLinkUpID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty)+ sum(FreeQty), sum(sPegQty)), 
	pd.MasterPurRate, pd.PurchaseRate, pd.MasterUnitBottleRate, pd.PurchaseUnitBottleRate
	from tbl_purchasehead ph
	join tbl_fiforecords pd on ph.PurchaseId = pd.PurchaseId
	join @brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
	where convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))
	group by pd.BrandOpeningID, bo.CategorySizeLinkUpID, pd.MasterPurRate, pd.PurchaseRate, pd.MasterUnitBottleRate, pd.PurchaseUnitBottleRate

	insert into @TransferIn
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select td.TrnforBrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty)), 
	sum(td.UnitQty),
	td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate 
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.TrnforBrandOpeningID
	where convert(smalldatetime,convert(varchar,th.TransferDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))
	group by td.TrnforBrandOpeningID, bo.CategorySizeLinkUpID, td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate

	insert into @TransferOut
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select td.BrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty)), 
	sum(td.UnitQty),
	td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.BrandOpeningID
	where convert(smalldatetime,convert(varchar,th.TransferDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))
	group by td.BrandOpeningID, bo.CategorySizeLinkUpID, td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate

	insert into @salebrand
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	Select sd.BrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(Speg) + (sum(Lpeg)*2)), 
	sum(sd.UnitQty),
	sd.MasterPurRate, sd.PurchaseRate, sd.MasterUnitBottleRate, sd.PurchaseUnitBottleRate
	from tbl_salehead sh
	join Tbl_SaleDetail sd on sh.billid = sd.billid
	join @brandopening bo on bo.BrandOpeningID = sd.BrandOpeningID
	where convert(smalldatetime,convert(varchar,sh.billdate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))
	group by sd.BrandOpeningID, bo.CategorySizeLinkUpID, sd.MasterPurRate, sd.PurchaseRate, sd.MasterUnitBottleRate, sd.PurchaseUnitBottleRate

	insert into @salecocktail
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select scd.BrandOpeningid, CategorySizeLinkUpID, sum(Speg), 
	scd.MasterPurRate, scd.PurchaseRate, scd.MasterUnitBottleRate, scd.PurchaseUnitBottleRate
	from Tbl_SaleHead sh
	join Tbl_SaleCocktailHead sch on sh.billid = sch.billid
	join Tbl_SaleCocktailDetail scd on scd.CocktailSaleId=sch.CocktailSaleId  
	join @brandopening bo on bo.BrandOpeningID = scd.BrandOpeningID
	where convert(smalldatetime,convert(varchar,sh.billdate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))
	group by scd.BrandOpeningid, CategorySizeLinkUpID, scd.MasterPurRate, scd.PurchaseRate, scd.MasterUnitBottleRate, scd.PurchaseUnitBottleRate

	update @opening 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @purchase 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @TransferIn 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @TransferOut 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @salebrand 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @salecocktail 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)


	delete from @TempStock

	insert into @TempStock
	(brandopeningid, UnitQty, MasterCost, FIFOCost)
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @opening
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @purchase
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @TransferIn
	union all
	select brandopeningid, isnull(UnitQty,0)*-1, isnull(MasterCost,0), isnull(FIFOCost,0) from @TransferOut
	union all
	select brandopeningid, isnull(UnitQty,0)*-1, isnull(MasterCost,0), isnull(FIFOCost,0) from @salebrand	
	union all
	select brandopeningid, isnull(UnitQty,0)*-1, isnull(MasterCost,0), isnull(FIFOCost,0) from @salecocktail


	declare @openingstock table
	(
		brandopeningid numeric(18,0),
		UnitQty numeric(18,0),
		MasterWiseCost numeric(14,2), 
		FIFOWiseCost numeric(14,2)
	)
	insert into @openingstock
	(brandopeningid, UnitQty, MasterWiseCost, FIFOWiseCost)
	select 
	bo.brandopeningid, sum(temp.UnitQty), sum(temp.MasterCost), sum(temp.FIFOCost)
	from @brandopening bo
	left outer join @TempStock temp on temp.brandopeningid = bo.brandopeningid
	group by bo.brandopeningid

	/*

	select bo.brandopeningid, (isnull(sum(op.UnitQty),0) + isnull(sum(pur.UnitQty),0) + isnull(sum(tin.UnitQty),0)) - 
	((isnull(sum(tout.UnitQty),0) + isnull(sum(sb.UnitQty),0) + isnull(sum(sc.UnitQty),0))), 
	isnull(sum(op.MasterCost),0) + isnull(sum(pur.MasterCost),0) + isnull(sum(tin.MasterCost),0) + isnull(sum(tout.MasterCost),0) + 
	isnull(sum(sb.MasterCost),0) + isnull(sum(sc.MasterCost),0),
	isnull(sum(op.FIFOCost),0) + isnull(sum(pur.FIFOCost),0) + isnull(sum(tin.FIFOCost),0) + isnull(sum(tout.FIFOCost),0) + isnull(sum(sb.FIFOCost),0) + 
	isnull(sum(sc.FIFOCost),0)
	from @brandopening bo
	left outer join @opening op on bo.BrandOpeningID = op.BrandOpeningID
	left outer join @purchase pur on bo.BrandOpeningID = pur.BrandOpeningID
	left outer join @TransferIn tin on bo.BrandOpeningID = tin.BrandOpeningID
	left outer join @TransferOut tout on bo.BrandOpeningID = tout.BrandOpeningID
	left outer join @salebrand sb on bo.BrandOpeningID = sb.BrandOpeningID
	left outer join @salecocktail sc on bo.BrandOpeningID = sc.BrandOpeningID
	group by bo.brandopeningid

	*/

	--############################################################################################

	--############################################################################################
	--PURCHASE STOCK CALCULATION

	delete from @opening
	delete from @purchase
	delete from @TransferIn
	delete from @TransferOut
	delete from @salebrand
	delete from @salecocktail

	insert into @purchase
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select pd.BrandOpeningID, CategorySizeLinkUpID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty)+ sum(FreeQty), sum(sPegQty)), 
	pd.MasterPurRate, pd.PurchaseRate, pd.MasterUnitBottleRate, pd.PurchaseUnitBottleRate
	from tbl_purchasehead ph
	join tbl_fiforecords pd on ph.PurchaseId = pd.PurchaseId
	join @brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by pd.BrandOpeningID, bo.CategorySizeLinkUpID, pd.MasterPurRate, pd.PurchaseRate, pd.MasterUnitBottleRate, pd.PurchaseUnitBottleRate

	insert into @TransferIn
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select td.TrnforBrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty)), 
	sum(td.UnitQty),
	td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate 
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.TrnforBrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by td.TrnforBrandOpeningID, bo.CategorySizeLinkUpID, td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate

	update @purchase 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @TransferIn 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	delete from @TempStock

	insert into @TempStock
	(brandopeningid, UnitQty, MasterCost, FIFOCost)
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @opening
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @purchase
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @TransferIn
	
	declare @Purchasestock table
	(
		brandopeningid numeric(18,0),
		UnitQty numeric(18,0),
		MasterWiseCost numeric(14,2), 
		FIFOWiseCost numeric(14,2)
	)

	insert into @Purchasestock
	(brandopeningid, UnitQty, MasterWiseCost, FIFOWiseCost)
	select 
	bo.brandopeningid, sum(temp.UnitQty), sum(temp.MasterCost), sum(temp.FIFOCost)
	from @brandopening bo
	left outer join @TempStock temp on temp.brandopeningid = bo.brandopeningid
	group by bo.brandopeningid

	/*
	select bo.brandopeningid, 
	(isnull(sum(pur.UnitQty),0) + isnull(sum(tin.UnitQty),0)),
	isnull(sum(pur.MasterCost),0) + isnull(sum(tin.MasterCost),0),
	isnull(sum(pur.FIFOCost),0) + isnull(sum(tin.FIFOCost),0)
	from @brandopening bo
	left outer join @purchase pur on bo.BrandOpeningID = pur.BrandOpeningID
	left outer join @TransferIn tin on bo.BrandOpeningID = tin.BrandOpeningID
	group by bo.brandopeningid
	*/

	--############################################################################################

	--############################################################################################
	--SALE STOCK CALCULATION

	delete from @opening
	delete from @purchase
	delete from @TransferIn
	delete from @TransferOut
	delete from @salebrand
	delete from @salecocktail

	insert into @TransferOut
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select td.BrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty)), 
	sum(td.UnitQty),
	td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by td.BrandOpeningID, bo.CategorySizeLinkUpID, td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate

	insert into @salebrand
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	Select sd.BrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(Speg) + (sum(Lpeg)*2)), 
	sum(sd.UnitQty),
	sd.MasterPurRate, sd.PurchaseRate, sd.MasterUnitBottleRate, sd.PurchaseUnitBottleRate
	from tbl_salehead sh
	join Tbl_SaleDetail sd on sh.billid = sd.billid
	join @brandopening bo on bo.BrandOpeningID = sd.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by sd.BrandOpeningID, bo.CategorySizeLinkUpID, sd.MasterPurRate, sd.PurchaseRate, sd.MasterUnitBottleRate, sd.PurchaseUnitBottleRate

	insert into @salecocktail
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select scd.BrandOpeningid, CategorySizeLinkUpID, sum(Speg), 
	scd.MasterPurRate, scd.PurchaseRate, scd.MasterUnitBottleRate, scd.PurchaseUnitBottleRate
	from Tbl_SaleHead sh
	join Tbl_SaleCocktailHead sch on sh.billid = sch.billid
	join Tbl_SaleCocktailDetail scd on scd.CocktailSaleId=sch.CocktailSaleId  
	join @brandopening bo on bo.BrandOpeningID = scd.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by scd.BrandOpeningid, CategorySizeLinkUpID, scd.MasterPurRate, scd.PurchaseRate, scd.MasterUnitBottleRate, scd.PurchaseUnitBottleRate

	update @TransferOut 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @salebrand 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @salecocktail 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	delete from @TempStock

	insert into @TempStock
	(brandopeningid, UnitQty, MasterCost, FIFOCost)
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @TransferOut
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @salebrand	
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @salecocktail
	

	declare @salestock table
	(
		brandopeningid numeric(18,0),
		UnitQty numeric(18,0),
		MasterWiseCost numeric(14,2), 
		FIFOWiseCost numeric(14,2)
	)
	insert into @salestock
	(brandopeningid, UnitQty, MasterWiseCost, FIFOWiseCost)
	select 
	bo.brandopeningid, sum(temp.UnitQty), sum(temp.MasterCost), sum(temp.FIFOCost)
	from @brandopening bo
	left outer join @TempStock temp on temp.brandopeningid = bo.brandopeningid
	group by bo.brandopeningid

	/*
	select bo.brandopeningid, 
	isnull(sum(tout.UnitQty),0) + isnull(sum(sb.UnitQty),0) + isnull(sum(sc.UnitQty),0),
	isnull(sum(tout.MasterCost),0) + isnull(sum(sb.MasterCost),0) + isnull(sum(sc.MasterCost),0),
	isnull(sum(tout.FIFOCost),0) + isnull(sum(sb.FIFOCost),0) + isnull(sum(sc.FIFOCost),0)
	from @brandopening bo
	left outer join @TransferOut tout on bo.BrandOpeningID = tout.BrandOpeningID
	left outer join @salebrand sb on bo.BrandOpeningID = sb.BrandOpeningID
	left outer join @salecocktail sc on bo.BrandOpeningID = sc.BrandOpeningID
	group by bo.brandopeningid
	*/
	--############################################################################################
	--############################################################################################
	--CLOSING STOCK CALCULATION

	delete from @opening
	delete from @purchase
	delete from @TransferIn
	delete from @TransferOut
	delete from @salebrand
	delete from @salecocktail

	insert into @opening
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select BrandOpeningID, CategorySizeLinkUpID, dbo.Fun_Calcunits(CategorySizeLinkUpID, OpeningQty, OpSpQty), 
	PurchaseUnitRate, PurchaseUnitRate, MasterUnitBottleRate, MasterUnitBottleRate
	from tbl_brandopening where licenseid = @licenseid

	insert into @purchase
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select pd.BrandOpeningID, CategorySizeLinkUpID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty)+ sum(FreeQty), sum(sPegQty)), 
	pd.MasterPurRate, pd.PurchaseRate, pd.MasterUnitBottleRate, pd.PurchaseUnitBottleRate
	from tbl_purchasehead ph
	join tbl_fiforecords pd on ph.PurchaseId = pd.PurchaseId
	join @brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
	where convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) < convert(smalldatetime,convert(varchar,@closingdate,102))
	group by pd.BrandOpeningID, bo.CategorySizeLinkUpID, pd.MasterPurRate, pd.PurchaseRate, pd.MasterUnitBottleRate, pd.PurchaseUnitBottleRate

	insert into @TransferIn
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select td.TrnforBrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty)), 
	sum(td.UnitQty),
	td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate 
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.TrnforBrandOpeningID
	where convert(smalldatetime,convert(varchar,th.TransferDate,102)) < convert(smalldatetime,convert(varchar,@closingdate,102))
	group by td.TrnforBrandOpeningID, bo.CategorySizeLinkUpID, td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate

	insert into @TransferOut
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select td.BrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty)), 
	sum(td.UnitQty),
	td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.BrandOpeningID
	where convert(smalldatetime,convert(varchar,th.TransferDate,102)) < convert(smalldatetime,convert(varchar,@closingdate,102))
	group by td.BrandOpeningID, bo.CategorySizeLinkUpID, td.MasterPurRate, td.PurchaseRate, td.MasterUnitBottleRate, td.PurchaseUnitBottleRate

	insert into @salebrand
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	Select sd.BrandOpeningID, CategorySizeLinkUpID, 
	--dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(Speg) + (sum(Lpeg)*2)), 
	sum(sd.UnitQty),
	sd.MasterPurRate, sd.PurchaseRate, sd.MasterUnitBottleRate, sd.PurchaseUnitBottleRate
	from tbl_salehead sh
	join Tbl_SaleDetail sd on sh.billid = sd.billid
	join @brandopening bo on bo.BrandOpeningID = sd.BrandOpeningID
	where convert(smalldatetime,convert(varchar,sh.billdate,102)) < convert(smalldatetime,convert(varchar,@closingdate,102))
	group by sd.BrandOpeningID, bo.CategorySizeLinkUpID, sd.MasterPurRate, sd.PurchaseRate, sd.MasterUnitBottleRate, sd.PurchaseUnitBottleRate

	insert into @salecocktail
	(BrandOpeningID, CategorySizeLinkUpID, UnitQty, MasterPurRate, PurchaseRate, MasterUnitBottleRate, PurchaseUnitBottleRate)
	select scd.BrandOpeningid, CategorySizeLinkUpID, sum(Speg), 
	scd.MasterPurRate, scd.PurchaseRate, scd.MasterUnitBottleRate, scd.PurchaseUnitBottleRate
	from Tbl_SaleHead sh
	join Tbl_SaleCocktailHead sch on sh.billid = sch.billid
	join Tbl_SaleCocktailDetail scd on scd.CocktailSaleId=sch.CocktailSaleId  
	join @brandopening bo on bo.BrandOpeningID = scd.BrandOpeningID
	where convert(smalldatetime,convert(varchar,sh.billdate,102)) < convert(smalldatetime,convert(varchar,@closingdate,102))
	group by scd.BrandOpeningid, CategorySizeLinkUpID, scd.MasterPurRate, scd.PurchaseRate, scd.MasterUnitBottleRate, scd.PurchaseUnitBottleRate

	update @opening 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @purchase 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @TransferIn 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @TransferOut 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @salebrand 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	update @salecocktail 
	set MasterCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * MasterUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * MasterPurRate),
	FIFOCost = (dbo.Fun_CalcBottlefromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseUnitBottleRate) + 
	(dbo.Fun_Calcspegfromspeg(UnitQty, CategorySizeLinkUpID) * PurchaseRate)

	delete from @TempStock

	insert into @TempStock
	(brandopeningid, UnitQty, MasterCost, FIFOCost)
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @opening
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @purchase
	union all
	select brandopeningid, isnull(UnitQty,0), isnull(MasterCost,0), isnull(FIFOCost,0) from @TransferIn
	union all
	select brandopeningid, isnull(UnitQty,0)*-1, isnull(MasterCost,0), isnull(FIFOCost,0) from @TransferOut
	union all
	select brandopeningid, isnull(UnitQty,0)*-1, isnull(MasterCost,0), isnull(FIFOCost,0) from @salebrand	
	union all
	select brandopeningid, isnull(UnitQty,0)*-1, isnull(MasterCost,0), isnull(FIFOCost,0) from @salecocktail

	declare @closingstock table
	(
		brandopeningid numeric(18,0),
		UnitQty numeric(18,0),
		MasterWiseCost numeric(14,2), 
		FIFOWiseCost numeric(14,2)
	)
	insert into @closingstock
	(brandopeningid, UnitQty, MasterWiseCost, FIFOWiseCost)
	select 
	bo.brandopeningid, sum(temp.UnitQty), sum(temp.MasterCost), sum(temp.FIFOCost)
	from @brandopening bo
	left outer join @TempStock temp on temp.brandopeningid = bo.brandopeningid
	group by bo.brandopeningid

	/* commented by sachin on 14-May-2013 New table created above "@closingtemp"
	select bo.brandopeningid, (isnull(sum(op.UnitQty),0) + isnull(sum(pur.UnitQty),0) + isnull(sum(tin.UnitQty),0)) - 
	((isnull(sum(tout.UnitQty),0) + isnull(sum(sb.UnitQty),0) + isnull(sum(sc.UnitQty),0))), 
	isnull(sum(op.MasterCost),0) + isnull(sum(pur.MasterCost),0) + isnull(sum(tin.MasterCost),0) + isnull(sum(tout.MasterCost),0) + 
	isnull(sum(sb.MasterCost),0) + isnull(sum(sc.MasterCost),0),
	isnull(sum(op.FIFOCost),0) + isnull(sum(pur.FIFOCost),0) + isnull(sum(tin.FIFOCost),0) + isnull(sum(tout.FIFOCost),0) + isnull(sum(sb.FIFOCost),0) + 
	isnull(sum(sc.FIFOCost),0)
	from @brandopening bo
	left outer join @opening op on bo.BrandOpeningID = op.BrandOpeningID
	left outer join @purchase pur on bo.BrandOpeningID = pur.BrandOpeningID
	left outer join @TransferIn tin on bo.BrandOpeningID = tin.BrandOpeningID
	left outer join @TransferOut tout on bo.BrandOpeningID = tout.BrandOpeningID
	left outer join @salebrand sb on bo.BrandOpeningID = sb.BrandOpeningID
	left outer join @salecocktail sc on bo.BrandOpeningID = sc.BrandOpeningID
	group by bo.brandopeningid
	*/


	--############################################################################################

declare @MasterWiseCost numeric(14,2)
declare @FIFOWiseCost numeric(14,2)
declare @AverageCost numeric(14,2)

set @MasterWiseCost = 0
set @FIFOWiseCost = 0
set @AverageCost = 0

select @MasterWiseCost = isnull(sum(MasterWiseCost),0), @FIFOWiseCost = isnull(sum(FIFOWiseCost),0), @AverageCost = isnull((sum(MasterWiseCost)+sum(FIFOWiseCost))/2,0) from @closingstock

select vw.categorydesc as Category, vw.subcategoryname as Subcategory, vw.branddesc as Brand, vw.alias as [Size],
convert(varchar,dbo.Fun_Calcbottlefromspeg(op.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(op.UnitQty,vw.CategorySizeLinkUpID)) as Opening,
--op.UnitQty as Opening,
op.MasterWiseCost as OpeningMasterCost,
op.FIFOWiseCost as OpeningFIFOCost,
convert(numeric(14,2),(op.MasterWiseCost + op.FIFOWiseCost) / 2) as OpeningAverageCost,
convert(varchar,dbo.Fun_Calcbottlefromspeg(pur.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(pur.UnitQty,vw.CategorySizeLinkUpID)) as Purchase,
--pur.UnitQty as Purchase,
pur.MasterWiseCost as PurchaseMasterCost,
pur.FIFOWiseCost as PurchaseFIFOCost,
convert(numeric(14,2),(pur.MasterWiseCost + pur.FIFOWiseCost) / 2) as PurchaseAverageCost,
convert(varchar,dbo.Fun_Calcbottlefromspeg(sal.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sal.UnitQty,vw.CategorySizeLinkUpID)) as Sale,
--sal.UnitQty as Sale,
sal.MasterWiseCost as SaleMasterCost,
sal.FIFOWiseCost as SaleFIFOCost,
convert(numeric(14,2),(sal.MasterWiseCost + sal.FIFOWiseCost) / 2) as SaleAverageCost,
convert(varchar,dbo.Fun_Calcbottlefromspeg(clo.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(clo.UnitQty,vw.CategorySizeLinkUpID)) as Closing,
--clo.UnitQty as Closing,
clo.MasterWiseCost as ClosingMasterCost,
clo.FIFOWiseCost as ClosingFIFOCost,
convert(numeric(14,2),(clo.MasterWiseCost + clo.FIFOWiseCost) / 2) as ClosingAverageCost,
case
	when @MasterWiseCost = 0 then 0
	else convert(numeric(14,2),(clo.MasterWiseCost/@MasterWiseCost) * 100) 
end as MasterPercentage,
case
	when @FIFOWiseCost = 0 then 0
	else convert(numeric(14,2),(clo.FIFOWiseCost/@FIFOWiseCost) * 100) 
end as FIFOPercentage,
case
	when @AverageCost = 0 then 0
	else convert(numeric(14,2),((convert(numeric(14,2),(clo.MasterWiseCost + clo.FIFOWiseCost) / 2))/@AverageCost) * 100)
end as AvgPercentage
from @openingstock op
join @Purchasestock pur on op.brandopeningid = pur.brandopeningid
join @salestock sal on op.brandopeningid = sal.brandopeningid
join @closingstock clo on op.brandopeningid = clo.brandopeningid
join vw_brandopeningdetails vw on op.brandopeningid = vw.brandopeningid 
order by vw.categorydesc, vw.subcategoryname, vw.branddesc, vw.alias


select vw.categorydesc as Category, vw.alias as [Size],
convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(op.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(op.UnitQty),vw.CategorySizeLinkUpID)) as Opening,
--op.UnitQty as Opening,
sum(op.MasterWiseCost) as OpeningMasterCost,
sum(op.FIFOWiseCost) as OpeningFIFOCost,
convert(numeric(14,2),(sum(op.MasterWiseCost) + sum(op.FIFOWiseCost)) / 2) as OpeningAverageCost,
convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(pur.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(pur.UnitQty),vw.CategorySizeLinkUpID)) as Purchase,
--pur.UnitQty as Purchase,
sum(pur.MasterWiseCost) as PurchaseMasterCost,
sum(pur.FIFOWiseCost) as PurchaseFIFOCost,
convert(numeric(14,2),(sum(pur.MasterWiseCost) + sum(pur.FIFOWiseCost)) / 2) as PurchaseAverageCost,
convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(sal.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(sal.UnitQty),vw.CategorySizeLinkUpID)) as Sale,
--sal.UnitQty as Sale,
sum(sal.MasterWiseCost) as SaleMasterCost,
sum(sal.FIFOWiseCost) as SaleFIFOCost,
convert(numeric(14,2),(sum(sal.MasterWiseCost) + sum(sal.FIFOWiseCost)) / 2) as SaleAverageCost,
convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(clo.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(clo.UnitQty),vw.CategorySizeLinkUpID)) as Closing,
--clo.UnitQty as Closing,
sum(clo.MasterWiseCost) as ClosingMasterCost,
sum(clo.FIFOWiseCost) as ClosingFIFOCost,
convert(numeric(14,2),(sum(clo.MasterWiseCost) + sum(clo.FIFOWiseCost)) / 2) as ClosingAverageCost,
case
	when @MasterWiseCost = 0 then 0
	else (sum(clo.MasterWiseCost)/@MasterWiseCost) * 100 
end as MasterPercentage,
case
	when @FIFOWiseCost = 0 then 0
	else (sum(clo.FIFOWiseCost)/@FIFOWiseCost) * 100 
end as FIFOPercentage,
case
	when @AverageCost = 0 then 0
	else ((convert(numeric(14,2),(sum(clo.MasterWiseCost) + sum(clo.FIFOWiseCost)) / 2))/@AverageCost) * 100 
end as AvgPercentage
from @openingstock op
join @Purchasestock pur on op.brandopeningid = pur.brandopeningid
join @salestock sal on op.brandopeningid = sal.brandopeningid
join @closingstock clo on op.brandopeningid = clo.brandopeningid
join vw_brandopeningdetails vw on op.brandopeningid = vw.brandopeningid
group by vw.categorydesc, vw.alias, vw.CategorySizeLinkUpID
order by vw.categorydesc, vw.alias
	

	
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchNonMovingBrands') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchNonMovingBrands
GO

CREATE Proc Spr_FetchNonMovingBrands
@LicenseID numeric(18,0),
@FromDate smalldatetime,
@ToDate smalldatetime
as
begin

/*
select branddesc as Brand,alias as Size,categorydesc as Category,licensedesc as License from vw_BrandOpeningDetails
where PurchaseUnitQty = NonMovingQty and licenseid = @LicenseID
union 
select distinct branddesc,alias,categorydesc,licensedesc 
from tbl_fiforecords f
join vw_BrandOpeningDetails vw on vw.brandopeningid=f.brandopeningid
join tbl_purchasehead p on p.PurchaseId=f.PurchaseId
where NonMovableQty=UnitQty and TrnforBrandOpeningID is null  and p.LicenseId = @LicenseID
and (convert(smalldatetime,convert(varchar,p.PurchaseDate,102)) between convert(smalldatetime,convert(varchar,@FromDate)) and convert(smalldatetime,convert(varchar,@ToDate)))
union 
select distinct branddesc,alias,categorydesc,licensedesc 
from tbl_fiforecords f
join vw_BrandOpeningDetails vw on vw.brandopeningid=f.TrnforBrandOpeningID
join tbl_transferheadmst t on t.TransferHeadID=f.TrnTransferHeadID
where  NonMovableQty=UnitQty and purchaseid is null and t.LicenseID = @LicenseID
and ((convert(smalldatetime,convert(varchar,t.TransferDate,102)) between convert(smalldatetime,convert(varchar,@FromDate)) and convert(smalldatetime,convert(varchar,@ToDate))))
order by 1
*/

declare @opdate smalldatetime

--	set @licenseID = 3
--	set @fromdate = '1-Feb-2013'
--	set @todate = '28-Feb-2013'

	declare @brandopening table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2)
	)
	insert into @brandopening
	(BrandOpeningID, CategorySizeLinkUpID)
	select
	BrandOpeningID, CategorySizeLinkUpID
	from tbl_brandopening where licenseid = @licenseid


		declare @purchase table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)

		declare @TransferIn table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)




		declare @TransferOut table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)

		declare @salebrand table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)
		declare @salecocktail table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)




		delete from @purchase
		delete from @TransferIn


		insert into @purchase
		(BrandOpeningID, UnitQty)
		select 
		pd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty)+ sum(FreeQty), sum(sPegQty))
		from tbl_purchasehead ph
		join tbl_fiforecords pd on ph.PurchaseId = pd.PurchaseId
		join @brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
		where 
		convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
		group by pd.BrandOpeningID, bo.CategorySizeLinkUpID

		insert into @TransferIn
		(BrandOpeningID, UnitQty)
		select 
		td.TrnforBrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty))
		from Tbl_TransferHeadMst th 
		join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
		join @brandopening bo on bo.BrandOpeningID = td.TrnforBrandOpeningID
		where 
		convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
		group by td.TrnforBrandOpeningID, bo.CategorySizeLinkUpID

		declare @Purchasestock table
		(
			brandopeningid numeric(18,0),
			UnitQty numeric(18,0)
		)

		insert into @Purchasestock
		(brandopeningid, UnitQty)
		select bo.brandopeningid, 
		(isnull(sum(pur.UnitQty),0) + isnull(sum(tin.UnitQty),0))
		from @brandopening bo
		left outer join @purchase pur on bo.BrandOpeningID = pur.BrandOpeningID
		left outer join @TransferIn tin on bo.BrandOpeningID = tin.BrandOpeningID
		group by bo.brandopeningid




		delete from @TransferOut
		delete from @salebrand
		delete from @salecocktail


	insert into @TransferOut
	(BrandOpeningID, UnitQty)
	select 
	td.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty))
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by td.BrandOpeningID, bo.CategorySizeLinkUpID

	insert into @salebrand
	(BrandOpeningID, UnitQty)
	Select 
	sd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(Speg) + (sum(Lpeg)*2))
	from tbl_salehead sh
	join Tbl_SaleDetail sd on sh.billid = sd.billid
	join @brandopening bo on bo.BrandOpeningID = sd.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by sd.BrandOpeningID, bo.CategorySizeLinkUpID

	insert into @salecocktail
	(BrandOpeningID, UnitQty)
	select 
	scd.BrandOpeningid, sum(Speg)
	from Tbl_SaleHead sh
	join Tbl_SaleCocktailHead sch on sh.billid = sch.billid
	join Tbl_SaleCocktailDetail scd on scd.CocktailSaleId=sch.CocktailSaleId  
	join @brandopening bo on bo.BrandOpeningID = scd.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by scd.BrandOpeningid

	declare @salestock table
	(
		brandopeningid numeric(18,0),
		UnitQty numeric(18,0)
	)
	insert into @salestock
	(brandopeningid, UnitQty)
	select bo.brandopeningid, 
	isnull(sum(tout.UnitQty),0) + isnull(sum(sb.UnitQty),0) + isnull(sum(sc.UnitQty),0)
	from @brandopening bo
	left outer join @TransferOut tout on bo.BrandOpeningID = tout.BrandOpeningID
	left outer join @salebrand sb on bo.BrandOpeningID = sb.BrandOpeningID
	left outer join @salecocktail sc on bo.BrandOpeningID = sc.BrandOpeningID
	group by bo.brandopeningid

	declare @optemp table
	(
		BrandOpeningID numeric(18,0),
		Units numeric(18,0)
	)

	set @opdate = @fromdate - 1
	insert into @optemp (BrandOpeningID, Units) exec Spr_GetClosingStock @licenseid, @opdate

	select vw.categorydesc as Category, vw.subcategoryname as Subcategory, vw.branddesc as Brand, vw.alias as Size, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(op.units,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(op.units,vw.CategorySizeLinkUpID)) as Opening,	
	--sum(op.units) as Opening, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(p.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(p.UnitQty,vw.CategorySizeLinkUpID)) as Purchase,
	--p.UnitQty as Purchase, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(op.units+p.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(op.units+p.UnitQty,vw.CategorySizeLinkUpID)) as Total,
	--op.units+p.UnitQty as Total, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(s.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(s.UnitQty,vw.CategorySizeLinkUpID)) as Sale,
	--s.UnitQty as Sale, 
	convert(numeric(14,2),case op.units+p.UnitQty 
		when 0 then 0
		else (s.UnitQty/(op.units+p.UnitQty))*100
	end) as SalePercentage
	from vw_brandopeningdetails vw
	join @optemp op on op.brandopeningid = vw.brandopeningid
	left outer join @salestock s on s.brandopeningid = op.brandopeningid
	left outer join @Purchasestock p on p.brandopeningid = op.brandopeningid
	where s.UnitQty = 0 and (op.units+p.UnitQty) > 0
	order by vw.categorydesc, vw.branddesc, vw.alias

	select vw.categorydesc as Category, vw.alias as Size, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(op.units),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(op.units),vw.CategorySizeLinkUpID)) as Opening,
	--sum(op.units) as Opening, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(p.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(p.UnitQty),vw.CategorySizeLinkUpID)) as Purchase,
	--sum(p.UnitQty) as Purchase, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(op.units)+sum(p.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(op.units)+sum(p.UnitQty),vw.CategorySizeLinkUpID)) as Total,
	--sum(op.units)+sum(p.UnitQty) as Total, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(s.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(s.UnitQty),vw.CategorySizeLinkUpID)) as Sale,
	--sum(s.UnitQty) as Sale, 
	convert(numeric(14,2),case (sum(op.units)+sum(p.UnitQty))
		when 0 then 0
		else (sum(s.UnitQty)/((sum(op.units)+sum(p.UnitQty))))*100
	end) as SalePercentage
	from vw_brandopeningdetails vw
	join @optemp op on op.brandopeningid = vw.brandopeningid
	left outer join @salestock s on s.brandopeningid = op.brandopeningid
	left outer join @Purchasestock p on p.brandopeningid = op.brandopeningid
	where s.UnitQty = 0 and (op.units+p.UnitQty) > 0
	group by vw.categorydesc, vw.alias, vw.CategorySizeLinkUpID 
	order by vw.categorydesc, vw.alias
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[spr_Dash_SaleToPurchaseRatioReport]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[spr_Dash_SaleToPurchaseRatioReport]
GO

CREATE proc [dbo].[spr_Dash_SaleToPurchaseRatioReport]
@licenseid numeric(18,0),
@ControlHeadID numeric(18,0)=0,       
--@FromDate DateTime='1-jan-1900',      
--@ToDate DateTime='1-jan-1900',
@CategoryID numeric(18,0),
@SubCategoryID numeric(18,0),
@IsExport bit = 0
as
begin
declare @FromDate DateTime
declare @ToDate DateTime

		select @FromDate=FromDate,@ToDate=ToDate from
		Tbl_ControlsHead where ControlHeadID = @ControlHeadID    
	
declare @strSelect varchar(max)
    if @IsExport = 1
	  begin
	      set @strSelect=''
			 set @StrSelect='select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,lnk.alias,
			    sum(f.unitqty) as  totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,sum(f.nonmovableqty)-sum(f.unitqty) as Sale,isnull(((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100,0)  as SalePerc,
				convert(varchar,p.PurchaseDate,106) as PurchaseDate,bh.categoryid,ctg.categorydesc as Category,sub.subcategoryid,sub.SubCategoryName as SubCategory
				from tbl_fiforecords f
				join tbl_purchasehead p on p.purchaseid=f.purchaseid
				join tbl_brandopening bo on bo.BrandOpeningID=f.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where TrnTranferDetailID is null and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and p.PurchaseDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') 
				group by bh.BrandID,bh.BrandDesc,lnk.alias,p.PurchaseDate,bh.categoryid,ctg.categorydesc,sub.subcategoryid,sub.SubCategoryName 
				union all
				select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,lnk.alias,
				sum(f.unitqty) as totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,sum(f.nonmovableqty)-sum(f.unitqty) as Sale, isnull(((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100,0) as SalePerc,
				convert(varchar,t.TransferDate,106) as PurchaseDate,bh.categoryid,ctg.categorydesc as Category,sub.subcategoryid,sub.SubCategoryName as SubCategory
				from tbl_fiforecords f
				join tbl_transferheadmst t on t.TransferHeadID=f.TrnTransferHeadID
				join tbl_brandopening bo on bo.BrandOpeningID=f.TrnforBrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where f.purchaseid is null  and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and t.TransferDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') 
				group by  bh.BrandID,bh.BrandDesc,lnk.alias,t.TransferDate,bh.categoryid,ctg.categorydesc,sub.subcategoryid,sub.SubCategoryName 
				union all
				
				select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,lnk.alias,sum(bo.PurchaseUnitQty) as  totUnitQty,sum(bo.NonMovingQty) as totNonMovableQty,
				sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty) as sale,isnull(((sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty))/sum(bo.NonMovingQty))*100,0)  as SalePerc,
				convert(varchar,p.PurchaseDate,106) as PurchaseDate,bh.categoryid,ctg.categorydesc as Category,sub.subcategoryid,sub.SubCategoryName as SubCategory
				from tbl_fiforecords f
				join tbl_saledetail sl on sl.FifoRecordsID=f.FifoRecordsID
				join tbl_purchasehead p on p.purchaseid=f.purchaseid
				join tbl_brandopening bo on bo.BrandOpeningID=f.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where TrnTranferDetailID is null and sl.FifoRecordsID is  null and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and p.PurchaseDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''')
				group by bh.BrandID,bh.BrandDesc,lnk.alias,p.PurchaseDate,bh.categoryid,ctg.categorydesc,sub.subcategoryid,sub.SubCategoryName'
				
	  end
	else
	begin 
		if  @Categoryid = 0
			begin

				set @strSelect=''
				set @StrSelect='select bh.categoryid,ctg.categorydesc+''(''+lnk.alias+'')'' as Category,sum(f.unitqty) as  totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100  as SalePerc,
				convert(varchar,p.PurchaseDate,106) as PurchaseDate
				from tbl_fiforecords f
				join tbl_saledetail sl on sl.FifoRecordsID=f.FifoRecordsID
				join tbl_purchasehead p on p.purchaseid=f.purchaseid
				join tbl_brandopening bo on bo.BrandOpeningID=f.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				where TrnTranferDetailID is null and sl.FifoRecordsID is not null and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and p.PurchaseDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''')
				group by bh.categoryid,ctg.categorydesc,lnk.alias,p.PurchaseDate  
				
				union all
				
				select bh.categoryid,ctg.categorydesc+''(''+lnk.alias+'')'' as Category,sum(bo.PurchaseUnitQty) as  totUnitQty,sum(bo.NonMovingQty) as totNonMovableQty,((sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty))/sum(bo.NonMovingQty))*100  as SalePerc,
				convert(varchar,p.PurchaseDate,106) as PurchaseDate
				from tbl_fiforecords f
				join tbl_saledetail sl on sl.FifoRecordsID=f.FifoRecordsID
				join tbl_purchasehead p on p.purchaseid=f.purchaseid
				join tbl_brandopening bo on bo.BrandOpeningID=f.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				where TrnTranferDetailID is null and sl.FifoRecordsID is  null and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and p.PurchaseDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''')
				group by bh.categoryid,ctg.categorydesc,lnk.alias,p.PurchaseDate
				
				union all
				select bh.categoryid,ctg.categorydesc+''(''+lnk.alias+'')'' as Category,sum(f.unitqty) as totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100 as SalePerc,
				convert(varchar,t.TransferDate,106) as PurchaseDate
				from tbl_fiforecords f
				join tbl_transferheadmst t on t.TransferHeadID=f.TrnTransferHeadID
				join tbl_brandopening bo on bo.BrandOpeningID=f.TrnforBrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				where f.purchaseid is null  and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and t.TransferDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''')
				group by  bh.categoryid,ctg.categorydesc,lnk.alias,t.TransferDate
				order by 6 desc'
			end
			
	else if  @SubCategoryid = 0
		begin
		    set @strSelect=''
			set @StrSelect='select sub.subcategoryid,sub.SubCategoryName+''(''+lnk.alias+'')'' as SubCategory,
			    sum(f.unitqty) as  totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100  as SalePerc,
				convert(varchar,p.PurchaseDate,106) as PurchaseDate
				from tbl_fiforecords f
				join tbl_purchasehead p on p.purchaseid=f.purchaseid
				join tbl_brandopening bo on bo.BrandOpeningID=f.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where TrnTranferDetailID is null and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and p.PurchaseDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') and ctg.categoryid='''+convert(varchar, @Categoryid) +'''
				group by sub.subcategoryid,sub.SubCategoryName,lnk.alias,p.PurchaseDate  
				union all
				select sub.subcategoryid,sub.SubCategoryName+''(''+lnk.alias+'')'' as SubCategory
				,sum(f.unitqty) as totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100 as SalePerc,
				convert(varchar,t.TransferDate,106) as PurchaseDate
				from tbl_fiforecords f
				join tbl_transferheadmst t on t.TransferHeadID=f.TrnTransferHeadID
				join tbl_brandopening bo on bo.BrandOpeningID=f.TrnforBrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where f.purchaseid is null  and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and t.TransferDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') and ctg.categoryid='''+convert(varchar, @Categoryid) +'''
				group by  sub.subcategoryid,sub.SubCategoryName,lnk.alias,t.TransferDate
				order by 6 desc'
		end
	
	else
		begin
			 set @strSelect=''
			 set @StrSelect='select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
			    sum(f.unitqty) as  totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100  as SalePerc,
				convert(varchar,p.PurchaseDate,106) as PurchaseDate
				from tbl_fiforecords f
				join tbl_purchasehead p on p.purchaseid=f.purchaseid
				join tbl_brandopening bo on bo.BrandOpeningID=f.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where TrnTranferDetailID is null and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and p.PurchaseDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') and ctg.categoryid='''+convert(varchar, @Categoryid) +''' and sub.subcategoryid='''+convert(varchar, @SubCategoryid) +'''
				group by bh.BrandID,bh.BrandDesc,lnk.alias,p.PurchaseDate  
				union all
				select bh.BrandID,bh.BrandDesc+''(''+lnk.alias+'')'' as Brand,
				sum(f.unitqty) as totUnitQty,sum(f.nonmovableqty) as totNonMovableQty,((sum(f.nonmovableqty)-sum(f.unitqty))/sum(f.nonmovableqty))*100 as SalePerc,
				convert(varchar,t.TransferDate,106) as PurchaseDate
				from tbl_fiforecords f
				join tbl_transferheadmst t on t.TransferHeadID=f.TrnTransferHeadID
				join tbl_brandopening bo on bo.BrandOpeningID=f.TrnforBrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where f.purchaseid is null  and bo.LicenseID='''+ convert(varchar, @LicenseID)+''' and t.TransferDate between convert(smalldatetime,'''+convert(varchar,@FromDate,102) 
				+ ''') and convert(smalldatetime,''' + convert(varchar,@ToDate,102)+''') and ctg.categoryid='''+convert(varchar, @Categoryid) +''' and sub.subcategoryid='''+convert(varchar, @SubCategoryid) +'''
				group by  bh.BrandID,bh.BrandDesc,lnk.alias,t.TransferDate
				order by 6 desc'
		end
	end
	print @strSelect
	exec (@strSelect)

end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchSlowMovingStock') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchSlowMovingStock
GO

CREATE Procedure Spr_FetchSlowMovingStock
@licenseID numeric(18,0),
@fromdate datetime,
@todate datetime
As
Begin
	declare @opdate smalldatetime

--	set @licenseID = 3
--	set @fromdate = '1-Feb-2013'
--	set @todate = '28-Feb-2013'

	declare @brandopening table
	(
		BrandOpeningID numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0),
		MasterPurRate numeric(14,2), 
		PurchaseRate numeric(14,2), 
		MasterUnitBottleRate numeric(14,2), 
		PurchaseUnitBottleRate numeric(14,2)
	)
	insert into @brandopening
	(BrandOpeningID, CategorySizeLinkUpID)
	select
	BrandOpeningID, CategorySizeLinkUpID
	from tbl_brandopening where licenseid = @licenseid


		declare @purchase table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)

		declare @TransferIn table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)




		declare @TransferOut table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)

		declare @salebrand table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)
		declare @salecocktail table
		(
			BrandOpeningID numeric(18,0),
			CategorySizeLinkUpID numeric(18,0),
			UnitQty numeric(18,0),
			MasterPurRate numeric(14,2), 
			PurchaseRate numeric(14,2), 
			MasterUnitBottleRate numeric(14,2), 
			PurchaseUnitBottleRate numeric(14,2),
			MasterCost numeric(14,2),
			FIFOCost numeric(14,2)
		)




		delete from @purchase
		delete from @TransferIn


		insert into @purchase
		(BrandOpeningID, UnitQty)
		select 
		pd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty)+ sum(FreeQty), sum(sPegQty))
		from tbl_purchasehead ph
		join tbl_fiforecords pd on ph.PurchaseId = pd.PurchaseId
		join @brandopening bo on bo.BrandOpeningID = pd.BrandOpeningID
		where 
		convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
		group by pd.BrandOpeningID, bo.CategorySizeLinkUpID

		insert into @TransferIn
		(BrandOpeningID, UnitQty)
		select 
		td.TrnforBrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty))
		from Tbl_TransferHeadMst th 
		join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
		join @brandopening bo on bo.BrandOpeningID = td.TrnforBrandOpeningID
		where 
		convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
		group by td.TrnforBrandOpeningID, bo.CategorySizeLinkUpID

		declare @Purchasestock table
		(
			brandopeningid numeric(18,0),
			UnitQty numeric(18,0)
		)

		insert into @Purchasestock
		(brandopeningid, UnitQty)
		select bo.brandopeningid, 
		(isnull(sum(pur.UnitQty),0) + isnull(sum(tin.UnitQty),0))
		from @brandopening bo
		left outer join @purchase pur on bo.BrandOpeningID = pur.BrandOpeningID
		left outer join @TransferIn tin on bo.BrandOpeningID = tin.BrandOpeningID
		group by bo.brandopeningid




		delete from @TransferOut
		delete from @salebrand
		delete from @salecocktail


	insert into @TransferOut
	(BrandOpeningID, UnitQty)
	select 
	td.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(sPegQty))
	from Tbl_TransferHeadMst th 
	join tbl_fiforecords td on th.TransferHeadID = td.TrnTransferHeadID
	join @brandopening bo on bo.BrandOpeningID = td.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,th.TransferDate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by td.BrandOpeningID, bo.CategorySizeLinkUpID

	insert into @salebrand
	(BrandOpeningID, UnitQty)
	Select 
	sd.BrandOpeningID, dbo.Fun_Calcunits(bo.CategorySizeLinkUpID, sum(BottleQty), sum(Speg) + (sum(Lpeg)*2))
	from tbl_salehead sh
	join Tbl_SaleDetail sd on sh.billid = sd.billid
	join @brandopening bo on bo.BrandOpeningID = sd.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by sd.BrandOpeningID, bo.CategorySizeLinkUpID

	insert into @salecocktail
	(BrandOpeningID, UnitQty)
	select 
	scd.BrandOpeningid, sum(Speg)
	from Tbl_SaleHead sh
	join Tbl_SaleCocktailHead sch on sh.billid = sch.billid
	join Tbl_SaleCocktailDetail scd on scd.CocktailSaleId=sch.CocktailSaleId  
	join @brandopening bo on bo.BrandOpeningID = scd.BrandOpeningID
	where 
	convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
	group by scd.BrandOpeningid

	declare @salestock table
	(
		brandopeningid numeric(18,0),
		UnitQty numeric(18,0)
	)
	insert into @salestock
	(brandopeningid, UnitQty)
	select bo.brandopeningid, 
	isnull(sum(tout.UnitQty),0) + isnull(sum(sb.UnitQty),0) + isnull(sum(sc.UnitQty),0)
	from @brandopening bo
	left outer join @TransferOut tout on bo.BrandOpeningID = tout.BrandOpeningID
	left outer join @salebrand sb on bo.BrandOpeningID = sb.BrandOpeningID
	left outer join @salecocktail sc on bo.BrandOpeningID = sc.BrandOpeningID
	group by bo.brandopeningid

	declare @optemp table
	(
		BrandOpeningID numeric(18,0),
		Units numeric(18,0)
	)

	set @opdate = @fromdate - 1
	insert into @optemp (BrandOpeningID, Units) exec Spr_GetClosingStock @licenseid, @opdate

	select vw.categorydesc as Category, vw.subcategoryname as Subcategory, vw.branddesc as Brand, vw.alias as Size, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(op.units,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(op.units,vw.CategorySizeLinkUpID)) as Opening,	
	--sum(op.units) as Opening, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(p.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(p.UnitQty,vw.CategorySizeLinkUpID)) as Purchase,
	--p.UnitQty as Purchase, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(op.units+p.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(op.units+p.UnitQty,vw.CategorySizeLinkUpID)) as Total,
	--op.units+p.UnitQty as Total, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(s.UnitQty,vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(s.UnitQty,vw.CategorySizeLinkUpID)) as Sale,
	--s.UnitQty as Sale, 
	convert(numeric(14,2),case op.units+p.UnitQty 
		when 0 then 0
		else (s.UnitQty/(op.units+p.UnitQty))*100
	end) as SalePercentage
	from vw_brandopeningdetails vw
	join @optemp op on op.brandopeningid = vw.brandopeningid
	left outer join @salestock s on s.brandopeningid = op.brandopeningid
	left outer join @Purchasestock p on p.brandopeningid = op.brandopeningid
	order by vw.categorydesc, vw.branddesc, vw.alias

	select vw.categorydesc as Category, vw.alias as Size, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(op.units),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(op.units),vw.CategorySizeLinkUpID)) as Opening,
	--sum(op.units) as Opening, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(p.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(p.UnitQty),vw.CategorySizeLinkUpID)) as Purchase,
	--sum(p.UnitQty) as Purchase, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(op.units)+sum(p.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(op.units)+sum(p.UnitQty),vw.CategorySizeLinkUpID)) as Total,
	--sum(op.units)+sum(p.UnitQty) as Total, 
	convert(varchar,dbo.Fun_Calcbottlefromspeg(sum(s.UnitQty),vw.CategorySizeLinkUpID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(sum(s.UnitQty),vw.CategorySizeLinkUpID)) as Sale,
	--sum(s.UnitQty) as Sale, 
	convert(numeric(14,2),case (sum(op.units)+sum(p.UnitQty))
		when 0 then 0
		else (sum(s.UnitQty)/((sum(op.units)+sum(p.UnitQty))))*100
	end) as SalePercentage
	from vw_brandopeningdetails vw
	join @optemp op on op.brandopeningid = vw.brandopeningid
	left outer join @salestock s on s.brandopeningid = op.brandopeningid
	left outer join @Purchasestock p on p.brandopeningid = op.brandopeningid
	group by vw.categorydesc, vw.alias, vw.CategorySizeLinkUpID 
	order by vw.categorydesc, vw.alias

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchMenuEngineering]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchMenuEngineering]
GO

Create proc [dbo].[Spr_FetchMenuEngineering]
@Profit int,
@Popular int
as
begin
declare  @temp table
(
BrandOpeningID numeric(18,0),
BrandID numeric(18,0),
Brand varchar(500),
Quantity numeric(14,2),
PurRate numeric(14,2),
SaleRate numeric(14,2),
ItemProfit numeric(14,2)
)

insert into @temp(BrandOpeningID,BrandID,Brand,Quantity,PurRate,SaleRate,ItemProfit)

select f.BrandOpeningID,bh.BrandID,bh.BrandDesc+'('+lnk.alias+')' as Brand,sum(f.nonmovableqty)-sum(f.unitqty), sum(f.PurchaseRate) as PurRate,
			    case 
			    when (sum(isnull(f.nonmovableqty,0))-sum(isnull(f.unitqty,0))) = 0 then 0
			    else  sum(isnull(sl.totalamount,0))/( sum(isnull(f.nonmovableqty,0))-sum(isnull(f.unitqty,0)))
			    end as UnitRate,
			    case 
			    when sum(isnull(f.nonmovableqty,0))-sum(isnull(f.unitqty,0))- sum(isnull(f.PurchaseRate,0)) = 0 then 0
                else (sum(sl.totalamount)/ (sum(isnull(f.nonmovableqty,0))-sum(isnull(f.unitqty,0))- sum(isnull(f.PurchaseRate,0))))
                end
			    from tbl_fiforecords f
				join tbl_saledetail sl on sl.BrandOpeningID=f.BrandOpeningID AND sl.FifoRecordsID=f.FifoRecordsID
				join tbl_purchasehead p on p.purchaseid=f.purchaseid
				join tbl_brandopening bo on bo.BrandOpeningID=f.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				where f.TrnTransferHeadID is null and sl.FifoRecordsID is not null
			    group by f.BrandOpeningID,bh.BrandID,bh.BrandDesc,lnk.alias,bo.PurchaseUnitRate
			   
			   union all
			   
				select bo.BrandOpeningID,bh.BrandID,bh.BrandDesc+'('+lnk.alias+')' as Brand,sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty),sum(bo.PurchaseUnitRate) as PurRate,
                case 
                when ( sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty)) = 0 then 0
                else sum(sl.totalamount)/( sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty))
                end as UnitRate,
                case 
                when( sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty))-sum(bo.PurchaseUnitRate) = 0 then 0
                else  (sum(sl.totalamount)/( sum(bo.NonMovingQty)-sum(bo.PurchaseUnitQty)))-sum(bo.PurchaseUnitRate)
                end
				from tbl_saledetail sl
				join tbl_salehead sh on sh.billid= sl.billid
				join tbl_brandopening bo on bo.BrandOpeningID=sl.BrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				where  sl.FifoRecordsID is  null 
				group by bo.BrandOpeningID,bh.BrandID,bh.BrandDesc,lnk.alias,sl.PurchaseRate
			    
				union all
				
				select f.TrnforBrandOpeningID,bh.BrandID,bh.BrandDesc+'('+lnk.alias+')' as Brand,
				sum(f.nonmovableqty)-sum(f.unitqty), sum(f.PurchaseRate) as PurRate,
			    case
			    when ( sum(f.nonmovableqty)-sum(f.unitqty)) = 0 then 0
			    else sum(sl.totalamount)/( sum(f.nonmovableqty)-sum(f.unitqty))
			    end  as UnitRate,
                case
                when ( sum(f.nonmovableqty)-sum(f.unitqty))- sum(f.PurchaseRate) = 0 then 0
                else (sum(sl.totalamount)/( sum(f.nonmovableqty)-sum(f.unitqty)))- sum(f.PurchaseRate)
                end
				from tbl_fiforecords f
				join tbl_saledetail sl on sl.BrandOpeningID=f.BrandOpeningID AND sl.FifoRecordsID=f.FifoRecordsID
				join tbl_transferheadmst t on t.TransferHeadID=f.TrnTransferHeadID
				join tbl_brandopening bo on bo.BrandOpeningID=f.TrnforBrandOpeningID
				join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID=bo.CategorySizeLinkUpID
				join tbl_brandhead bh on bh.BrandID=bo.BrandID
				join tbl_Category ctg on ctg.CategoryId = lnk.CategoryID
				join tbl_Subcategorymst sub on sub.categoryid=ctg.categoryid and bh.subcategoryid=sub.subcategoryid
				where f.purchaseid is null  
				group by  f.TrnforBrandOpeningID,bh.BrandID,bh.BrandDesc,lnk.alias,sl.PurchaseRate
				
				
	declare @NumSold Numeric(14,2)
	declare @AvgItemProfit Numeric(14,2)
	declare @NumItemAvg Numeric(14,2)
	
   if (select count(BrandOpeningID) from @temp) = 0 or (select sum(quantity) from @temp) = 0
	   begin
			  select @NumSold=0,
			@AvgItemProfit=0 ,
			@NumItemAvg=0
			from @temp	
	   end  
  else
		begin		
			select @NumSold=sum(quantity),
			@AvgItemProfit=(@Profit/100)*(sum(quantity*itemprofit)/sum(quantity))  ,
			@NumItemAvg=((@Popular/100)*(100/count(BrandOpeningID)))
			from @temp	
		end
	
	select BrandOpeningID,BrandID,Brand,isnull(Quantity,0) as Quantity,
	case 
	when @NumSold = 0 then 0
	else convert(numeric(14,3),isnull((Quantity/@NumSold)*100,0))
	end as PopularityPerc ,
	PurRate,isnull(SaleRate,0) as SaleRate,isnull(ItemProfit,0) as ItemProfit,isnull(quantity*purrate,0) as TotalCost,
	isnull(quantity*SaleRate,0) as TotalRevenue,isnull(quantity*itemprofit,0) as TotalProfit,
	case when (quantity*SaleRate) = 0 then 0
	else convert(numeric(14,3),isnull(((quantity*itemprofit)/(quantity*SaleRate))*100,0))
	end as ProfitPerc
	,case 
	when ItemProfit = 0 then 'Low'
	when ItemProfit < @AvgItemProfit then 'Low'
	else 'High'
	end as ProfitCategory,
	case 
	when Quantity = 0 then 'Low'
	when (Quantity/@NumSold)*100 < @NumItemAvg then 'Low'
	else 'High'
	end as PopularCategory,
    case 
    when ItemProfit > @AvgItemProfit and (Quantity/@NumSold)*100 < @NumItemAvg then 'Challenge'
	when ItemProfit > @AvgItemProfit and (Quantity/@NumSold)*100 > @NumItemAvg then 'Star'
	when ItemProfit < @AvgItemProfit and (Quantity/@NumSold)*100 > @NumItemAvg then 'Horse'
	when ItemProfit < @AvgItemProfit and (Quantity/@NumSold)*100 < @NumItemAvg then 'Dog' 
    end as Category
	from @temp 
	
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchWhatIfParameters') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchWhatIfParameters
GO

CREATE proc Spr_FetchWhatIfParameters
as
begin
	select * from tbl_WhatIfParameters
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_SaveScheduleVariance') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_SaveScheduleVariance
GO

Create proc Spr_SaveScheduleVariance
@ScheduleID numeric(18, 0),   
@LicenseID numeric(18, 0),  
@Repeat int,  
@StartDate smalldatetime,  
@username varchar(100),                                  
@Outbit bit output,                                  
@OutMsg varchar(100) output  
as  
begin  
 if @ScheduleID = 0  
  begin  
    insert into tbl_Schedulevariance(LicenseID,Repeat,startdate,oprc,dtc) values (@LicenseID,@Repeat,@startdate,@username,getdate())  
    set @Outbit=1  
    set @OutMsg='Saved Successfully'  
  end  
 else  
  begin  
    update tbl_Schedulevariance set LicenseID=@LicenseID,Repeat=@Repeat,startdate=@startdate,oprm=@username,dtm=getdate() where ScheduleID=@ScheduleID    
     set @Outbit=1  
    set @OutMsg='Updated Successfully'  
  end    
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_fetchlicense') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_fetchlicense
GO

CREATE procedure Spr_fetchlicense      
@LicenseID numeric(18,0)              
as              
Begin              
	If @LicenseID=0             

		Begin              
		select l.LicenseID,isNull(l.LicenseDesc,'') as LicenseDesc,isnull(l.LicenseNo,'') as LicenseNo,isnull(l.Add1,'') as Add1,isnull(l.Add2,'') as Add2,    
		isnull(l.City,'')as City,isnull(l.PinCode,'') as PinCode,isnull(l.Telephone,'') as Telephone,isnull(l.Email,'') as Email,isnull(l.Bst,'') as Bst,
		isnull(l.Cst,'') as Cst,l.store,isnull(convert(varchar,fz.freezdate,106),'') as FreezDate,isnull(fz.isActive,0) as IsActive,
		isnull(l.IsRack,0) as IsRack ,isnull(l1.LicenseDesc,'') as ForFL3      
		from tbl_License l        
		left outer join tbl_freezMaster fz on fz.LicenseID=l.LicenseID and fz.IsActive  = 1  
		left outer join tbl_License l1 on l1.LicenseID=l.ForFL3ID    

		End              
	Else              
		Begin              
		select convert(varchar,fz.FreezDate,106) as FreezDate,l.LicenseID,l.LicenseDesc,l.LicenseNo,isnull(l.Add1,'') as Add1,isnull(l.Add2,'') as Add2,
		isnull(l.City,'')as City,isnull(l.PinCode,'') as PinCode,isnull(l.IsRack,0) as IsRack  ,isnull(l.ForFL3ID,0) as ForFL3ID,
		isnull(l.Telephone,'') as Telephone,isnull(l.Email,'') as Email,isnull(l.Bst,'') as Bst,isnull(l.Cst,'') as Cst,l.store from tbl_License l        
		left outer join tbl_freezMaster fz on fz.LicenseID=l.LicenseID and fz.IsActive  = 1          
		where l.LicenseID=@LicenseID           
		End              
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_SaveLicenseMaster]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_SaveLicenseMaster]
GO

CREATE Procedure [dbo].[Spr_SaveLicenseMaster]
@LicenseID numeric(18,0),
@LicenseDesc varchar(100),
@LicenseNo varchar(100),
@Add1 varchar(100),
@Add2 varchar(100),
@City varchar(100),
@PinCode varchar(50),
@Telephone varchar(50),
@Email varchar(100),
@Bst varchar(100),
@Cst varchar(100),
@Store bit,
@IsRack bit,
@ForFL3 numeric(18,0),
@Outbit  bit output,        
@UserName varchar(100),          
@OutMsg  varchar(100) output         
as
Begin
	if @ForFL3 =0 
	begin
		set @ForFL3 = null
	end
if @LicenseID=0

	begin

		declare @BillLicenseID numeric(18,0)
		set @BillLicenseID=0
		insert into tbl_license(LicenseDesc,LicenseNo,Add1,Add2,City,PinCode,Telephone,Email,Bst,Cst,Store,IsRack,ForFL3ID,Oprc,Dtc)
		values
		(@LicenseDesc,@LicenseNo,@Add1,@Add2,@City,@PinCode,@Telephone,@Email,@Bst,@Cst,@Store,@IsRack,@ForFL3,@UserName,getdate())

		set @BillLicenseID=scope_Identity()
		
		

		insert into Tbl_BillMaster(LicenseID,BillStNo,BillEndNo,CurrentBillNo)
		values(@BillLicenseID,1,100000,0)


		set @OutMsg = 'Saved Successfully'        
		set @Outbit = 1   
	end
else
	begin

		update tbl_license	set LicenseDesc=@LicenseDesc,LicenseNo=@LicenseNo,Add1=@Add1,Add2=@Add2,City=@City,PinCode=@PinCode,Telephone=@Telephone,Email=@Email,
		Bst=@Bst,Cst=@Cst,Store=@Store,IsRack=@IsRack,ForFL3ID=@ForFL3,Oprm=@Username,dtm = getdate() 
		where licenseID=@LicenseID

		set @OutMsg='Updated Successfully'          
		set @Outbit=1  
	end
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_UpdateCurrentBillNo') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_UpdateCurrentBillNo
GO

Create Procedure Spr_UpdateCurrentBillNo
@XmlDocBill xml,
@Outbit bit output,                          
@OutMsg varchar(100) output
As
Begin
	declare @hdoc int      

	exec sp_xml_preparedocument @hdoc output,@XmlDocBill

	declare @tempBill table              
	(       
		LicenseID   numeric(18,0),    
		CurrentBillNo   numeric(18,0)
	)

	insert into @tempBill    
	(LicenseID, CurrentBillNo)
	select LicenseID,CurrentBillNo
	From OpenXML(@hdoc,'/Interface/Billmaster/License') with                          
	(       
		Licenseid  numeric(18,0),    
		CurrentBillNo numeric(18,0)
	)    

	update mst
	set mst.CurrentBillNo = t.CurrentBillNo
	from @tempBill t
	join Tbl_BillMaster mst on t.licenseid = mst.licenseid


	set @Outbit = 1
	set @OutMsg = 'Updated successfully'
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchBillMaster]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchBillMaster]
GO

CREATE Procedure [dbo].[Spr_FetchBillMaster]
@BillID numeric(18,0)  
as  
begin  
  if @BillID=0  
  begin  
  select isnull(bl.BillID,0) as BillID,l.LicenseID,isnull(l.LicenseNo,'') as LicenseNo,l.LicenseDesc,isnull(bl.BillStNo,0) as BillStNo,isnull(bl.BillEndNo,0) as BillEndNo,isnull(bl.CurrentBillNo,0) as CurrentBillNo from Tbl_BillMaster bl  
    join Tbl_License l on l.LicenseID=bl.LicenseID  
  end  
  
else  
  begin  
   select bl.BillID,l.LicenseNo,l.LicenseDesc,bl.BillStNo,bl.BillEndNo,bl.CurrentBillNo from Tbl_BillMaster bl  
   join Tbl_License l on bl.LicenseID=l.LicenseID where BillID=@BillID  
  end  
  
end  
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchCashmemoreport') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchCashmemoreport
GO

CREATE Procedure Spr_FetchCashmemoreport
@fromdate smalldatetime,
@todate smalldatetime,
@Outbit bit output,
@OutMsg varchar(100) output
As
Begin

declare @tempSale table
(
	Billid numeric(18,0),
	branddesc varchar(100),
	alias varchar(50),
	Quantity numeric(18,3),
	Rate numeric(18,2),
	Amount numeric(18,2)
)

insert into @tempSale
(billid, branddesc, alias, Quantity, Rate, Amount)

select sd.billid, vw.branddesc, vw.alias, sum(sd.BottleQty) as Quantity, sum(sd.Bottlerate) as Rate, sum(sd.TotalAmount) as Amount
from Tbl_SaleDetail sd
join vw_brandopeningdetails vw on vw.brandopeningid = sd.brandopeningid
join tbl_salehead sh on sd.billid = sh.billid
where sd.BottleQty > 0
and
convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))
group by sd.billid, vw.branddesc, vw.alias

union all

select sd.billid, vw.branddesc, vw.alias, sum(sd.speg) as Quantity, sum(sd.spegrate) as Rate, sum(sd.TotalAmount) as Amount
from Tbl_SaleDetail sd
join vw_brandopeningdetails vw on vw.brandopeningid = sd.brandopeningid
join tbl_salehead sh on sd.billid = sh.billid
where sd.speg > 0
and
convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))
group by sd.billid, vw.branddesc, vw.alias

union all

select sd.billid, vw.branddesc, vw.alias, sum(sd.lpeg) as Quantity, sum(sd.lpegrate) as Rate, sum(sd.TotalAmount) as Amount
from Tbl_SaleDetail sd
join vw_brandopeningdetails vw on vw.brandopeningid = sd.brandopeningid
join tbl_salehead sh on sd.billid = sh.billid
where sd.lpeg > 0
and 
convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))
group by sd.billid, vw.branddesc, vw.alias

union all

select sc.billid, c.CocktailName, '', sum(sc.Quantity), sum(sc.Rate), sum(sc.Quantity * sc.Rate)
from tbl_salecocktailhead sc
join tbl_salehead sh on sh.billid = sc.billid
join tbl_cocktail c on c.cocktailid = sc.cocktailid
where 
convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))
group by sc.billid, c.CocktailName

select sh.billid, sh.billno, convert(varchar,sh.billdate,106) as billdate, ltrim(rtrim(l.LicenseNo)) as LicenseNo, ltrim(rtrim(l.LicenseDesc)) as LicenseDesc, ltrim(rtrim(l.Add1)) as Add1, 
ltrim(rtrim(l.Add2)) as Add2, ltrim(rtrim(l.Cst)) as CST, ltrim(rtrim(l.Bst)) as BST,
sp.PermitHolderName, sp.PermitHolderNumber, 
case 
	when sp.PermitExpireDate = '1-Jan-1900' then 'LIfetime'
	else convert(varchar,sp.PermitExpireDate,106) 
end as PermitExpireDate,
tmp.branddesc, tmp.alias, convert(varchar,convert(numeric(18,0),tmp.Quantity)) as Quantity, convert(varchar,tmp.Rate) as Rate, convert(varchar,tmp.Amount) as Amount
from tbl_salehead sh
join tbl_license l on sh.licenseid = l.licenseid
join tbl_salepermit sp on sh.billid = sp.billid
join @tempSale tmp on tmp.billid = sh.billid
where convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))
order by LicenseDesc, sh.billid




--select * from Tbl_SaleDetail where billid = 50
set @Outbit = 1
set @OutMsg = 'success'

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[Spr_FetchPermitHolderByExpiryDate]') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[Spr_FetchPermitHolderByExpiryDate]
GO

CREATE procedure [dbo].[Spr_FetchPermitHolderByExpiryDate] 
@Date DateTime,    
@PermitHolderID numeric(18,0)    
as    
begin    

	if @PermitHolderID=0    
	begin    
		select ph.PermitHolderID,ph.PermitHolderNumber,ph.PermitHolderName    
		,convert(varchar,ph.PermitHolderNumber)+'-'+ph.PermitHolderName as dispfield,    
		case when ph.PermitExpireDate='1-Jan-1900' then 'Life Time' else convert(varchar,ph.PermitExpireDate,106) end as PermitExpireDate    
		from Tbl_PermitHolderMaster ph     
		join Tbl_PermitTypeMaster pt on ph.PermitTypeID=pt.PermitTypeID    
		where (convert(smalldatetime,convert(varchar,ph.PermitExpireDate,102)) >= convert(smalldatetime,convert(varchar,@Date,102)) or 
		convert(smalldatetime,convert(varchar,ph.PermitExpireDate,102)) = convert(smalldatetime,convert(varchar,'1-Jan-1900',102)))
		order by ph.PermitHolderID  
	end    
	else    
	begin    
		select ph.PermitHolderID,ph.PermitHolderNumber,ph.PermitHolderName,convert(varchar,ph.PermitHolderNumber)+'-'+ph.PermitHolderName as dispfield,    
		case when ph.PermitExpireDate='1-Jan-1900' then 'Life Time' else convert(varchar,ph.PermitExpireDate,106) end as PermitExpireDate    
		from Tbl_PermitHolderMaster ph     
		join Tbl_PermitTypeMaster pt on ph.PermitTypeID=pt.PermitTypeID    
		where (convert(smalldatetime,convert(varchar,ph.PermitExpireDate,102)) >= convert(smalldatetime,convert(varchar,@Date,102)) or 
		convert(smalldatetime,convert(varchar,ph.PermitExpireDate,102)) = convert(smalldatetime,convert(varchar,'1-Jan-1900',102))) and PermitHolderID=@PermitHolderID 
		order by ph.PermitHolderID   
	end    
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_ViewCocktailtocreate') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_ViewCocktailtocreate
GO

CREATE Procedure Spr_ViewCocktailtocreate
@licenseid numeric(18,0)
As
Begin

	select vw.categorydesc, vw.branddesc, vw.alias, c.Qty as Quantity
	from Tbl_CocktailAfterMigration	c
	join vw_brandopeningdetails vw on vw.brandopeningid = c.brandopeningid
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_MigrateFromCW2') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_MigrateFromCW2
GO

CREATE Procedure Spr_MigrateFromCW2
@dbname varchar(200),
@Outbit bit output,
@OutMsg varchar(100) output
As
Begin
		
	if (select count(licenseid) from tbl_license) = 0
	begin

		declare @strsql varchar(max)
		set @strsql = ''
	
		set @strsql = 'insert into tbl_license
		(LicenseNo, LicenseDesc, Add1, Add2, City, PinCode, Telephone, Email, Bst, Cst, Oprc, Dtc)
		select 
		licno, wsname, add1, add2, city, pincode, tel, email, bst, cst, ''admin'', getdate()
		from ' + ltrim(rtrim(@dbname)) + '..acdet'

		exec(@strsql)
		
		set @strsql = 'insert into tbl_licensecode
		(LicenseID, LicenseCode, oprc,dtc)
		select
		l.LicenseID, acdet.liccode, ''admin'', getdate()
		from ' + ltrim(rtrim(@dbname)) + '..acdet ac
		join ' + ltrim(rtrim(@dbname)) + '..acdetcode acdet on ac.lno = acdet.lno
		join tbl_license l on l.LicenseNo = ac.licno collate DATABASE_DEFAULT'

		exec(@strsql)
		
		set @strsql ='insert into Tbl_BillMaster
		(LicenseID,BillStNo,BillEndNo,CurrentBillNo)
		select 
		licenseid, 1, 100000, 0
		from tbl_license'

		exec(@strsql)

		set @strsql ='insert into tbl_supplier
		(SupplierName, Address, City, Pincode, Telephone, Email, Oprc, Dtc, suppliercode)
		select 
		distinct sname, isnull(add1,'''') + isnull(add2,''''), isnull(city,''''), isnull(pincode,''''), isnull(tel,''''), isnull(email,''''), ''admin'', getdate(), ''''
		from ' + ltrim(rtrim(@dbname)) + '..supplier'

		exec(@strsql)
		
		set @strsql ='insert into tbl_categorysizelinkup
		(LicenseID, CategoryID, SizeID, Alias, ML, Speg, StockIN, NoOfSpeg, PegSize, Oprc, Dtc)
		select 
		l.LicenseID, c.CategoryID, s.SizeID, cgdet.mlsiz, cgdet.mlsiz, cgdet.speg, 
		case
			when cgdet.calcas = 1 then ''B''
			when cgdet.calcas = 2 then ''P''
			else ''M''
		end, 0, 0, ''admin'', getdate()
		from ' + ltrim(rtrim(@dbname)) + '..catg cg
		join ' + ltrim(rtrim(@dbname)) + '..catdet cgdet on cg.catgno = cgdet.catgno
		join ' + ltrim(rtrim(@dbname)) + '..acdet ac on ac.lno = cgdet.lno
		join tbl_category c on ltrim(rtrim(lower(c.CategoryDesc))) = ltrim(rtrim(lower(cg.catg))) collate DATABASE_DEFAULT
		join tbl_size s on ltrim(rtrim(lower(s.SizeDesc))) = ltrim(rtrim(lower(cg.siz))) collate DATABASE_DEFAULT
		join tbl_license l on l.LicenseNo = ac.licno collate DATABASE_DEFAULT'

		exec(@strsql)			

		update tbl_categorysizelinkup
		set 
		NoOfSpeg = 
		case 
			when StockIN = 'B' then speg
			when StockIN = 'P' then speg
			else convert(int,alias/speg)
		end,
		PegSize = 
		case 
			when StockIN = 'B' then alias
			when StockIN = 'P' then convert(int,alias/speg)
			else speg
		end
		
		set @strsql ='insert into tbl_brandhead
		(CategoryID, BrandDesc, ShortName, Strength, PurRatePeg, Oprc, Dtc)
		select 
		distinct c.categoryid, op.brandname, b.shortname, 0, 0, ''admin'', getdate()
		from ' + ltrim(rtrim(@dbname)) + '..opbrand op
		join ' + ltrim(rtrim(@dbname)) + '..catg cg on op.catgno = cg.catgno
		join tbl_category c on c.CategoryDesc = cg.catg collate DATABASE_DEFAULT
		join ' + ltrim(rtrim(@dbname)) + '..brand b on b.brandname = op.brandname
		order by  op.brandname'

		exec(@strsql)

		set @strsql ='delete from tbl_brandhead where BrandDesc in (
		select BrandDesc 
		from tbl_brandhead
		group by BrandDesc
		having count(BrandDesc) > 1)'

		exec(@strsql)

		declare @licenseid numeric(18,0)
		set @licenseid = 0
		select top 1 @licenseid = licenseid from tbl_categorysizelinkup

		set @strsql ='insert into tbl_branddet
		(BrandID, SizeID, BoxQty, PurchaseRate,Oprc, Dtc, PurchaseTrnRate)
		select bh.BrandID, lnk.SizeID, 0, 0, ''admin'', getdate(), 0
		from tbl_categorysizelinkup lnk
		join tbl_brandhead bh on bh.categoryid = lnk.categoryid and lnk.licenseid = ' + convert(varchar,@licenseid) + '
		order by bh.BrandID'

		exec(@strsql)		

		set @Outbit = 1
		set @OutMsg = 'Imported successfully'
	end
	else
	begin
		set @Outbit = 0
		set @OutMsg = 'Data already exits please use this option on blank database'	
	end

		
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_SetOpeningStockForMigration') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_SetOpeningStockForMigration
GO

CREATE Procedure Spr_SetOpeningStockForMigration
@licenseid numeric(18,0),
@dbname varchar(200),
@openingdate smalldatetime,
@Outbit bit output,
@OutMsg varchar(100) output
As
Begin
	declare @strsql varchar(max)
	
	set @strsql ='insert into tbl_brandopening
	(BrandID, LicenseID, CategorySizeLinkUpID, sRate, OpeningQty, OpSpQty, BaseQty, OrdNo, PurchaseUnitQty, PurchaseUnitRate, NonMovingQty,ReorderLevel,
	OptimumLevel, MasterUnitBottleRate, Oprc, Dtc)
	select 
	b.brandid, l.licenseid, lnk.CategorySizeLinkID, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ''admin'', getdate()
	from ' + ltrim(rtrim(@dbname)) + '..catg cg
	join ' + ltrim(rtrim(@dbname)) + '..catdet cgdet on cg.catgno = cgdet.catgno
	join ' + ltrim(rtrim(@dbname)) + '..acdet ac on ac.lno = cgdet.lno
	join tbl_category c on ltrim(rtrim(lower(c.CategoryDesc))) = ltrim(rtrim(lower(cg.catg))) collate DATABASE_DEFAULT
	join tbl_size s on ltrim(rtrim(lower(s.SizeDesc))) = ltrim(rtrim(lower(cg.siz))) collate DATABASE_DEFAULT
	join tbl_license l on l.LicenseNo = ac.licno collate DATABASE_DEFAULT
	join ' + ltrim(rtrim(@dbname)) + '..opbrand op on op.catgno = cg.catgno and op.lno = ac.lno
	join tbl_categorysizelinkup lnk on lnk.categoryid = c.categoryid and lnk.sizeid = s.sizeid and lnk.licenseid = l.licenseid
	join tbl_brandHead b on lower(ltrim(rtrim(b.BrandDesc))) = lower(ltrim(rtrim(op.brandname))) collate DATABASE_DEFAULT
	where lnk.licenseid = ' + convert(varchar,@licenseid)
	
	print(@strsql)
	exec(@strsql)

	
	
	set @strsql ='declare @opdate varchar(12)
	set @opdate = '''+convert(varchar, @openingdate, 112)+'''

	declare @lno numeric(18,0)
	select @lno = ac.lno 
	from ' + ltrim(rtrim(@dbname)) + '..acdet ac
	join tbl_license l on l.LicenseNo = ac.licno collate DATABASE_DEFAULT
	where l.licenseid = '+convert(varchar,@licenseid)+'

	truncate table ' + ltrim(rtrim(@dbname)) + '..op

	exec ' + ltrim(rtrim(@dbname)) + '..flr3 @opdate, @lno, ''admin''

	create table #temp
	(
		idn int identity(1,1),
		brandname varchar(50),
		catgno numeric(18,0), 
		optho numeric(18,0), 
		opfive numeric(18,0), 
		opqt numeric(18,0), 
		opsf numeric(18,0), 
		oppt numeric(18,0), 
		optt numeric(18,0), 
		opttf numeric(18,0), 
		opnip numeric(18,0), 
		opsixty numeric(18,0)
	)
	insert into #temp
	(brandname, catgno, optho, opfive, opqt, opsf,  oppt, optt, opttf, opnip, opsixty)
	select brandname, catgno, optho, opfive, opqt, opsf,  oppt, optt, opttf, opnip, opsixty
	from ' + ltrim(rtrim(@dbname)) + '..opbrand op
	join ' + ltrim(rtrim(@dbname)) + '..op rpt on rpt.brandno = op.brandno

	delete from #temp 
	where optho = 0 and opfive = 0 and opqt = 0 and opsf = 0 and oppt = 0 and optt = 0 and opttf = 0 and opnip = 0 and opsixty = 0

	--select * from #temp

	create table #tempopening
	(
		brandopeningid numeric(18,0),
		CategorySizeLinkUpID numeric(18,0),
		UnitQty numeric(18,0)
	)
	insert into #tempopening (brandopeningid, CategorySizeLinkUpID, UnitQty)
	select
	vw.brandopeningid, vw.CategorySizeLinkUpID,
	case 
		when optho <> 0 then optho
		when opfive <> 0 then opfive
		when opqt <> 0 then opqt
		when opsf <> 0 then opsf
		when oppt <> 0 then oppt
		when optt <> 0 then optt
		when opttf <> 0 then opttf
		when opnip <> 0 then opnip
		else opsixty
	end as UnitQty
	from #temp t
	join ' + ltrim(rtrim(@dbname)) + '..catg c on c.catgno = t.catgno
	join vw_brandopeningdetails vw on vw.categorydesc = c.catg collate DATABASE_DEFAULT and vw.branddesc = t.brandname collate DATABASE_DEFAULT and vw.licenseid = '+convert(varchar,@licenseid)+'
	join tbl_size s on s.sizeid = vw.sizeid and c.siz = s.sizedesc collate DATABASE_DEFAULT

	update bo
	set bo.OpeningQty = temp.Bottle,
	bo.OpSpQty = temp.Speg
	from tbl_brandopening bo
	join (select t.brandopeningid, 
	dbo.Fun_CalcBottleforMigration(t.UnitQty, t.CategorySizeLinkUpID) as Bottle,
	dbo.Fun_CalcPegwithoutbottle(t.UnitQty, t.CategorySizeLinkUpID) as Speg
	from #tempopening t
	join vw_brandopeningdetails vw on vw.brandopeningid = t.brandopeningid
	join tbl_categorysizelinkup lnk on lnk.CategorySizeLinkID = vw.CategorySizeLinkUpID) temp on temp.brandopeningid = bo.brandopeningid
	
	Update tbl_brandopening  
	Set PurchaseUnitQty = dbo.Fun_Calcunits(categorysizelinkupid, OpeningQty, OpSpQty),    
	NonMovingQty = dbo.Fun_Calcunits(categorysizelinkupid, OpeningQty, OpSpQty)

	insert into Tbl_Cocktail(CocktailName, Oprc, Dtc)
	select distinct ctname, ''admin'', getdate() from ' + ltrim(rtrim(@dbname)) + '..cocktail order by ctname

	insert into Tbl_CocktailRate
	(Rate, CocktailId, LicenseId, oprc, dtc)
	select c.rate, ck.CocktailId, l.licenseid, ''admin'', getdate()
	from ' + ltrim(rtrim(@dbname)) + '..cocktail c
	join Tbl_Cocktail ck on lower(ltrim(rtrim(ck.CocktailName))) = lower(ltrim(rtrim(c.ctname))) collate DATABASE_DEFAULT
	join ' + ltrim(rtrim(@dbname)) + '..acdet ac on ac.lno = c.lno 
	join tbl_license l on lower(ltrim(rtrim(l.LicenseDesc))) = lower(ltrim(rtrim(ac.wsname))) collate DATABASE_DEFAULT
	where l.licenseid = '+convert(varchar,@licenseid)+'

	insert into Tbl_COcktailDetail 
	(CocktailID, BrandOpeningId, Speg, CategorysizelinkID, Licenceid, Oprc, Dtc)
	select
	ck.cocktailid, vw.brandopeningid, ct.speg, vw.CategorysizelinkupID, vw.licenseid, ''admin'', getdate()
	from ' + ltrim(rtrim(@dbname)) + '..ctdet ct
	join ' + ltrim(rtrim(@dbname)) + '..cocktail c on c.ctno = ct.ctno
	join Tbl_Cocktail ck on lower(ltrim(rtrim(ck.CocktailName))) = lower(ltrim(rtrim(c.ctname))) collate DATABASE_DEFAULT
	join ' + ltrim(rtrim(@dbname)) + '..opbrand op on ct.brandno = op.brandno
	join ' + ltrim(rtrim(@dbname)) + '..catg cg on cg.catgno = op.catgno
	join vw_brandopeningdetails vw on vw.branddesc = op.brandname collate DATABASE_DEFAULT
	join tbl_categorysizelinkup lnk on lnk.categorysizelinkid = vw.categorysizelinkupid
	join tbl_size s on ltrim(rtrim(lower(s.SizeDesc))) = ltrim(rtrim(lower(cg.siz))) collate DATABASE_DEFAULT and lnk.sizeid = s.sizeid
	join ' + ltrim(rtrim(@dbname)) + '..acdet ac on ac.lno = c.lno
	join tbl_license l on lower(ltrim(rtrim(l.LicenseDesc))) = lower(ltrim(rtrim(ac.wsname))) collate DATABASE_DEFAULT and l.licenseid = vw.licenseid
	where vw.licenseid = '+convert(varchar,@licenseid)+'


	insert into tbl_assignbrandcode
	(BrandID, BrandCode, TypeID, CategorySizeLinkUpID, LicenseID, Oprc, Dtc, BrandOpeningID)
	select
	vw.brandid, b.bcode, bsize + 1, vw.CategorySizeLinkUpID, vw.licenseid, ''admin'', getdate(), vw.brandopeningid
	from ' + ltrim(rtrim(@dbname)) + '..brandcode b
	join ' + ltrim(rtrim(@dbname)) + '..opbrand op on b.brandno = op.brandno
	join ' + ltrim(rtrim(@dbname)) + '..catg cg on cg.catgno = op.catgno
	join vw_brandopeningdetails vw on vw.branddesc = op.brandname collate DATABASE_DEFAULT
	join tbl_categorysizelinkup lnk on lnk.categorysizelinkid = vw.categorysizelinkupid
	join tbl_size s on ltrim(rtrim(lower(s.SizeDesc))) = ltrim(rtrim(lower(cg.siz))) collate DATABASE_DEFAULT and lnk.sizeid = s.sizeid
	join ' + ltrim(rtrim(@dbname)) + '..acdet ac on ac.lno = op.lno
	join tbl_license l on lower(ltrim(rtrim(l.LicenseDesc))) = lower(ltrim(rtrim(ac.wsname))) collate DATABASE_DEFAULT and l.licenseid = vw.licenseid
	where bsize <> 3 
	and ltrim(rtrim(b.bcode)) <> ''''
	and vw.licenseid = '+convert(varchar,@licenseid)+'
	order by bcode, bsize

	insert into tbl_assigncocktailcode
	(CocktailID, Cocktailcode, LicenseId, Oprc, Dtc)
	select ck.cocktailid, b.bcode, l.licenseid, ''admin'', getdate()
	from ' + ltrim(rtrim(@dbname)) + '..brandcode b
	join ' + ltrim(rtrim(@dbname)) + '..cocktail c on b.brandno = c.ctno
	join Tbl_Cocktail ck on lower(ltrim(rtrim(ck.CocktailName))) = lower(ltrim(rtrim(c.ctname))) collate DATABASE_DEFAULT
	join ' + ltrim(rtrim(@dbname)) + '..acdet ac on ac.lno = b.lno
	join tbl_license l on lower(ltrim(rtrim(l.LicenseDesc))) = lower(ltrim(rtrim(ac.wsname))) collate DATABASE_DEFAULT	
	where bsize = 3
	and ltrim(rtrim(b.bcode)) <> '''' 
	and l.licenseid = '+convert(varchar,@licenseid)+'
	order by bcode, bsize


	delete from Tbl_CocktailAfterMigration where licenseid = '+convert(varchar,@licenseid)+'

	insert into Tbl_CocktailAfterMigration
	(Licenseid, Brandopeningid, Qty)
	select 
	op.licenseid, op.brandopeningid, dbo.Fun_Calcunits(op.CategorySizeLinkUpID, op.OpeningQty, op.OpSpQty) - t.UnitQty
	from #tempopening t
	join tbl_brandopening op on op.brandopeningid = t.brandopeningid
	where dbo.Fun_Calcunits(op.CategorySizeLinkUpID, op.OpeningQty, op.OpSpQty) <> t.UnitQty

	drop table #temp
	drop table #tempopening
	'
	print(@strsql)
	exec(@strsql)
	
	
	set @Outbit = 1
	set @OutMsg = 'Done'
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_fetchCategoryPriceSequence') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_fetchCategoryPriceSequence
GO

CREATE Proc Spr_fetchCategoryPriceSequence
@CategoryID  numeric(18,0)
as
begin
	if @CategoryID = 0
		begin
			select CategoryID,isnull(Bottle,0) as Bottle,isnull(Speg,0) as Speg,isnull(Lpeg,0) as Lpeg from Tbl_CatgPriceSequence
		end
	else
		begin
			select CategoryID,isnull(Bottle,0) as Bottle,isnull(Speg,0) as Speg,isnull(Lpeg,0) as Lpeg from Tbl_CatgPriceSequence where CategoryID = @CategoryID
		end
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'spr_SaveCategoryPriceSequence') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE spr_SaveCategoryPriceSequence
GO

CREATE procedure [dbo].[spr_SaveCategoryPriceSequence]    
@CategoryID  numeric(18,0),          
@CatgPriceSequenceXML XML,        
@Username   varchar(100),     
@Outbit   bit output,      
@OutMsg   varchar(100) output      
as 
     
begin      
--Begin Try      
 --Begin Tran      
  Declare @hDoc int      
  EXEC sp_xml_preparedocument @hDoc Output, @CatgPriceSequenceXML  
    
 delete from Tbl_CatgPriceSequence where CategoryID= @CategoryID

 insert into Tbl_CatgPriceSequence(CategoryID,Bottle,Speg,Lpeg,Oprc,Oprm)      
 select @CategoryID,Bottle ,Speg,Lpeg,@Username,getdate()
 from openXML(@hdoc,'/Master/Category/PriceSeq') with      
  (              
    Bottle int,                   
    Speg int,
	Lpeg int               
     
  )              
     set @Outbit=1
	set  @OutMsg='Saved Successfully'          
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchCostingVerification') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchCostingVerification
GO

CREATE Proc Spr_FetchCostingVerification
@Fromdate smalldatetime,
@ToDate smalldatetime,
@brand varchar(500),
@Category varchar(500)
as
begin

select sh.billno,convert(varchar,sh.billdate,106) as BillDate,vw.branddesc as Brand,vw.alias as Size,vw.categorydesc as Category,vw.subcategoryname as Subcategory,sd.BottleQty,sd.Bottlerate,sd.Speg,sd.SpegRate,sd.Lpeg,sd.LpegRate,
'Opening' as ConsumedFrom,'1-jan-1900' as Purchasedate,'' as tpno,0 as PurchaseUnitRate,0 as MasterUnitBottleRate,0 as PurchaseUnitBottleRate,0 as MasterPurRate
from Tbl_SaleHead sh
join Tbl_Saledetail sd on sh.billid=sd.billid and FifoRecordsID is null
join vw_BrandOpeningDetails vw on sd.BrandOpeningID=vw.BrandOpeningID and sh.LicenseId=vw.licenseid
where (convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@Fromdate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102)))
and vw.branddesc like '%'+@brand+'%' and  vw.categorydesc like '%'+@Category+'%'

union all

select sh.billno,convert(varchar,sh.billdate,106) as BillDate,vw.branddesc,vw.alias,vw.categorydesc,vw.subcategoryname,sd.BottleQty,sd.Bottlerate,sd.Speg,sd.SpegRate,sd.Lpeg,sd.LpegRate,
'Purchase' as ConsumedFrom,p.purchasedate,p.tpno,pd.PurchaseUnitRate,pd.MasterUnitBottleRate,pd.PurchaseUnitBottleRate,pd.MasterPurRate
from Tbl_SaleHead sh
join Tbl_Saledetail sd on sh.billid=sd.billid
join vw_BrandOpeningDetails vw on sd.BrandOpeningID=vw.BrandOpeningID and sh.LicenseId=vw.licenseid
 join Tbl_FifoRecords fifo on fifo.FifoRecordsID=sd.FifoRecordsID and TrnTransferHeadID is null
 join Tbl_Purchasehead p on p.PurchaseId=fifo.PurchaseId
 join Tbl_Purchasedetail pd on pd.PurchaseID=p.PurchaseId
where (convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@Fromdate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102)))
and vw.branddesc like '%'+@brand+'%' and  vw.categorydesc like '%'+@Category+'%'

union all

select sh.billno,convert(varchar,sh.billdate,106) as BillDate,vw.branddesc,vw.alias,vw.categorydesc,vw.subcategoryname,sd.BottleQty,sd.Bottlerate,sd.Speg,sd.SpegRate,sd.Lpeg,sd.LpegRate,
'Transfer' as ConsumedFrom,t.transferdate,t.tpno,td.MasterPurRate,td.PurchaseRate,td.MasterUnitBottleRate,td.PurchaseUnitBottleRate
from Tbl_SaleHead sh
join Tbl_Saledetail sd on sh.billid=sd.billid
join vw_BrandOpeningDetails vw on sd.BrandOpeningID=vw.BrandOpeningID and sh.LicenseId=vw.licenseid
 join Tbl_FifoRecords fifo on fifo.FifoRecordsID=sd.FifoRecordsID and PurchaseId is null
join Tbl_TransferHeadMst t on t.TransferHeadID=fifo.TrnTransferHeadID
join Tbl_TransferDetailsMst td on td.TransferHeadID=t.TransferHeadID
where (convert(smalldatetime,convert(varchar,sh.billdate,102)) between convert(smalldatetime,convert(varchar,@Fromdate,102)) and convert(smalldatetime,convert(varchar,@ToDate,102)))
and vw.branddesc like '%'+@brand+'%' and  vw.categorydesc like '%'+@Category+'%'
order by 2
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_BrandwiseSummaryCore') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_BrandwiseSummaryCore
GO

create Proc Spr_BrandwiseSummaryCore
@licenseid numeric(18,0),
@fromdate smalldatetime,
@todate smalldatetime
as
begin
--declare @licenseid numeric(18,0)
--declare @fromdate smalldatetime
--declare @todate smalldatetime
--set @fromdate='15-Dec-2012'
--set @todate='31-Dec-2012'
--set @licenseID = 1

Declare @licno  varchar(100)      
Declare @liname varchar(100)      
set @licno=''      
set @liname=''      
select @licno= licenseno from tbl_license where licenseid=@licenseid      
select @liname= licensedesc from tbl_license where licenseid=@licenseid     

declare @brandid numeric(18,0)  
declare @CategorySizeLinkUpID numeric(18,0)
declare @BrandOpeningID numeric(18,0)

declare @StockIN char(1)    
declare @spegqty numeric(18,0)    
declare @sizeml int    
declare @totalspges numeric(18,0)

declare @TransferLicenseID numeric(18,0)
declare @TransferCategoryID numeric(18,0)
declare @TransferSizeID numeric(18,0)
declare @TransferCategorySizeLinkID numeric(18,0)

declare @opUnitQty numeric(18,0)
declare @purUnitQty numeric(18,0)
declare @totUnitQty numeric(18,0)
declare @salUnitQty numeric(18,0)


declare @strtp varchar(max)

	declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Opening numeric(18,0),
		Purchase numeric(18,0),
		Total numeric(18,0),
		Sale numeric(18,0),
		Closing numeric(18,0)
	)  
	declare @tempwhile table        
	( 
	brandopeningid numeric(18,0),
	brandid numeric(18,0),  
	CategorySizeLinkUpID numeric(18,0)        
	) 
	  


	insert into @tempbrand
	(brandopeningid, brandid, CategorySizeLinkID, categorydesc, Alias)
	select
	brandopeningid, brandid, CategorySizeLinkUpID, categorydesc, Alias
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID 
	order by CategorySizeLinkUpID 
       
	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID 
	order by brandid  


	set @brandid = 0
	set @CategorySizeLinkUpID = 0
	set @BrandOpeningID = 0


	while (select count(*) from @tempwhile) > 0          
	begin        
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'    
		set @spegqty = 0    
		set @sizeml = 0    
		set @totalspges = 0    

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID    

		if lower(@StockIN) <> 'm'    
		begin    

			select @totalspges = b.OpeningQty * @spegqty     
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			select @totalspges = @totalspges + b.OpSpQty    
			from tbl_brandopening b    
			where b.BrandOpeningID = @BrandOpeningID

			print @totalspges    

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   


			Select @totalspges = @totalspges + sum(pd.SQuantity)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID   

			--print @totalspges    

			--select * from tbl_purchasedetail  

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @spegqty)  
			from Tbl_TransferHeadMst th              
			join Tbl_TransferDetailsMst td   on th.TransferHeadID=td.TransferHeadID            
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - sum(td.spegqty)  
			from Tbl_TransferHeadMst th                 
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID                
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  


			Select @totalspges = @totalspges - sum(sd.Speg)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			Select @totalspges = @totalspges  - (sum(sd.Lpeg)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID         
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			

			select @totalspges = @totalspges - sum(sc.Speg)  
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead s on s.BillId = sa.BillId  
			where sc.BrandOpeningID=@BrandOpeningID 
			and convert(smalldatetime,convert(varchar,s.BillDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			update @tempbrand set Opening = @totalspges where BrandOpeningID=@BrandOpeningID

		end    
		else    
		begin    

			--print 'Rakesh'
			--set @date = '31-May-2012'  

			select @totalspges = b.OpeningQty * @sizeml     
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print  @totalspges                  

			select @totalspges = @totalspges + (b.OpSpQty*@spegqty)    
			from tbl_brandopening b    
			where b.BrandOpeningID=@BrandOpeningID

			--print   @totalspges

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId                 
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)    
			from tbl_purchasehead ph                
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId
			where pd.BrandOpeningID=@BrandOpeningID                  
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by pd.BrandOpeningID 


			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  		
			group by td.BrandOpeningID	

			Select @totalspges = @totalspges - (sum(td.BottleQty) * @sizeml)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID              
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			Select @totalspges = @totalspges - (sum(td.spegqty)*@spegqty)  
			from Tbl_TransferHeadMst th             
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID             
			join tbl_brandopening bo on td.BrandOpeningID = bo.BrandOpeningID and th.LicenseID = bo.LicenseID              
			where bo.BrandOpeningID=@BrandOpeningID
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by bo.brandid, bo.licenseid, bo.CategorySizeLinkUpID  

			--   print '2:'+convert(varchar,@totalspges)  

			Select @totalspges = @totalspges - (sum(sd.BottleQty)*@sizeml)    
			from Tbl_SaleHead s    
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  

			Select @totalspges = @totalspges - (sum(sd.Speg)*@spegqty)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID  
			
			
			Select @totalspges = @totalspges  - ((sum(sd.Lpeg)*@spegqty)*2)    
			from Tbl_SaleHead s            
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId            
			where sd.BrandOpeningID=@BrandOpeningID            
			and convert(smalldatetime,convert(varchar,s.BillDate,102)) < convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sd.BrandOpeningID 
			
			

			select @totalspges = @totalspges - (sum(sc.Speg)) --* @spegqty)   
			from Tbl_SaleCocktailHead sa  
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId  
			join Tbl_SaleHead sh on sh.Billid = sa.billid  
			where sc.BrandOpeningID=@BrandOpeningID   
			and convert(smalldatetime,convert(varchar,sh.billdate,102))< convert(smalldatetime,convert(varchar,@fromdate,102))  
			group by sc.BrandOpeningID  

			update @tempbrand set Opening = @totalspges where BrandOpeningID=@BrandOpeningID


		end
		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @brandopeningid=brandopeningid ,@brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid



		set @TransferLicenseID = 0
		set @TransferCategoryID = 0
		set @TransferSizeID = 0
		set @TransferCategorySizeLinkID = 0		

		select @TransferLicenseID = LicenseID, @TransferCategoryID = CategoryID, @TransferSizeID = SizeID 
		from tbl_categorysizelinkup	
		where CategorySizeLinkID = @CategorySizeLinkUpID

		select @TransferCategorySizeLinkID = CategorySizeLinkID
		from tbl_categorysizelinkup
		where CategoryID = @TransferCategoryID and SizeID = @TransferSizeID and LicenseID = @LicenseID

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp=''

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  

		if lower(@StockIN) <> 'm'  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
		
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102)) between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + sum(pd.SQuantity)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID


			select @strtp=@strtp + ph.TPno 
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			--print @totalspges  

			--select * from tbl_purchasedetail

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	


			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			update @tempbrand set purchase = @totalspges where BrandOpeningID=@BrandOpeningID 

			update @tempbrand set total = opening + purchase where BrandOpeningID=@BrandOpeningID
			
		end  
		else  
		begin  

			Select @totalspges = @totalspges + (sum(pd.BottleQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID
					
			Select @totalspges = @totalspges + (sum(pd.FreeQty) * @sizeml)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(pd.SQuantity)*@spegqty)  
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by pd.BrandOpeningID

			select @strtp=@strtp + ph.TPno
			from tbl_purchasehead ph              
			join tbl_purchasedetail pd  on ph.PurchaseId = pd.PurchaseId               
			where pd.BrandOpeningID=@BrandOpeningID  
			--and convert(varchar,ph.Purchasedate,106) <= convert(varchar,@date,106)
			and convert(smalldatetime,convert(varchar,ph.Purchasedate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
						
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID


			Select @totalspges = @totalspges + (sum(td.spegqty)*@spegqty)
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID	

			select @strtp=@strtp + th.Tpno
			from tbl_categorysizelinkup lnk
			join tbl_brandopening bo on lnk.CategorySizeLinkID = bo.CategorySizeLinkUpID
			join Tbl_TransferHeadMst th on th.LicenseID = bo.licenseid
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and td.brandopeningid = bo.brandopeningid
			where lnk.CategoryID = @TransferCategoryID and lnk.SizeID = @TransferSizeID and th.FOrLicenseID = @LicenseID and bo.brandid = @brandid
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			update @tempbrand set purchase = @totalspges where BrandOpeningID=@BrandOpeningID

			update @tempbrand set total = opening + purchase where BrandOpeningID=@BrandOpeningID

		end

		delete from @tempwhile where brandopeningid = @brandopeningid
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	end

	delete from @tempwhile

	insert into @tempwhile (brandopeningid,brandid,CategorySizeLinkUpID)   
	select distinct brandopeningid, brandid, CategorySizeLinkUpID 
	from vw_BrandOpeningDetails
	where LicenseID=@LicenseID --and categorydesc = 'IMPORTED BEER' and alias = '330'   
	order by brandid

	while (select count(*) from @tempwhile) > 0        
	begin      
		select top 1 @BrandOpeningID=BrandOpeningID, @brandid=brandid,@CategorySizeLinkUpID=CategorySizeLinkUpID 
		from @tempwhile order by  brandid

		set @StockIN = 'M'  
		set @spegqty = 0  
		set @sizeml = 0  
		set @totalspges = 0 
		set @strtp='' 

		select @StockIN = StockIN, @spegqty = Speg, @sizeml = ML from tbl_CategorySizeLinkUp where CategorySizeLinkID = @CategorySizeLinkUpID  


		if lower(@StockIN) <> 'm'
		begin  

			Select @totalspges =(sum(sd.BottleQty)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + sum(sd.Speg)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			Select @totalspges = @totalspges + (sum(sd.Lpeg)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
		
			select @totalspges = @totalspges + sum(sc.Speg)
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead s on s.BillId = sa.BillId
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			Select @totalspges = @totalspges + sum(td.spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			update @tempbrand set sale = @totalspges where BrandOpeningID=@BrandOpeningID

			update @tempbrand set closing = total - sale where BrandOpeningID=@BrandOpeningID


		end  
		else  
		begin  
		
			Select @totalspges =(sum(sd.BottleQty)*@sizeml)  
			from Tbl_SaleHead s  
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID

			Select @totalspges = @totalspges + (sum(sd.Speg)*@spegqty)  
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			
			
			Select @totalspges = @totalspges + ((sum(sd.Lpeg)*@spegqty)*2) 
			from Tbl_SaleHead s          
			join Tbl_SaleDetail sd  on s.BillId=sd.BillId          
			where sd.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,s.BillDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sd.BrandOpeningID
			

			select @totalspges = @totalspges + (sum(sc.Speg))-- * @spegqty) 
			from Tbl_SaleCocktailHead sa
			join Tbl_SaleCocktailDetail sc on sa.CocktailSaleId=sc.CocktailSaleId
			join Tbl_SaleHead sh on sh.Billid = sa.billid
			where sc.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,sh.billdate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by sc.BrandOpeningID

			--Select @totalspges = @totalspges + (sum(td.BottleQty) * @spegqty)
			Select @totalspges = @totalspges + (sum(td.BottleQty) * @sizeml)
			from Tbl_TransferHeadMst th           
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			--Select @totalspges = @totalspges + sum(td.spegqty)
			Select @totalspges = @totalspges + (sum(td.spegqty) * @spegqty)
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  
			group by td.BrandOpeningID

			select @strtp=isnull(@strtp,'') + isnull(th.Tpno,'')
			from Tbl_TransferHeadMst th            
			join Tbl_TransferDetailsMst td  on th.TransferHeadID=td.TransferHeadID and th.LicenseID = @licenseid
			where td.BrandOpeningID=@BrandOpeningID  
			and convert(smalldatetime,convert(varchar,th.TransferDate,102))between convert(smalldatetime,convert(varchar,@fromdate,102)) and convert(smalldatetime,convert(varchar,@todate,102))  

			update @tempbrand set sale = @totalspges where BrandOpeningID=@BrandOpeningID
			update @tempbrand set closing = total - sale where BrandOpeningID=@BrandOpeningID

		end      

		delete from @tempwhile where BrandOpeningID=@BrandOpeningID
		--brandid=@brandid and CategorySizeLinkUpID=@CategorySizeLinkUpID
	End

	select * from @tempbrand
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchBrandwiseSummary') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchBrandwiseSummary
GO
CREATE Proc Spr_FetchBrandwiseSummary
@xmlDoc xml,
@Outbit  bit output,
@OutMsg varchar(100) output
as
begin
   declare @Temp table
	(
		licenseid numeric(18,0),
		fromdate smalldatetime,
		todate smalldatetime,
		Brandwise bit,
		Categorywise bit,
		SubCategorywise bit,
		IsBulkLitre bit
	)
Declare @hdoc int 
exec sp_xml_preparedocument @hdoc output,@xmlDoc    
insert into @Temp (licenseid,fromdate,todate,Brandwise,Categorywise,SubCategorywise,IsBulkLitre)  
select LicenseID,FromDate,ToDate,Brandwise,Categorywise,SubCategorywise,IsBulkLitre
from openXML(@hDoc,'/Master/CocktailReports/Report') with    
(  
	LicenseID numeric(18,0),     
	FromDate datetime,  
	ToDate datetime,
	Brandwise bit,
	Categorywise bit,
	SubCategorywise bit,
	IsBulkLitre bit
)  

declare @licenseid numeric(18,0)
declare @fromdate smalldatetime
declare @todate smalldatetime

declare @Brandwise bit
declare @Categorywise bit
declare @SubCategorywise bit
declare @IsBulkLitre bit

select top 1 @Brandwise=Brandwise,@Categorywise=Categorywise,@SubCategorywise=SubCategorywise,@IsBulkLitre=IsBulkLitre from @Temp

declare @tempbrand table  
	(
		brandopeningid numeric(18,0),
		brandid numeric(18,0),  
		CategorySizeLinkID numeric(18,0),  
		categorydesc char(100),  
		Alias varchar(100),
		Opening numeric(18,0),
		Purchase numeric(18,0),
		Total numeric(18,0),
		Sale numeric(18,0),
		Closing numeric(18,0)
	)  

while (select count(*) from @Temp) > 0
begin
	select top 1 @licenseid=licenseid,@fromdate=fromdate,@todate=todate from @Temp
	insert into @tempbrand
	exec Spr_BrandwiseSummaryCore @licenseid,@fromdate,@todate
	delete from @Temp where licenseid=@licenseid and fromdate=@fromdate and todate=@todate
end

if @Brandwise = 1
	begin
		select vw.branddesc as Brand,vw.alias as Size,vw.categorydesc as Category,vw.SubCategoryName as SubCategory,CategorySizeLinkID,sum(tmp.opening) as Opening,sum(tmp.Purchase) as Purchase,sum(tmp.Total) as Total,
		sum(tmp.Sale) as Sale,sum(tmp.Closing) as Closing into #Temp1
		from @tempbrand tmp
		join vw_BrandOpeningDetails vw on vw.brandopeningid=tmp.brandopeningid
		group by vw.branddesc,vw.alias,vw.categorydesc,vw.SubCategoryName ,CategorySizeLinkID
		having sum(tmp.Total) > 0

		if @IsBulkLitre= 1
		begin
		select Brand,Size,Category,SubCategory,
		(dbo.[Fun_CalculateUnitsIntoML](opening,CategorySizeLinkID))/1000 as Opening,
		(dbo.[Fun_CalculateUnitsIntoML](Purchase,CategorySizeLinkID))/1000 as Purchase,
		(dbo.[Fun_CalculateUnitsIntoML](Total,CategorySizeLinkID))/1000 as Total,
		(dbo.[Fun_CalculateUnitsIntoML](Sale,CategorySizeLinkID))/1000 as Sale,
		(dbo.[Fun_CalculateUnitsIntoML](Closing,CategorySizeLinkID))/1000 as Closing from #Temp1
		end
		else
		begin

		select Brand,Size,Category,SubCategory,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(opening,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(opening,CategorySizeLinkID)))) as Opening,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Purchase,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Purchase,CategorySizeLinkID)))) as Purchase,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Total,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Total,CategorySizeLinkID)))) as Total,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Sale,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Sale,CategorySizeLinkID)))) as Sale,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Closing,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Closing,CategorySizeLinkID)))) as Closing
		from #Temp1
		end
--		select * from #Temp1
		drop table #Temp1

	end
else if @Categorywise = 1
	begin
		select vw.categorydesc as Category,vw.alias as Size,vw.SubCategoryName as SubCategory,CategorySizeLinkID,sum(tmp.opening) as Opening,sum(tmp.Purchase) as Purchase,sum(tmp.Total) as Total,
		sum(tmp.Sale) as Sale,sum(tmp.Closing) as Closing into #Temp2
		from @tempbrand tmp
		join vw_BrandOpeningDetails vw on vw.brandopeningid=tmp.brandopeningid
		group by vw.categorydesc,vw.alias,vw.SubCategoryName ,CategorySizeLinkID
		having sum(tmp.Total) > 0
		order by vw.categorydesc,vw.alias,vw.SubCategoryName 

		if @IsBulkLitre= 1
		begin
		select Category,Size,SubCategory,
		 (dbo.[Fun_CalculateUnitsIntoML](opening,CategorySizeLinkID))/1000 as Opening,
		(dbo.[Fun_CalculateUnitsIntoML](Purchase,CategorySizeLinkID))/1000 as Purchase,
		(dbo.[Fun_CalculateUnitsIntoML](Total,CategorySizeLinkID))/1000 as Total,
		(dbo.[Fun_CalculateUnitsIntoML](Sale,CategorySizeLinkID))/1000 as Sale,
		(dbo.[Fun_CalculateUnitsIntoML](Closing,CategorySizeLinkID))/1000 as Closing from #Temp2
		end
		else
		begin
		select Category,Size,SubCategory,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(opening,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(opening,CategorySizeLinkID)))) as Opening,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Purchase,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Purchase,CategorySizeLinkID)))) as Purchase,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Total,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Total,CategorySizeLinkID)))) as Total,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Sale,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Sale,CategorySizeLinkID)))) as Sale,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Closing,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Closing,CategorySizeLinkID)))) as Closing
		from #Temp2
		end
--		select * from #Temp2
		drop table #Temp2
	end
else if @SubCategorywise = 1
	begin
		select vw.SubCategoryName as SubCategory,vw.alias as Size,CategorySizeLinkID,sum(tmp.opening) as Opening,sum(tmp.Purchase) as Purchase,sum(tmp.Total) as Total,
		sum(tmp.Sale) as Sale,sum(tmp.Closing) as Closing into #Temp3
		from @tempbrand tmp
		join vw_BrandOpeningDetails vw on vw.brandopeningid=tmp.brandopeningid
		group by vw.categorydesc ,vw.alias,vw.SubCategoryName ,CategorySizeLinkID
		having sum(tmp.Total) > 0
		order by vw.alias,vw.SubCategoryName 

		if @IsBulkLitre= 1
		begin
		select SubCategory,Size,
		(dbo.[Fun_CalculateUnitsIntoML](opening,CategorySizeLinkID))/1000 as Opening,
		(dbo.[Fun_CalculateUnitsIntoML](Purchase,CategorySizeLinkID))/1000 as Purchase,
		(dbo.[Fun_CalculateUnitsIntoML](Total,CategorySizeLinkID))/1000 as Total,
		(dbo.[Fun_CalculateUnitsIntoML](Sale,CategorySizeLinkID))/1000 as Sale,
		(dbo.[Fun_CalculateUnitsIntoML](Closing,CategorySizeLinkID))/1000 as Closing from #Temp3
		end
		else
		begin
		select SubCategory,Size,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(opening,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(opening,CategorySizeLinkID)))) as Opening,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Purchase,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Purchase,CategorySizeLinkID)))) as Purchase,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Total,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Total,CategorySizeLinkID)))) as Total,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Sale,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Sale,CategorySizeLinkID)))) as Sale,
		ltrim(rtrim(convert(varchar,dbo.Fun_Calcbottlefromspeg(Closing,CategorySizeLinkID)) + '.' + convert(varchar,dbo.Fun_Calcspegfromspeg(Closing,CategorySizeLinkID)))) as Closing
		from #Temp3
		end
--		select * from #Temp3
		drop table #Temp3

		end




set @Outbit = 1
set @OutMsg='Success'
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchInterfaceFilePurchase') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchInterfaceFilePurchase
GO

CREATE Proc Spr_FetchInterfaceFilePurchase
@XmlDocBrand xml
as
begin

declare @hdocBrand int          
exec sp_xml_preparedocument @hdocBrand output, @XmlDocBrand          

declare @tempintfile table
(
SupplierCode varchar(100),
TPNO varchar(50),
ChalanNo varchar(50),
PurchaseDate smalldatetime,
ExtraCharge numeric(14,2),
GRNForCode varchar(50),
ItemCode  varchar(50),
Quantity numeric(14,2),
Rate numeric(14,2),
FreeQty numeric(14,2)
)

	--	select @XmlDocBrand

	insert into @tempintfile          
	(SupplierCode,TPNO,ChalanNo,PurchaseDate,ExtraCharge,GRNForCode,ItemCode,Quantity,Rate,FreeQty)
	select          
	SupplierCode,TPNO,ChalanNo,PurchaseDate,ExtraCharge,GRNForCode,ItemCode,Quantity,Rate,FreeQty
	From OpenXML(@hdocBrand,'/Interface/PurchaseInterface/Brand') with                          
	(          
		SupplierCode varchar(100),
		TPNO varchar(50),
		ChalanNo varchar(50),
		PurchaseDate smalldatetime,
		ExtraCharge numeric(14,2),
		GRNForCode varchar(50),
		ItemCode  varchar(50),
		Quantity numeric(14,2),
		Rate numeric(14,2),
		FreeQty numeric(14,2)        
	)


	 --select * from @tempintfile

select lc.LicenseID,l.LicenseDesc,s.SupplierID,s.SupplierName,tmp.TPNO,tmp.ChalanNo,convert(varchar,tmp.PurchaseDate,106) as PurchaseDate,tmp.ExtraCharge,
vw.branddesc as Brand, vw.alias as [Size], vw.brandopeningid,0 as SQuantity,
0 as SRate,Quantity as BottleQty,Rate as BottleRate,tmp.FreeQty,0 as NoOfBox,0 as CategoryTaxID,0 as TaxPer,'' as BatchNo,'' as Mfg
 from
@tempintfile tmp
join tbl_Supplier s on s.SupplierCode=tmp.SupplierCode
join tbl_mmscode mms on  mms.Brandcode = tmp.ItemCode
join vw_brandopeningdetails vw on vw.brandid = mms.brandid and vw.licenseid = mms.licenseid and vw.sizeid = mms.sizeid
join tbl_licensecode lc on lc.LicenseCode = tmp.GRNForCode
join tbl_license l on lc.LicenseID = l.LicenseID and mms.licenseid = l.licenseid
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchInterfaceFileTransfer') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchInterfaceFileTransfer
GO

CREATE Proc Spr_FetchInterfaceFileTransfer
@XmlDocBrand xml
as
begin

declare @hdocBrand int          
exec sp_xml_preparedocument @hdocBrand output, @XmlDocBrand          

declare @tempintfile table
(
	idn int identity(1,1),

	TransferDate smalldatetime,
	TPNO varchar(50),
	FromLicenseCode varchar(20),
	ToLicenseCode varchar(20),
	ItemCode varchar(20),
	Quantity numeric(18,0),
	Rate numeric(14,2)
)

	-------Unused Table----------
	--Used for stock procedure          
	declare @inserttemptable table     
	(          
		brandid numeric(18,0),        
		BrandStock varchar(200)          
	)      
	-------Unused Table----------                    

	--	select @XmlDocBrand

	insert into @tempintfile          
	(TransferDate,TPNO,FromLicenseCode,ToLicenseCode,ItemCode,Quantity,Rate)
	select          
	TransferDate,TPNO,FromLicenseCode,ToLicenseCode,ItemCode,Quantity,Rate
	From OpenXML(@hdocBrand,'/Interface/TransferInterface/Brand') with                          
	(          
		TransferDate smalldatetime,
		TPNO varchar(50),
		FromLicenseCode varchar(20),
		ToLicenseCode varchar(20),
		ItemCode varchar(20),
		Quantity numeric(18,0),
		Rate numeric(14,2)    
	)

	--select * from @tempintfile
	--select distinct tolicensecode from @tempintfile

	select
	tmp.idn,
	tmp.TransferDate as TransferDate, tmp.TPNO as TPHead, '' as InvoiceNo, lc2.LicenseID as ForLicenseID, '' as FLIV, '' as FLIVAddress, lc1.LicenseID as LicenseID,
	0 as DeptID, vw1.brandopeningid, '' as against, '' as tpno, '' as batch, '' as mfg, 0 as box, '' as remarks, 0 as spegqty, 0 as spegrate,
	vw1.branddesc as Brand, vw1.alias as [Size], tmp.Quantity as BottleQty, tmp.Rate as BottleRate, vw2.brandopeningid as ForBrandopeningid,
	--select l1.licensedesc, l2.licensedesc
	dbo.Fun_Calcunits(vw1.CategorySizeLinkUpID, tmp.Quantity, 0) as UnitQty, 0 as ActualQuantity, 0 as IsNegative
	into #tempTransfer
	from @tempintfile tmp	
	join tbl_licensecode lc1 on lc1.LicenseCode = tmp.FromLicenseCode
	join tbl_license l1 on lc1.LicenseID = l1.LicenseID
	join tbl_licensecode lc2 on lc2.LicenseCode = tmp.ToLicenseCode
	join tbl_license l2 on lc2.LicenseID = l2.LicenseID
	join tbl_mmscode mms1 on  mms1.Brandcode = tmp.ItemCode and mms1.licenseid = l1.LicenseID
	join tbl_mmscode mms2 on  mms2.Brandcode = tmp.ItemCode and mms2.licenseid = l2.LicenseID
	join vw_brandopeningdetails vw1 on vw1.licenseid = l1.licenseid and vw1.brandid = mms1.BrandID and vw1.sizeid = mms1.sizeid
	join vw_brandopeningdetails vw2 on vw2.licenseid = l2.licenseid and vw2.brandid = mms2.BrandID and vw2.sizeid = mms2.sizeid
	where tmp.Quantity > 0

	union all

	select
	tmp.idn,
	tmp.TransferDate as TransferDate, tmp.TPNO as TPHead, '' as InvoiceNo, 0 as ForLicenseID, '' as FLIV, '' as FLIVAddress, 
	lc1.LicenseID as LicenseID,	d.DeptID as DeptID, vw1.brandopeningid, '' as against, '' as tpno, '' as batch, '' as mfg, 0 as box, '' as remarks, 0 as spegqty, 0 as spegrate,
	vw1.branddesc as Brand, vw1.alias as [Size], tmp.Quantity as BottleQty, tmp.Rate as BottleRate, vw1.brandopeningid as ForBrandopeningid,
	--select l1.licensedesc, l2.licensedesc
	dbo.Fun_Calcunits(vw1.CategorySizeLinkUpID, tmp.Quantity, 0) as UnitQty, 0 as ActualQuantity, 0 as IsNegative
	from @tempintfile tmp	
	join tbl_licensecode lc1 on lc1.LicenseCode = tmp.FromLicenseCode
	join tbl_license l1 on lc1.LicenseID = l1.LicenseID
	join tbl_DeptMaster d on ltrim(rtrim(d.ShortDesc)) = ltrim(rtrim(tmp.ToLicenseCode))
	join tbl_mmscode mms1 on  mms1.Brandcode = tmp.ItemCode and mms1.licenseid = l1.LicenseID
	join vw_brandopeningdetails vw1 on vw1.licenseid = l1.licenseid and vw1.brandid = mms1.BrandID and vw1.sizeid = mms1.sizeid
	where tmp.Quantity > 0
	order by tmp.TPNO

	declare @maxIdn int
	declare @Idn int

	declare @BrandOpeningID numeric(18,0)  
	declare @CategorySizeLinkUpID numeric(18,0)          
	declare @BrandID numeric(18,0)          
	declare @stockqty numeric(18,0)          
	declare @saleqty numeric(18,0)
	declare @date smalldatetime
	declare @licenseid numeric(18,0)

	set @BrandOpeningID = 0
	set @CategorySizeLinkUpID = 0
	set @BrandID = 0
	set @stockqty = 0
	set @saleqty = 0

	select @maxIdn = isnull(max(idn),1) from #tempTransfer
	set @Idn = 1

	while @Idn <= @maxIdn
	begin
		select @BrandOpeningID = isnull(BrandOpeningID,0), @saleqty = isnull(UnitQty,0) ,
		@date = TransferDate, @licenseid = licenseid
		from #tempTransfer where idn = @idn
		
		if (@BrandOpeningID <> 0)
		begin
			select @BrandID = BrandID, @CategorySizeLinkUpID = CategorySizeLinkUpID from Tbl_BrandOpening where BrandOpeningID = @BrandOpeningID
			insert into @inserttemptable exec Spr_FetchBrandQuntity @date, @brandid, @licenseid, @CategorySizeLinkUpID, @stockqty output
			
			update #tempTransfer set ActualQuantity = @stockqty, IsNegative = 0 where idn = @idn

			if @saleqty > @stockqty
			begin
				update #tempTransfer set ActualQuantity = @stockqty, IsNegative = 1 where idn = @idn
			end
		end

		set @Idn = @Idn + 1
	end
	
	select
	convert(varchar,TransferDate,106) as TransferDate,
	TPHead, InvoiceNo, ForLicenseID, FLIV,  FLIVAddress, LicenseID, DeptID, brandopeningid, against, tpno, batch, mfg, box, remarks, spegqty, 
	spegrate, Brand, Size, BottleQty, BottleRate, ForBrandopeningid, UnitQty, ActualQuantity, convert(bit,IsNegative) as IsNegative from #tempTransfer	

	drop table #tempTransfer 

	/*
	--select * from tbl_mmscode
	--select * from vw_brandopeningdetails
	select lc1.LicenseID as FromLicenseID,l1.LicenseDesc as FromLicense,lc2.LicenseID as ToLicenseID,l1.LicenseDesc as ToLicense,tmp.TPNO,
	convert(varchar,tmp.TransferDate,106) as TransferDate,
	vw.branddesc as Brand, vw.alias as [Size], vw.brandopeningid,Quantity as BottleQty,Rate as BottleRate
	from
	@tempintfile tmp
	join tbl_mmscode mms on  mms.Brandcode = tmp.ItemCode
	join vw_brandopeningdetails vw on vw.brandid = mms.brandid and vw.licenseid = mms.licenseid and vw.sizeid = mms.sizeid
	join tbl_licensecode lc1 on lc1.LicenseCode = tmp.FromLicenseCode
	join tbl_license l1 on lc1.LicenseID = l1.LicenseID
	join tbl_licensecode lc2 on lc2.LicenseCode = tmp.ToLicenseCode
	join tbl_license l2 on lc2.LicenseID = l2.LicenseID
	order by tmp.TPNO
	*/
end
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_SavePurchaseInterface') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_SavePurchaseInterface
GO

Create Procedure Spr_SavePurchaseInterface
@xmlpurchase xml,
@username varchar(100),
@Outbit bit output,
@OutMsg varchar(50) output
As
Begin
--[Spr_Savepurchase]

declare @hdocBrand int

/*
--set @xmlpurchase = '<Master><Purchase><Purchasedetail SupplierID="1" TPNO="" InvoiceNo="0015854" PurchaseDate="22 Jan 2011" ExtraCharge="0.00" LicenseID="1" BrandopeningId="5" SQuantity="0" SRate="0" BottleQty="3888.00" BottleRate="12.50" FreeQty="0.00" Noofbox="0" CategoryTaxID="0" taxper="0" batchNo="" Mfg="" /><Purchasedetail SupplierID="1" TPNO="" InvoiceNo="4306" PurchaseDate="01 Jun 2011" ExtraCharge="0.00" LicenseID="1" BrandopeningId="5" SQuantity="0" SRate="0" BottleQty="2395.00" BottleRate="12.50" FreeQty="0.00" Noofbox="0" CategoryTaxID="0" taxper="0" batchNo="" Mfg="" /><Purchasedetail SupplierID="1" TPNO="" InvoiceNo="14626" PurchaseDate="07 Nov 2011" ExtraCharge="0.00" LicenseID="1" BrandopeningId="5" SQuantity="0" SRate="0" BottleQty="960.00" BottleRate="13.21" FreeQty="0.00" Noofbox="0" CategoryTaxID="0" taxper="0" batchNo="" Mfg="" /></Purchase></Master>'
*/
exec sp_xml_preparedocument @hdocBrand output, @xmlpurchase

declare @temp table
(
	SupplierID numeric(18,0),
	TPNO varchar(50),
	InvoiceNo varchar(50),
	PurchaseDate smalldatetime,
	ExtraCharge numeric(14,2),
	LicenseID numeric(18,0),
	BrandopeningId numeric(18,0),
	SQuantity numeric(18,0),
	SRate numeric(14,2),
	BottleQty numeric(18,0),
	BottleRate numeric(14,2),
	FreeQty numeric(18,0),
	Noofbox numeric(18,2),
	CategoryTaxID numeric(18,0),
	taxper numeric(14,2),
	batchNo varchar(50),
	Mfg varchar(50)
)
insert into @temp
(SupplierID,TPNO,InvoiceNo,PurchaseDate,ExtraCharge,LicenseID,BrandopeningId,SQuantity,SRate,BottleQty,BottleRate,FreeQty,Noofbox,CategoryTaxID,taxper,batchNo,Mfg)
select          
SupplierID,TPNO,InvoiceNo,PurchaseDate,ExtraCharge,LicenseID,BrandopeningId,SQuantity,SRate,BottleQty,BottleRate,FreeQty,Noofbox,CategoryTaxID,taxper,batchNo,Mfg
From OpenXML(@hdocBrand,'/Master/Purchase/Purchasedetail') with                          
(          
	SupplierID numeric(18,0),
	TPNO varchar(50),
	InvoiceNo varchar(50),
	PurchaseDate smalldatetime,
	ExtraCharge numeric(14,2),
	LicenseID numeric(18,0),
	BrandopeningId numeric(18,0),
	SQuantity numeric(18,0),
	SRate numeric(14,2),
	BottleQty numeric(18,0),
	BottleRate numeric(14,2),
	FreeQty numeric(18,0),
	Noofbox numeric(18,2),
	CategoryTaxID numeric(18,0),
	taxper numeric(14,2),
	batchNo varchar(50),
	Mfg varchar(50)
)
select * from @temp order by purchasedate, invoiceno

declare @SupplierID numeric(18,0)
declare @TPNO varchar(50)
declare @InvoiceNo varchar(50)
declare @PurchaseDate smalldatetime
declare @xmlstr varchar(max)
declare @ExtraCharge numeric(14,2)
declare @LicenseID numeric(18,0)

	while(select count(SupplierID) from @temp) > 0
	Begin
		select top 1 @SupplierID = SupplierID, @TPNO = TPNO, @InvoiceNo = InvoiceNo, @PurchaseDate = PurchaseDate, @LicenseID = LicenseID, 
		@ExtraCharge = ExtraCharge 
		from @temp		
		
		set @xmlstr = '<Master><Purchase>'
		select @xmlstr = @xmlstr + '<Purchasedetail BrandopeningId="' + convert(varchar,BrandopeningId) + '" SQuantity="' + convert(varchar,SQuantity) + '" SRate="' + convert(varchar,SRate) + '" BottleQty="' + convert(varchar,BottleQty) + '" BottleRate="' + convert(varchar,BottleRate) + '" FreeQty="' + convert(varchar,FreeQty) + '" Noofbox="' + convert(varchar,Noofbox) + '" CategoryTaxID="' + convert(varchar,CategoryTaxID) + '" taxper="' + convert(varchar,taxper) + '" batchNo="' + convert(varchar,batchNo) + '" Mfg="' + convert(varchar,Mfg) + '"/>'
		from @temp
		where SupplierID = @SupplierID and TPNO = @TPNO and InvoiceNo = @InvoiceNo and PurchaseDate = @PurchaseDate	
		set @xmlstr = @xmlstr + '</Purchase></Master>'


		--select @xmlstr
		exec [Spr_Savepurchase] 0, @SupplierID, @TPNO, @InvoiceNo, @PurchaseDate, '', @ExtraCharge, 0, 0, 0, @LicenseID, @xmlstr, @username, 0, ''

		delete from @temp where SupplierID = @SupplierID and TPNO = @TPNO and InvoiceNo = @InvoiceNo and PurchaseDate = @PurchaseDate
	End

set @Outbit  = 1
set @OutMsg  = 'Saved successfully'

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_SaveTransferInterface') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_SaveTransferInterface
GO

CREATE Procedure Spr_SaveTransferInterface
@xmltransfer xml,
@Username varchar(100),
@Outbit bit output,
@OutMsg varchar(100) output
AS
Begin


/*

@TransferHeadID numeric(18,0),                  
@TransferDate datetime,                  
@Tpno varchar(50),                  
@InvoiceNo varchar(50), 
@ForLicenseID numeric(18,0),                  
@FLIV varchar(50),   
@FLIVAddress varchar(500),                    
@LicenseID numeric(18,0),          
@DeptID numeric(18,0),                 
@XmlDoc xml,               
@UserName varchar(100),                  
@OutBit bit Output,                   
@OutMsg varchar(100) output  

*/
	Declare @hDoc int                                            
	EXEC sp_xml_preparedocument @hDoc Output, @xmltransfer 

declare @temptransfer table
(
	TransferDate datetime,
	TPHead varchar(50),                  
	InvoiceNo varchar(50), 
	ForLicenseID numeric(18,0),                  
	FLIV varchar(50),   
	FLIVAddress varchar(500),                    
	LicenseID numeric(18,0),          
	DeptID numeric(18,0),
	BrandopeningId numeric(18,0),                      
	against char(2),                             
	tpno varchar(50),                      
	batch varchar(50),                      
	mfg varchar(50),                      
	box varchar(10),                      
	remarks varchar(500),                    
	spegqty numeric(18,0),            
	spegrate numeric(14,2),            
	bottleqty numeric(18,0),            
	bottlerate numeric(14,2),    
	ForBrandOpeningID NUMERIC(18,0)
)



	insert into @temptransfer
	(TransferDate,TPHead,InvoiceNo,ForLicenseID,FLIV,FLIVAddress,LicenseID,DeptID,BrandopeningId,against,tpno,batch,mfg,box,remarks,spegqty,spegrate,
	bottleqty,bottlerate,ForBrandOpeningID)
	Select
	TransferDate,TPHead,InvoiceNo,ForLicenseID,FLIV,FLIVAddress,LicenseID,DeptID,BrandopeningId,against,tpno,batch,mfg,box,remarks,spegqty,spegrate,
	bottleqty,bottlerate,ForBrandOpeningID
	From OpenXML(@hDoc,'/Master/Transfer/Transferdetail') with                                      
	(
		TransferDate datetime,
		TPHead varchar(50),                  
		InvoiceNo varchar(50), 
		ForLicenseID numeric(18,0),                  
		FLIV varchar(50),   
		FLIVAddress varchar(500),                    
		LicenseID numeric(18,0),          
		DeptID numeric(18,0),
		BrandopeningId numeric(18,0),                      
		against char(2),                             
		TPNO varchar(50),                      
		batch varchar(50),                      
		mfg varchar(50),                      
		box varchar(10),                      
		remarks varchar(500),                    
		spegqty numeric(18,0),            
		spegrate numeric(14,2),            
		bottleqty numeric(18,0),            
		bottlerate numeric(14,2),    
		ForBrandOpeningID NUMERIC(18,0)          
	)

	--select * from @temptransfer

	declare @TransferDate datetime
	declare @TPHead varchar(50)                  
	declare @ForLicenseID numeric(18,0)
	declare @DeptId numeric(18,0)
	declare @LicenseID numeric(18,0)
	declare @xmlstr varchar(max)

	declare @rowcnt int --used to for negative stock check if all are negative then nothing should get saved
	set @rowcnt = 0

	while(select count(TransferDate) from @temptransfer) > 0
	begin
		select top 1 @TransferDate = TransferDate, @TPHead = TPHead, @ForLicenseID = ForLicenseID, @LicenseID = LicenseID, @DeptId = DeptId from @temptransfer
		
		select @rowcnt = isnull(count(BrandopeningId),0) from @temptransfer
		where TransferDate = @TransferDate and TPHead = @TPHead and ForLicenseID = @ForLicenseID and LicenseID = @LicenseID and DeptId = @DeptId

		if @rowcnt > 0
		begin

			set @xmlstr = '<Master><Transfer>'
			select @xmlstr = @xmlstr + '<transferdetail BrandopeningId="' + convert(varchar,BrandopeningId) + 
			'" against="' + convert(varchar,against) + '" tpno="' + convert(varchar,tpno) + '" batch="' + convert(varchar,batch) + 
			'" mfg="' + convert(varchar,mfg) + '" box="' + convert(varchar,box) + '" remarks="' + convert(varchar,remarks) + 
			'" spegqty="' + convert(varchar,spegqty) + '" spegrate="' + convert(varchar,spegrate) + '" bottleqty="' + convert(varchar,bottleqty) + 
			'" bottlerate="' + convert(varchar,bottlerate) + '" ForBrandOpeningID="' + convert(varchar,ForBrandOpeningID) + '"/>'
			from @temptransfer
			--where SupplierID = @SupplierID and TPNO = @TPNO and InvoiceNo = @InvoiceNo and PurchaseDate = @PurchaseDate	
			where TransferDate = @TransferDate and TPHead = @TPHead and ForLicenseID = @ForLicenseID and LicenseID = @LicenseID and DeptId = @DeptId
			set @xmlstr = @xmlstr + '</Transfer></Master>'

			--select 'Spr_SaveTransferMaster 0, '+convert(varchar,@TransferDate,106)+', '''+@TPHead+''', '''+@TPHead+''', '+convert(varchar,@ForLicenseID)+', '''', '''', '+convert(varchar,@LicenseID)+', 0, '''+@xmlstr+''', '''+@UserName+''', 0, '''' '
			exec Spr_SaveTransferMaster 0, @TransferDate, @TPHead, @TPHead, @ForLicenseID, '', '', @LicenseID, @DeptId, @xmlstr, @UserName, 0, ''

		end
		delete from @temptransfer 
		where TransferDate = @TransferDate and TPHead = @TPHead and ForLicenseID = @ForLicenseID and LicenseID = @LicenseID
	end

	set @Outbit  = 1
	set @OutMsg = 'saved successfully'

End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchInterfaceFileTransferSetUp') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchInterfaceFileTransferSetUp
GO

CREATE Procedure Spr_FetchInterfaceFileTransferSetUp
As
Begin
	select isnull(FilePath,'') as FilePath,isnull(BackupFilePath,'') as BackupFilePath, 
	isnull(FilePrefix,'') as FilePrefix, isnull(FileExtension,'') as FileExtension
	from Tbl_InterfaceFileTransferSetUp
End
GO

IF  EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'Spr_FetchInterfaceFilePurchaseSetUp') AND OBJECTPROPERTY(id,N'IsProcedure') = 1)
DROP PROCEDURE Spr_FetchInterfaceFilePurchaseSetUp
GO

CREATE Procedure Spr_FetchInterfaceFilePurchaseSetUp
As
Begin
	select isnull(FilePath,'') as FilePath,isnull(BackupFilePath,'') as BackupFilePath ,
	isnull(FilePrefix,'') as FilePrefix, isnull(FileExtension,'') as FileExtension
	from Tbl_InterfaceFilePurchaseSetUp
End
GO
